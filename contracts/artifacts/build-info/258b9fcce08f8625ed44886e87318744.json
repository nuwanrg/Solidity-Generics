{
	"id": "258b9fcce08f8625ed44886e87318744",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/UniswapV3SingleHopSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\n\n\n\n\ncontract UniswapV3SingleHopSwap {\n   \n    \n    address constant WETH = 0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14;\n    address constant USDC = 0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238;\n\n\n    ISwapRouter public immutable swapRouter;\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant poolFee = 3000;\n\n // address SWAP_ROUTER_02=0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E; sepholia\n    constructor (ISwapRouter _swapRouter){\n        swapRouter = _swapRouter;\n    }\n\n        /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\n    /// @return amountOut The amount of WETH9 received.\n    function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {\n        // msg.sender must approve this contract\n\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amountIn);\n\n        // Approve the router to spend DAI.\n        TransferHelper.safeApprove(USDC, address(swapRouter), amountIn);\n\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter.ExactInputSingleParams memory params =\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: USDC,\n                tokenOut: WETH,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n\n/// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The exact amount of WETH9 to receive from the swap.\n    /// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n    /// @return amountIn The amount of DAI actually spent in the swap.\n    function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amountInMaximum);\n\n        // Approve the router to spend the specifed `amountInMaximum` of DAI.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\n        TransferHelper.safeApprove(USDC, address(swapRouter), amountInMaximum);\n\n        ISwapRouter.ExactOutputSingleParams memory params =\n            ISwapRouter.ExactOutputSingleParams({\n                tokenIn: USDC,\n                tokenOut: WETH,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n        if (amountIn < amountInMaximum) {\n            TransferHelper.safeApprove(USDC, address(swapRouter), 0);\n            TransferHelper.safeTransfer(USDC, msg.sender, amountInMaximum - amountIn);\n        }\n    }\n\n}"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE LOG1 POP PUSH9 0xD1EDDDCA978E124D43 SAR 0x2E SWAP13 0xDB PC SIGNEXTEND 0x25 JUMPI SWAP4 0xF8 0xCE BASEFEE BLOBBASEFEE SDIV BALANCE POP SWAP11 ORIGIN SSTORE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE LOG1 POP PUSH9 0xD1EDDDCA978E124D43 SAR 0x2E SWAP13 0xDB PC SIGNEXTEND 0x25 JUMPI SWAP4 0xF8 0xCE BASEFEE BLOBBASEFEE SDIV BALANCE POP SWAP11 ORIGIN SSTORE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/UniswapV3SingleHopSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/UniswapV3SingleHopSwap.sol": {
				"UniswapV3SingleHopSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "poolFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMaximum",
									"type": "uint256"
								}
							],
							"name": "swapExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"swapExactInputSingle(uint256)": {
								"details": "The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.",
								"params": {
									"amountIn": "The exact amount of DAI that will be swapped for WETH9."
								},
								"returns": {
									"amountOut": "The amount of WETH9 received."
								}
							},
							"swapExactOutputSingle(uint256,uint256)": {
								"details": "The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.",
								"params": {
									"amountInMaximum": "The amount of DAI we are willing to spend to receive the specified amount of WETH9.",
									"amountOut": "The exact amount of WETH9 to receive from the swap."
								},
								"returns": {
									"amountIn": "The amount of DAI actually spent in the swap."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/UniswapV3SingleHopSwap.sol\":201:4590  contract UniswapV3SingleHopSwap {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":622:700  constructor (ISwapRouter _swapRouter){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":682:693  _swapRouter */\n  dup1\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":669:693  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":622:700  constructor (ISwapRouter _swapRouter){... */\n  pop\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":201:4590  contract UniswapV3SingleHopSwap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_12:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_23\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_13:\n    /* \"#utility.yul\":781:824   */\n  tag_25\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_26:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_14:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_28\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1431   */\ntag_3:\n    /* \"#utility.yul\":1131:1137   */\n  0x00\n    /* \"#utility.yul\":1180:1182   */\n  0x20\n    /* \"#utility.yul\":1168:1177   */\n  dup3\n    /* \"#utility.yul\":1159:1166   */\n  dup5\n    /* \"#utility.yul\":1155:1178   */\n  sub\n    /* \"#utility.yul\":1151:1183   */\n  slt\n    /* \"#utility.yul\":1148:1267   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1186:1265   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1148:1267   */\ntag_30:\n    /* \"#utility.yul\":1306:1307   */\n  0x00\n    /* \"#utility.yul\":1331:1414   */\n  tag_32\n    /* \"#utility.yul\":1406:1413   */\n  dup5\n    /* \"#utility.yul\":1397:1403   */\n  dup3\n    /* \"#utility.yul\":1386:1395   */\n  dup6\n    /* \"#utility.yul\":1382:1404   */\n  add\n    /* \"#utility.yul\":1331:1414   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1321:1414   */\n  swap2\n  pop\n    /* \"#utility.yul\":1277:1424   */\n  pop\n    /* \"#utility.yul\":1042:1431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":201:4590  contract UniswapV3SingleHopSwap {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":201:4590  contract UniswapV3SingleHopSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x089fe6aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x73bd43ad\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc4b69a18\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":498:535  uint24 public constant poolFee = 3000 */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1174:2350  function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":394:433  ISwapRouter public immutable swapRouter */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2974:4587  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":498:535  uint24 public constant poolFee = 3000 */\n    tag_8:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":531:535  3000 */\n      0x0bb8\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":498:535  uint24 public constant poolFee = 3000 */\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1174:2350  function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {... */\n    tag_14:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1240:1257  uint256 amountOut */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1385:1459  TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amountIn) */\n      tag_27\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":344:386  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1423:1433  msg.sender */\n      caller\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1443:1447  this */\n      address\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1450:1458  amountIn */\n      dup6\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1385:1416  TransferHelper.safeTransferFrom */\n      tag_28\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1385:1459  TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amountIn) */\n      jump\t// in\n    tag_27:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1514:1577  TransferHelper.safeApprove(USDC, address(swapRouter), amountIn) */\n      tag_29\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":344:386  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1555:1565  swapRouter */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1568:1576  amountIn */\n      dup5\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1514:1540  TransferHelper.safeApprove */\n      tag_30\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1514:1577  TransferHelper.safeApprove(USDC, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_29:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1825:1873  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":344:386  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":272:314  0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14 */\n      0xfff9976782d46cc05630d1f6ebab18b2324d6b14\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":531:535  3000 */\n      0x0bb8\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2045:2055  msg.sender */\n      caller\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2083:2098  block.timestamp */\n      timestamp\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2126:2134  amountIn */\n      dup5\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2170:2171  0 */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2208:2209  0 */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1825:2224  ISwapRouter.ExactInputSingleParams memory params =... */\n      swap1\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2308:2318  swapRouter */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2308:2335  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2336:2342  params */\n      dup3\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2308:2343  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2296:2343  amountOut = swapRouter.exactInputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1259:2350  {... */\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1174:2350  function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":394:433  ISwapRouter public immutable swapRouter */\n    tag_18:\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2974:4587  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {... */\n    tag_24:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3067:3083  uint256 amountIn */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3161:3242  TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amountInMaximum) */\n      tag_38\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":344:386  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3199:3209  msg.sender */\n      caller\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3219:3223  this */\n      address\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3226:3241  amountInMaximum */\n      dup6\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3161:3192  TransferHelper.safeTransferFrom */\n      tag_28\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3161:3242  TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amountInMaximum) */\n      jump\t// in\n    tag_38:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3468:3538  TransferHelper.safeApprove(USDC, address(swapRouter), amountInMaximum) */\n      tag_39\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":344:386  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3509:3519  swapRouter */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3522:3537  amountInMaximum */\n      dup5\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3468:3494  TransferHelper.safeApprove */\n      tag_30\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3468:3538  TransferHelper.safeApprove(USDC, address(swapRouter), amountInMaximum) */\n      jump\t// in\n    tag_39:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3549:3598  ISwapRouter.ExactOutputSingleParams memory params */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3613:3965  ISwapRouter.ExactOutputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":344:386  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3613:3965  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":272:314  0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14 */\n      0xfff9976782d46cc05630d1f6ebab18b2324d6b14\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3613:3965  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":531:535  3000 */\n      0x0bb8\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3613:3965  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3771:3781  msg.sender */\n      caller\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3613:3965  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3809:3824  block.timestamp */\n      timestamp\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3613:3965  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3853:3862  amountOut */\n      dup6\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3613:3965  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3897:3912  amountInMaximum */\n      dup5\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3613:3965  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3949:3950  0 */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3613:3965  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3549:3965  ISwapRouter.ExactOutputSingleParams memory params =... */\n      swap1\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4089:4099  swapRouter */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4089:4117  swapRouter.exactOutputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdb3e2198\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4118:4124  params */\n      dup3\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4089:4125  swapRouter.exactOutputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_44:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4078:4125  amountIn = swapRouter.exactOutputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4396:4411  amountInMaximum */\n      dup3\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4385:4393  amountIn */\n      dup3\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4385:4411  amountIn < amountInMaximum */\n      lt\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4381:4581  if (amountIn < amountInMaximum) {... */\n      iszero\n      tag_45\n      jumpi\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4427:4483  TransferHelper.safeApprove(USDC, address(swapRouter), 0) */\n      tag_46\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":344:386  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4468:4478  swapRouter */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4481:4482  0 */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4427:4453  TransferHelper.safeApprove */\n      tag_30\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4427:4483  TransferHelper.safeApprove(USDC, address(swapRouter), 0) */\n      jump\t// in\n    tag_46:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4497:4570  TransferHelper.safeTransfer(USDC, msg.sender, amountInMaximum - amountIn) */\n      tag_47\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":344:386  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4531:4541  msg.sender */\n      caller\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4561:4569  amountIn */\n      dup5\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4543:4558  amountInMaximum */\n      dup7\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4543:4569  amountInMaximum - amountIn */\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4497:4524  TransferHelper.safeTransfer */\n      tag_50\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4497:4570  TransferHelper.safeTransfer(USDC, msg.sender, amountInMaximum - amountIn) */\n      jump\t// in\n    tag_47:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":4381:4581  if (amountIn < amountInMaximum) {... */\n    tag_45:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":3085:4587  {... */\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2974:4587  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_28:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":715:732  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:753  token */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":782:810  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":812:816  from */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":818:820  to */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":822:827  value */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_52\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_58\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_57)\n    tag_58:\n      0x60\n      swap2\n      pop\n    tag_57:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_59\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":874:875  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:863  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_60\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n    tag_60:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_59:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":690:919  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_30:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_69:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_72\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_71)\n    tag_72:\n      0x60\n      swap2\n      pop\n    tag_71:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2136:2137  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2125  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_74\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_75:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_74:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_73:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n    tag_50:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1325:1337  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1339:1356  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1365  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1370  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1394:1418  IERC20.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1420:1422  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1424:1429  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_80\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_81:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_84\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_83)\n    tag_84:\n      0x60\n      swap2\n      pop\n    tag_83:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1324:1431  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1456  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_85\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1476:1477  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1465  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1472  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1477  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1492:1496  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1481:1505  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_87:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n    tag_86:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_85:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1441:1513  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1314:1520  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:98   */\n    tag_91:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:91   */\n      0xffffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:92   */\n      and\n        /* \"#utility.yul\":61:92   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:98   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":104:219   */\n    tag_92:\n        /* \"#utility.yul\":189:212   */\n      tag_133\n        /* \"#utility.yul\":206:211   */\n      dup2\n        /* \"#utility.yul\":189:212   */\n      tag_91\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":184:187   */\n      dup3\n        /* \"#utility.yul\":177:213   */\n      mstore\n        /* \"#utility.yul\":104:219   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":225:443   */\n    tag_10:\n        /* \"#utility.yul\":316:320   */\n      0x00\n        /* \"#utility.yul\":354:356   */\n      0x20\n        /* \"#utility.yul\":343:352   */\n      dup3\n        /* \"#utility.yul\":339:357   */\n      add\n        /* \"#utility.yul\":331:357   */\n      swap1\n      pop\n        /* \"#utility.yul\":367:436   */\n      tag_135\n        /* \"#utility.yul\":433:434   */\n      0x00\n        /* \"#utility.yul\":422:431   */\n      dup4\n        /* \"#utility.yul\":418:435   */\n      add\n        /* \"#utility.yul\":409:415   */\n      dup5\n        /* \"#utility.yul\":367:436   */\n      tag_92\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":225:443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":530:647   */\n    tag_94:\n        /* \"#utility.yul\":639:640   */\n      0x00\n        /* \"#utility.yul\":636:637   */\n      dup1\n        /* \"#utility.yul\":629:641   */\n      revert\n        /* \"#utility.yul\":776:853   */\n    tag_96:\n        /* \"#utility.yul\":813:820   */\n      0x00\n        /* \"#utility.yul\":842:847   */\n      dup2\n        /* \"#utility.yul\":831:847   */\n      swap1\n      pop\n        /* \"#utility.yul\":776:853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":859:981   */\n    tag_97:\n        /* \"#utility.yul\":932:956   */\n      tag_141\n        /* \"#utility.yul\":950:955   */\n      dup2\n        /* \"#utility.yul\":932:956   */\n      tag_96\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":925:930   */\n      dup2\n        /* \"#utility.yul\":922:957   */\n      eq\n        /* \"#utility.yul\":912:975   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":971:972   */\n      0x00\n        /* \"#utility.yul\":968:969   */\n      dup1\n        /* \"#utility.yul\":961:973   */\n      revert\n        /* \"#utility.yul\":912:975   */\n    tag_142:\n        /* \"#utility.yul\":859:981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":987:1126   */\n    tag_98:\n        /* \"#utility.yul\":1033:1038   */\n      0x00\n        /* \"#utility.yul\":1071:1077   */\n      dup2\n        /* \"#utility.yul\":1058:1078   */\n      calldataload\n        /* \"#utility.yul\":1049:1078   */\n      swap1\n      pop\n        /* \"#utility.yul\":1087:1120   */\n      tag_144\n        /* \"#utility.yul\":1114:1119   */\n      dup2\n        /* \"#utility.yul\":1087:1120   */\n      tag_97\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":987:1126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1132:1461   */\n    tag_13:\n        /* \"#utility.yul\":1191:1197   */\n      0x00\n        /* \"#utility.yul\":1240:1242   */\n      0x20\n        /* \"#utility.yul\":1228:1237   */\n      dup3\n        /* \"#utility.yul\":1219:1226   */\n      dup5\n        /* \"#utility.yul\":1215:1238   */\n      sub\n        /* \"#utility.yul\":1211:1243   */\n      slt\n        /* \"#utility.yul\":1208:1327   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":1246:1325   */\n      tag_147\n      tag_94\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1208:1327   */\n    tag_146:\n        /* \"#utility.yul\":1366:1367   */\n      0x00\n        /* \"#utility.yul\":1391:1444   */\n      tag_148\n        /* \"#utility.yul\":1436:1443   */\n      dup5\n        /* \"#utility.yul\":1427:1433   */\n      dup3\n        /* \"#utility.yul\":1416:1425   */\n      dup6\n        /* \"#utility.yul\":1412:1434   */\n      add\n        /* \"#utility.yul\":1391:1444   */\n      tag_98\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1381:1444   */\n      swap2\n      pop\n        /* \"#utility.yul\":1337:1454   */\n      pop\n        /* \"#utility.yul\":1132:1461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1467:1585   */\n    tag_99:\n        /* \"#utility.yul\":1554:1578   */\n      tag_150\n        /* \"#utility.yul\":1572:1577   */\n      dup2\n        /* \"#utility.yul\":1554:1578   */\n      tag_96\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1549:1552   */\n      dup3\n        /* \"#utility.yul\":1542:1579   */\n      mstore\n        /* \"#utility.yul\":1467:1585   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1591:1813   */\n    tag_16:\n        /* \"#utility.yul\":1684:1688   */\n      0x00\n        /* \"#utility.yul\":1722:1724   */\n      0x20\n        /* \"#utility.yul\":1711:1720   */\n      dup3\n        /* \"#utility.yul\":1707:1725   */\n      add\n        /* \"#utility.yul\":1699:1725   */\n      swap1\n      pop\n        /* \"#utility.yul\":1735:1806   */\n      tag_152\n        /* \"#utility.yul\":1803:1804   */\n      0x00\n        /* \"#utility.yul\":1792:1801   */\n      dup4\n        /* \"#utility.yul\":1788:1805   */\n      add\n        /* \"#utility.yul\":1779:1785   */\n      dup5\n        /* \"#utility.yul\":1735:1806   */\n      tag_99\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1591:1813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1819:1945   */\n    tag_100:\n        /* \"#utility.yul\":1856:1863   */\n      0x00\n        /* \"#utility.yul\":1896:1938   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1889:1894   */\n      dup3\n        /* \"#utility.yul\":1885:1939   */\n      and\n        /* \"#utility.yul\":1874:1939   */\n      swap1\n      pop\n        /* \"#utility.yul\":1819:1945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1951:2011   */\n    tag_101:\n        /* \"#utility.yul\":1979:1982   */\n      0x00\n        /* \"#utility.yul\":2000:2005   */\n      dup2\n        /* \"#utility.yul\":1993:2005   */\n      swap1\n      pop\n        /* \"#utility.yul\":1951:2011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2017:2159   */\n    tag_102:\n        /* \"#utility.yul\":2067:2076   */\n      0x00\n        /* \"#utility.yul\":2100:2153   */\n      tag_156\n        /* \"#utility.yul\":2118:2152   */\n      tag_157\n        /* \"#utility.yul\":2127:2151   */\n      tag_158\n        /* \"#utility.yul\":2145:2150   */\n      dup5\n        /* \"#utility.yul\":2127:2151   */\n      tag_100\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2118:2152   */\n      tag_101\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2100:2153   */\n      tag_100\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2087:2153   */\n      swap1\n      pop\n        /* \"#utility.yul\":2017:2159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2165:2291   */\n    tag_103:\n        /* \"#utility.yul\":2215:2224   */\n      0x00\n        /* \"#utility.yul\":2248:2285   */\n      tag_160\n        /* \"#utility.yul\":2279:2284   */\n      dup3\n        /* \"#utility.yul\":2248:2285   */\n      tag_102\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2235:2285   */\n      swap1\n      pop\n        /* \"#utility.yul\":2165:2291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2297:2442   */\n    tag_104:\n        /* \"#utility.yul\":2366:2375   */\n      0x00\n        /* \"#utility.yul\":2399:2436   */\n      tag_162\n        /* \"#utility.yul\":2430:2435   */\n      dup3\n        /* \"#utility.yul\":2399:2436   */\n      tag_103\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2386:2436   */\n      swap1\n      pop\n        /* \"#utility.yul\":2297:2442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2448:2617   */\n    tag_105:\n        /* \"#utility.yul\":2554:2610   */\n      tag_164\n        /* \"#utility.yul\":2604:2609   */\n      dup2\n        /* \"#utility.yul\":2554:2610   */\n      tag_104\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2549:2552   */\n      dup3\n        /* \"#utility.yul\":2542:2611   */\n      mstore\n        /* \"#utility.yul\":2448:2617   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2623:2883   */\n    tag_20:\n        /* \"#utility.yul\":2735:2739   */\n      0x00\n        /* \"#utility.yul\":2773:2775   */\n      0x20\n        /* \"#utility.yul\":2762:2771   */\n      dup3\n        /* \"#utility.yul\":2758:2776   */\n      add\n        /* \"#utility.yul\":2750:2776   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      tag_166\n        /* \"#utility.yul\":2873:2874   */\n      0x00\n        /* \"#utility.yul\":2862:2871   */\n      dup4\n        /* \"#utility.yul\":2858:2875   */\n      add\n        /* \"#utility.yul\":2849:2855   */\n      dup5\n        /* \"#utility.yul\":2786:2876   */\n      tag_105\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2623:2883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2889:3363   */\n    tag_23:\n        /* \"#utility.yul\":2957:2963   */\n      0x00\n        /* \"#utility.yul\":2965:2971   */\n      dup1\n        /* \"#utility.yul\":3014:3016   */\n      0x40\n        /* \"#utility.yul\":3002:3011   */\n      dup4\n        /* \"#utility.yul\":2993:3000   */\n      dup6\n        /* \"#utility.yul\":2989:3012   */\n      sub\n        /* \"#utility.yul\":2985:3017   */\n      slt\n        /* \"#utility.yul\":2982:3101   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":3020:3099   */\n      tag_169\n      tag_94\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2982:3101   */\n    tag_168:\n        /* \"#utility.yul\":3140:3141   */\n      0x00\n        /* \"#utility.yul\":3165:3218   */\n      tag_170\n        /* \"#utility.yul\":3210:3217   */\n      dup6\n        /* \"#utility.yul\":3201:3207   */\n      dup3\n        /* \"#utility.yul\":3190:3199   */\n      dup7\n        /* \"#utility.yul\":3186:3208   */\n      add\n        /* \"#utility.yul\":3165:3218   */\n      tag_98\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3155:3218   */\n      swap3\n      pop\n        /* \"#utility.yul\":3111:3228   */\n      pop\n        /* \"#utility.yul\":3267:3269   */\n      0x20\n        /* \"#utility.yul\":3293:3346   */\n      tag_171\n        /* \"#utility.yul\":3338:3345   */\n      dup6\n        /* \"#utility.yul\":3329:3335   */\n      dup3\n        /* \"#utility.yul\":3318:3327   */\n      dup7\n        /* \"#utility.yul\":3314:3336   */\n      add\n        /* \"#utility.yul\":3293:3346   */\n      tag_98\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3283:3346   */\n      swap2\n      pop\n        /* \"#utility.yul\":3238:3356   */\n      pop\n        /* \"#utility.yul\":2889:3363   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3369:3465   */\n    tag_106:\n        /* \"#utility.yul\":3406:3413   */\n      0x00\n        /* \"#utility.yul\":3435:3459   */\n      tag_173\n        /* \"#utility.yul\":3453:3458   */\n      dup3\n        /* \"#utility.yul\":3435:3459   */\n      tag_100\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3424:3459   */\n      swap1\n      pop\n        /* \"#utility.yul\":3369:3465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3579   */\n    tag_107:\n        /* \"#utility.yul\":3548:3572   */\n      tag_175\n        /* \"#utility.yul\":3566:3571   */\n      dup2\n        /* \"#utility.yul\":3548:3572   */\n      tag_106\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3543:3546   */\n      dup3\n        /* \"#utility.yul\":3536:3573   */\n      mstore\n        /* \"#utility.yul\":3471:3579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3585:3690   */\n    tag_108:\n        /* \"#utility.yul\":3660:3683   */\n      tag_177\n        /* \"#utility.yul\":3677:3682   */\n      dup2\n        /* \"#utility.yul\":3660:3683   */\n      tag_91\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3655:3658   */\n      dup3\n        /* \"#utility.yul\":3648:3684   */\n      mstore\n        /* \"#utility.yul\":3585:3690   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3696:3804   */\n    tag_109:\n        /* \"#utility.yul\":3773:3797   */\n      tag_179\n        /* \"#utility.yul\":3791:3796   */\n      dup2\n        /* \"#utility.yul\":3773:3797   */\n      tag_96\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3768:3771   */\n      dup3\n        /* \"#utility.yul\":3761:3798   */\n      mstore\n        /* \"#utility.yul\":3696:3804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3810:3918   */\n    tag_110:\n        /* \"#utility.yul\":3887:3911   */\n      tag_181\n        /* \"#utility.yul\":3905:3910   */\n      dup2\n        /* \"#utility.yul\":3887:3911   */\n      tag_100\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3882:3885   */\n      dup3\n        /* \"#utility.yul\":3875:3912   */\n      mstore\n        /* \"#utility.yul\":3810:3918   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4018:5641   */\n    tag_111:\n        /* \"#utility.yul\":4193:4199   */\n      0x0100\n        /* \"#utility.yul\":4188:4191   */\n      dup3\n        /* \"#utility.yul\":4184:4200   */\n      add\n        /* \"#utility.yul\":4285:4289   */\n      0x00\n        /* \"#utility.yul\":4278:4283   */\n      dup3\n        /* \"#utility.yul\":4274:4290   */\n      add\n        /* \"#utility.yul\":4268:4291   */\n      mload\n        /* \"#utility.yul\":4304:4367   */\n      tag_183\n        /* \"#utility.yul\":4361:4365   */\n      0x00\n        /* \"#utility.yul\":4356:4359   */\n      dup6\n        /* \"#utility.yul\":4352:4366   */\n      add\n        /* \"#utility.yul\":4338:4350   */\n      dup3\n        /* \"#utility.yul\":4304:4367   */\n      tag_107\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4210:4377   */\n      pop\n        /* \"#utility.yul\":4463:4467   */\n      0x20\n        /* \"#utility.yul\":4456:4461   */\n      dup3\n        /* \"#utility.yul\":4452:4468   */\n      add\n        /* \"#utility.yul\":4446:4469   */\n      mload\n        /* \"#utility.yul\":4482:4545   */\n      tag_184\n        /* \"#utility.yul\":4539:4543   */\n      0x20\n        /* \"#utility.yul\":4534:4537   */\n      dup6\n        /* \"#utility.yul\":4530:4544   */\n      add\n        /* \"#utility.yul\":4516:4528   */\n      dup3\n        /* \"#utility.yul\":4482:4545   */\n      tag_107\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4387:4555   */\n      pop\n        /* \"#utility.yul\":4636:4640   */\n      0x40\n        /* \"#utility.yul\":4629:4634   */\n      dup3\n        /* \"#utility.yul\":4625:4641   */\n      add\n        /* \"#utility.yul\":4619:4642   */\n      mload\n        /* \"#utility.yul\":4655:4716   */\n      tag_185\n        /* \"#utility.yul\":4710:4714   */\n      0x40\n        /* \"#utility.yul\":4705:4708   */\n      dup6\n        /* \"#utility.yul\":4701:4715   */\n      add\n        /* \"#utility.yul\":4687:4699   */\n      dup3\n        /* \"#utility.yul\":4655:4716   */\n      tag_108\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":4565:4726   */\n      pop\n        /* \"#utility.yul\":4813:4817   */\n      0x60\n        /* \"#utility.yul\":4806:4811   */\n      dup3\n        /* \"#utility.yul\":4802:4818   */\n      add\n        /* \"#utility.yul\":4796:4819   */\n      mload\n        /* \"#utility.yul\":4832:4895   */\n      tag_186\n        /* \"#utility.yul\":4889:4893   */\n      0x60\n        /* \"#utility.yul\":4884:4887   */\n      dup6\n        /* \"#utility.yul\":4880:4894   */\n      add\n        /* \"#utility.yul\":4866:4878   */\n      dup3\n        /* \"#utility.yul\":4832:4895   */\n      tag_107\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4736:4905   */\n      pop\n        /* \"#utility.yul\":4991:4995   */\n      0x80\n        /* \"#utility.yul\":4984:4989   */\n      dup3\n        /* \"#utility.yul\":4980:4996   */\n      add\n        /* \"#utility.yul\":4974:4997   */\n      mload\n        /* \"#utility.yul\":5010:5073   */\n      tag_187\n        /* \"#utility.yul\":5067:5071   */\n      0x80\n        /* \"#utility.yul\":5062:5065   */\n      dup6\n        /* \"#utility.yul\":5058:5072   */\n      add\n        /* \"#utility.yul\":5044:5056   */\n      dup3\n        /* \"#utility.yul\":5010:5073   */\n      tag_109\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4915:5083   */\n      pop\n        /* \"#utility.yul\":5169:5173   */\n      0xa0\n        /* \"#utility.yul\":5162:5167   */\n      dup3\n        /* \"#utility.yul\":5158:5174   */\n      add\n        /* \"#utility.yul\":5152:5175   */\n      mload\n        /* \"#utility.yul\":5188:5251   */\n      tag_188\n        /* \"#utility.yul\":5245:5249   */\n      0xa0\n        /* \"#utility.yul\":5240:5243   */\n      dup6\n        /* \"#utility.yul\":5236:5250   */\n      add\n        /* \"#utility.yul\":5222:5234   */\n      dup3\n        /* \"#utility.yul\":5188:5251   */\n      tag_109\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5093:5261   */\n      pop\n        /* \"#utility.yul\":5355:5359   */\n      0xc0\n        /* \"#utility.yul\":5348:5353   */\n      dup3\n        /* \"#utility.yul\":5344:5360   */\n      add\n        /* \"#utility.yul\":5338:5361   */\n      mload\n        /* \"#utility.yul\":5374:5437   */\n      tag_189\n        /* \"#utility.yul\":5431:5435   */\n      0xc0\n        /* \"#utility.yul\":5426:5429   */\n      dup6\n        /* \"#utility.yul\":5422:5436   */\n      add\n        /* \"#utility.yul\":5408:5420   */\n      dup3\n        /* \"#utility.yul\":5374:5437   */\n      tag_109\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":5271:5447   */\n      pop\n        /* \"#utility.yul\":5542:5546   */\n      0xe0\n        /* \"#utility.yul\":5535:5540   */\n      dup3\n        /* \"#utility.yul\":5531:5547   */\n      add\n        /* \"#utility.yul\":5525:5548   */\n      mload\n        /* \"#utility.yul\":5561:5624   */\n      tag_190\n        /* \"#utility.yul\":5618:5622   */\n      0xe0\n        /* \"#utility.yul\":5613:5616   */\n      dup6\n        /* \"#utility.yul\":5609:5623   */\n      add\n        /* \"#utility.yul\":5595:5607   */\n      dup3\n        /* \"#utility.yul\":5561:5624   */\n      tag_110\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5457:5634   */\n      pop\n        /* \"#utility.yul\":4162:5641   */\n      pop\n        /* \"#utility.yul\":4018:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:6026   */\n    tag_32:\n        /* \"#utility.yul\":5818:5822   */\n      0x00\n        /* \"#utility.yul\":5856:5859   */\n      0x0100\n        /* \"#utility.yul\":5845:5854   */\n      dup3\n        /* \"#utility.yul\":5841:5860   */\n      add\n        /* \"#utility.yul\":5833:5860   */\n      swap1\n      pop\n        /* \"#utility.yul\":5870:6019   */\n      tag_192\n        /* \"#utility.yul\":6016:6017   */\n      0x00\n        /* \"#utility.yul\":6005:6014   */\n      dup4\n        /* \"#utility.yul\":6001:6018   */\n      add\n        /* \"#utility.yul\":5992:5998   */\n      dup5\n        /* \"#utility.yul\":5870:6019   */\n      tag_111\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":5647:6026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6032:6175   */\n    tag_112:\n        /* \"#utility.yul\":6089:6094   */\n      0x00\n        /* \"#utility.yul\":6120:6126   */\n      dup2\n        /* \"#utility.yul\":6114:6127   */\n      mload\n        /* \"#utility.yul\":6105:6127   */\n      swap1\n      pop\n        /* \"#utility.yul\":6136:6169   */\n      tag_194\n        /* \"#utility.yul\":6163:6168   */\n      dup2\n        /* \"#utility.yul\":6136:6169   */\n      tag_97\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6032:6175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6181:6532   */\n    tag_36:\n        /* \"#utility.yul\":6251:6257   */\n      0x00\n        /* \"#utility.yul\":6300:6302   */\n      0x20\n        /* \"#utility.yul\":6288:6297   */\n      dup3\n        /* \"#utility.yul\":6279:6286   */\n      dup5\n        /* \"#utility.yul\":6275:6298   */\n      sub\n        /* \"#utility.yul\":6271:6303   */\n      slt\n        /* \"#utility.yul\":6268:6387   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":6306:6385   */\n      tag_197\n      tag_94\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":6268:6387   */\n    tag_196:\n        /* \"#utility.yul\":6426:6427   */\n      0x00\n        /* \"#utility.yul\":6451:6515   */\n      tag_198\n        /* \"#utility.yul\":6507:6514   */\n      dup5\n        /* \"#utility.yul\":6498:6504   */\n      dup3\n        /* \"#utility.yul\":6487:6496   */\n      dup6\n        /* \"#utility.yul\":6483:6505   */\n      add\n        /* \"#utility.yul\":6451:6515   */\n      tag_112\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":6441:6515   */\n      swap2\n      pop\n        /* \"#utility.yul\":6397:6525   */\n      pop\n        /* \"#utility.yul\":6181:6532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6634:8259   */\n    tag_113:\n        /* \"#utility.yul\":6811:6817   */\n      0x0100\n        /* \"#utility.yul\":6806:6809   */\n      dup3\n        /* \"#utility.yul\":6802:6818   */\n      add\n        /* \"#utility.yul\":6903:6907   */\n      0x00\n        /* \"#utility.yul\":6896:6901   */\n      dup3\n        /* \"#utility.yul\":6892:6908   */\n      add\n        /* \"#utility.yul\":6886:6909   */\n      mload\n        /* \"#utility.yul\":6922:6985   */\n      tag_200\n        /* \"#utility.yul\":6979:6983   */\n      0x00\n        /* \"#utility.yul\":6974:6977   */\n      dup6\n        /* \"#utility.yul\":6970:6984   */\n      add\n        /* \"#utility.yul\":6956:6968   */\n      dup3\n        /* \"#utility.yul\":6922:6985   */\n      tag_107\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":6828:6995   */\n      pop\n        /* \"#utility.yul\":7081:7085   */\n      0x20\n        /* \"#utility.yul\":7074:7079   */\n      dup3\n        /* \"#utility.yul\":7070:7086   */\n      add\n        /* \"#utility.yul\":7064:7087   */\n      mload\n        /* \"#utility.yul\":7100:7163   */\n      tag_201\n        /* \"#utility.yul\":7157:7161   */\n      0x20\n        /* \"#utility.yul\":7152:7155   */\n      dup6\n        /* \"#utility.yul\":7148:7162   */\n      add\n        /* \"#utility.yul\":7134:7146   */\n      dup3\n        /* \"#utility.yul\":7100:7163   */\n      tag_107\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":7005:7173   */\n      pop\n        /* \"#utility.yul\":7254:7258   */\n      0x40\n        /* \"#utility.yul\":7247:7252   */\n      dup3\n        /* \"#utility.yul\":7243:7259   */\n      add\n        /* \"#utility.yul\":7237:7260   */\n      mload\n        /* \"#utility.yul\":7273:7334   */\n      tag_202\n        /* \"#utility.yul\":7328:7332   */\n      0x40\n        /* \"#utility.yul\":7323:7326   */\n      dup6\n        /* \"#utility.yul\":7319:7333   */\n      add\n        /* \"#utility.yul\":7305:7317   */\n      dup3\n        /* \"#utility.yul\":7273:7334   */\n      tag_108\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7183:7344   */\n      pop\n        /* \"#utility.yul\":7431:7435   */\n      0x60\n        /* \"#utility.yul\":7424:7429   */\n      dup3\n        /* \"#utility.yul\":7420:7436   */\n      add\n        /* \"#utility.yul\":7414:7437   */\n      mload\n        /* \"#utility.yul\":7450:7513   */\n      tag_203\n        /* \"#utility.yul\":7507:7511   */\n      0x60\n        /* \"#utility.yul\":7502:7505   */\n      dup6\n        /* \"#utility.yul\":7498:7512   */\n      add\n        /* \"#utility.yul\":7484:7496   */\n      dup3\n        /* \"#utility.yul\":7450:7513   */\n      tag_107\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":7354:7523   */\n      pop\n        /* \"#utility.yul\":7609:7613   */\n      0x80\n        /* \"#utility.yul\":7602:7607   */\n      dup3\n        /* \"#utility.yul\":7598:7614   */\n      add\n        /* \"#utility.yul\":7592:7615   */\n      mload\n        /* \"#utility.yul\":7628:7691   */\n      tag_204\n        /* \"#utility.yul\":7685:7689   */\n      0x80\n        /* \"#utility.yul\":7680:7683   */\n      dup6\n        /* \"#utility.yul\":7676:7690   */\n      add\n        /* \"#utility.yul\":7662:7674   */\n      dup3\n        /* \"#utility.yul\":7628:7691   */\n      tag_109\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":7533:7701   */\n      pop\n        /* \"#utility.yul\":7788:7792   */\n      0xa0\n        /* \"#utility.yul\":7781:7786   */\n      dup3\n        /* \"#utility.yul\":7777:7793   */\n      add\n        /* \"#utility.yul\":7771:7794   */\n      mload\n        /* \"#utility.yul\":7807:7870   */\n      tag_205\n        /* \"#utility.yul\":7864:7868   */\n      0xa0\n        /* \"#utility.yul\":7859:7862   */\n      dup6\n        /* \"#utility.yul\":7855:7869   */\n      add\n        /* \"#utility.yul\":7841:7853   */\n      dup3\n        /* \"#utility.yul\":7807:7870   */\n      tag_109\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":7711:7880   */\n      pop\n        /* \"#utility.yul\":7973:7977   */\n      0xc0\n        /* \"#utility.yul\":7966:7971   */\n      dup3\n        /* \"#utility.yul\":7962:7978   */\n      add\n        /* \"#utility.yul\":7956:7979   */\n      mload\n        /* \"#utility.yul\":7992:8055   */\n      tag_206\n        /* \"#utility.yul\":8049:8053   */\n      0xc0\n        /* \"#utility.yul\":8044:8047   */\n      dup6\n        /* \"#utility.yul\":8040:8054   */\n      add\n        /* \"#utility.yul\":8026:8038   */\n      dup3\n        /* \"#utility.yul\":7992:8055   */\n      tag_109\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7890:8065   */\n      pop\n        /* \"#utility.yul\":8160:8164   */\n      0xe0\n        /* \"#utility.yul\":8153:8158   */\n      dup3\n        /* \"#utility.yul\":8149:8165   */\n      add\n        /* \"#utility.yul\":8143:8166   */\n      mload\n        /* \"#utility.yul\":8179:8242   */\n      tag_207\n        /* \"#utility.yul\":8236:8240   */\n      0xe0\n        /* \"#utility.yul\":8231:8234   */\n      dup6\n        /* \"#utility.yul\":8227:8241   */\n      add\n        /* \"#utility.yul\":8213:8225   */\n      dup3\n        /* \"#utility.yul\":8179:8242   */\n      tag_110\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":8075:8252   */\n      pop\n        /* \"#utility.yul\":6780:8259   */\n      pop\n        /* \"#utility.yul\":6634:8259   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8265:8648   */\n    tag_41:\n        /* \"#utility.yul\":8438:8442   */\n      0x00\n        /* \"#utility.yul\":8476:8479   */\n      0x0100\n        /* \"#utility.yul\":8465:8474   */\n      dup3\n        /* \"#utility.yul\":8461:8480   */\n      add\n        /* \"#utility.yul\":8453:8480   */\n      swap1\n      pop\n        /* \"#utility.yul\":8490:8641   */\n      tag_209\n        /* \"#utility.yul\":8638:8639   */\n      0x00\n        /* \"#utility.yul\":8627:8636   */\n      dup4\n        /* \"#utility.yul\":8623:8640   */\n      add\n        /* \"#utility.yul\":8614:8620   */\n      dup5\n        /* \"#utility.yul\":8490:8641   */\n      tag_113\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8265:8648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8654:8834   */\n    tag_114:\n        /* \"#utility.yul\":8702:8779   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8699:8700   */\n      0x00\n        /* \"#utility.yul\":8692:8780   */\n      mstore\n        /* \"#utility.yul\":8799:8803   */\n      0x11\n        /* \"#utility.yul\":8796:8797   */\n      0x04\n        /* \"#utility.yul\":8789:8804   */\n      mstore\n        /* \"#utility.yul\":8823:8827   */\n      0x24\n        /* \"#utility.yul\":8820:8821   */\n      0x00\n        /* \"#utility.yul\":8813:8828   */\n      revert\n        /* \"#utility.yul\":8840:9034   */\n    tag_49:\n        /* \"#utility.yul\":8880:8884   */\n      0x00\n        /* \"#utility.yul\":8900:8920   */\n      tag_212\n        /* \"#utility.yul\":8918:8919   */\n      dup3\n        /* \"#utility.yul\":8900:8920   */\n      tag_96\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":8895:8920   */\n      swap2\n      pop\n        /* \"#utility.yul\":8934:8954   */\n      tag_213\n        /* \"#utility.yul\":8952:8953   */\n      dup4\n        /* \"#utility.yul\":8934:8954   */\n      tag_96\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":8929:8954   */\n      swap3\n      pop\n        /* \"#utility.yul\":8978:8979   */\n      dup3\n        /* \"#utility.yul\":8975:8976   */\n      dup3\n        /* \"#utility.yul\":8971:8980   */\n      sub\n        /* \"#utility.yul\":8963:8980   */\n      swap1\n      pop\n        /* \"#utility.yul\":9002:9003   */\n      dup2\n        /* \"#utility.yul\":8996:9000   */\n      dup2\n        /* \"#utility.yul\":8993:9004   */\n      gt\n        /* \"#utility.yul\":8990:9027   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":9007:9025   */\n      tag_215\n      tag_114\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":8990:9027   */\n    tag_214:\n        /* \"#utility.yul\":8840:9034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9040:9158   */\n    tag_115:\n        /* \"#utility.yul\":9127:9151   */\n      tag_217\n        /* \"#utility.yul\":9145:9150   */\n      dup2\n        /* \"#utility.yul\":9127:9151   */\n      tag_106\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":9122:9125   */\n      dup3\n        /* \"#utility.yul\":9115:9152   */\n      mstore\n        /* \"#utility.yul\":9040:9158   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9164:9606   */\n    tag_53:\n        /* \"#utility.yul\":9313:9317   */\n      0x00\n        /* \"#utility.yul\":9351:9353   */\n      0x60\n        /* \"#utility.yul\":9340:9349   */\n      dup3\n        /* \"#utility.yul\":9336:9354   */\n      add\n        /* \"#utility.yul\":9328:9354   */\n      swap1\n      pop\n        /* \"#utility.yul\":9364:9435   */\n      tag_219\n        /* \"#utility.yul\":9432:9433   */\n      0x00\n        /* \"#utility.yul\":9421:9430   */\n      dup4\n        /* \"#utility.yul\":9417:9434   */\n      add\n        /* \"#utility.yul\":9408:9414   */\n      dup7\n        /* \"#utility.yul\":9364:9435   */\n      tag_115\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":9445:9517   */\n      tag_220\n        /* \"#utility.yul\":9513:9515   */\n      0x20\n        /* \"#utility.yul\":9502:9511   */\n      dup4\n        /* \"#utility.yul\":9498:9516   */\n      add\n        /* \"#utility.yul\":9489:9495   */\n      dup6\n        /* \"#utility.yul\":9445:9517   */\n      tag_115\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":9527:9599   */\n      tag_221\n        /* \"#utility.yul\":9595:9597   */\n      0x40\n        /* \"#utility.yul\":9584:9593   */\n      dup4\n        /* \"#utility.yul\":9580:9598   */\n      add\n        /* \"#utility.yul\":9571:9577   */\n      dup5\n        /* \"#utility.yul\":9527:9599   */\n      tag_99\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":9164:9606   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9612:9710   */\n    tag_116:\n        /* \"#utility.yul\":9663:9669   */\n      0x00\n        /* \"#utility.yul\":9697:9702   */\n      dup2\n        /* \"#utility.yul\":9691:9703   */\n      mload\n        /* \"#utility.yul\":9681:9703   */\n      swap1\n      pop\n        /* \"#utility.yul\":9612:9710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9716:9863   */\n    tag_117:\n        /* \"#utility.yul\":9817:9828   */\n      0x00\n        /* \"#utility.yul\":9854:9857   */\n      dup2\n        /* \"#utility.yul\":9839:9857   */\n      swap1\n      pop\n        /* \"#utility.yul\":9716:9863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9869:10008   */\n    tag_118:\n        /* \"#utility.yul\":9958:9964   */\n      dup3\n        /* \"#utility.yul\":9953:9956   */\n      dup2\n        /* \"#utility.yul\":9948:9951   */\n      dup4\n        /* \"#utility.yul\":9942:9965   */\n      mcopy\n        /* \"#utility.yul\":9999:10000   */\n      0x00\n        /* \"#utility.yul\":9990:9996   */\n      dup4\n        /* \"#utility.yul\":9985:9988   */\n      dup4\n        /* \"#utility.yul\":9981:9997   */\n      add\n        /* \"#utility.yul\":9974:10001   */\n      mstore\n        /* \"#utility.yul\":9869:10008   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10014:10400   */\n    tag_119:\n        /* \"#utility.yul\":10118:10121   */\n      0x00\n        /* \"#utility.yul\":10146:10184   */\n      tag_226\n        /* \"#utility.yul\":10178:10183   */\n      dup3\n        /* \"#utility.yul\":10146:10184   */\n      tag_116\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":10200:10288   */\n      tag_227\n        /* \"#utility.yul\":10281:10287   */\n      dup2\n        /* \"#utility.yul\":10276:10279   */\n      dup6\n        /* \"#utility.yul\":10200:10288   */\n      tag_117\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":10193:10288   */\n      swap4\n      pop\n        /* \"#utility.yul\":10297:10362   */\n      tag_228\n        /* \"#utility.yul\":10355:10361   */\n      dup2\n        /* \"#utility.yul\":10350:10353   */\n      dup6\n        /* \"#utility.yul\":10343:10347   */\n      0x20\n        /* \"#utility.yul\":10336:10341   */\n      dup7\n        /* \"#utility.yul\":10332:10348   */\n      add\n        /* \"#utility.yul\":10297:10362   */\n      tag_118\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":10387:10393   */\n      dup1\n        /* \"#utility.yul\":10382:10385   */\n      dup5\n        /* \"#utility.yul\":10378:10394   */\n      add\n        /* \"#utility.yul\":10371:10394   */\n      swap2\n      pop\n        /* \"#utility.yul\":10122:10400   */\n      pop\n        /* \"#utility.yul\":10014:10400   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10406:10677   */\n    tag_55:\n        /* \"#utility.yul\":10536:10539   */\n      0x00\n        /* \"#utility.yul\":10558:10651   */\n      tag_230\n        /* \"#utility.yul\":10647:10650   */\n      dup3\n        /* \"#utility.yul\":10638:10644   */\n      dup5\n        /* \"#utility.yul\":10558:10651   */\n      tag_119\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":10551:10651   */\n      swap2\n      pop\n        /* \"#utility.yul\":10668:10671   */\n      dup2\n        /* \"#utility.yul\":10661:10671   */\n      swap1\n      pop\n        /* \"#utility.yul\":10406:10677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10683:10773   */\n    tag_120:\n        /* \"#utility.yul\":10717:10724   */\n      0x00\n        /* \"#utility.yul\":10760:10765   */\n      dup2\n        /* \"#utility.yul\":10753:10766   */\n      iszero\n        /* \"#utility.yul\":10746:10767   */\n      iszero\n        /* \"#utility.yul\":10735:10767   */\n      swap1\n      pop\n        /* \"#utility.yul\":10683:10773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10779:10895   */\n    tag_121:\n        /* \"#utility.yul\":10849:10870   */\n      tag_233\n        /* \"#utility.yul\":10864:10869   */\n      dup2\n        /* \"#utility.yul\":10849:10870   */\n      tag_120\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":10842:10847   */\n      dup2\n        /* \"#utility.yul\":10839:10871   */\n      eq\n        /* \"#utility.yul\":10829:10889   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":10885:10886   */\n      0x00\n        /* \"#utility.yul\":10882:10883   */\n      dup1\n        /* \"#utility.yul\":10875:10887   */\n      revert\n        /* \"#utility.yul\":10829:10889   */\n    tag_234:\n        /* \"#utility.yul\":10779:10895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10901:11038   */\n    tag_122:\n        /* \"#utility.yul\":10955:10960   */\n      0x00\n        /* \"#utility.yul\":10986:10992   */\n      dup2\n        /* \"#utility.yul\":10980:10993   */\n      mload\n        /* \"#utility.yul\":10971:10993   */\n      swap1\n      pop\n        /* \"#utility.yul\":11002:11032   */\n      tag_236\n        /* \"#utility.yul\":11026:11031   */\n      dup2\n        /* \"#utility.yul\":11002:11032   */\n      tag_121\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":10901:11038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11044:11389   */\n    tag_62:\n        /* \"#utility.yul\":11111:11117   */\n      0x00\n        /* \"#utility.yul\":11160:11162   */\n      0x20\n        /* \"#utility.yul\":11148:11157   */\n      dup3\n        /* \"#utility.yul\":11139:11146   */\n      dup5\n        /* \"#utility.yul\":11135:11158   */\n      sub\n        /* \"#utility.yul\":11131:11163   */\n      slt\n        /* \"#utility.yul\":11128:11247   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":11166:11245   */\n      tag_239\n      tag_94\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":11128:11247   */\n    tag_238:\n        /* \"#utility.yul\":11286:11287   */\n      0x00\n        /* \"#utility.yul\":11311:11372   */\n      tag_240\n        /* \"#utility.yul\":11364:11371   */\n      dup5\n        /* \"#utility.yul\":11355:11361   */\n      dup3\n        /* \"#utility.yul\":11344:11353   */\n      dup6\n        /* \"#utility.yul\":11340:11362   */\n      add\n        /* \"#utility.yul\":11311:11372   */\n      tag_122\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":11301:11372   */\n      swap2\n      pop\n        /* \"#utility.yul\":11257:11382   */\n      pop\n        /* \"#utility.yul\":11044:11389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11395:11564   */\n    tag_123:\n        /* \"#utility.yul\":11479:11490   */\n      0x00\n        /* \"#utility.yul\":11513:11519   */\n      dup3\n        /* \"#utility.yul\":11508:11511   */\n      dup3\n        /* \"#utility.yul\":11501:11520   */\n      mstore\n        /* \"#utility.yul\":11553:11557   */\n      0x20\n        /* \"#utility.yul\":11548:11551   */\n      dup3\n        /* \"#utility.yul\":11544:11558   */\n      add\n        /* \"#utility.yul\":11529:11558   */\n      swap1\n      pop\n        /* \"#utility.yul\":11395:11564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11570:11723   */\n    tag_124:\n        /* \"#utility.yul\":11710:11715   */\n      0x5354460000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11706:11707   */\n      0x00\n        /* \"#utility.yul\":11698:11704   */\n      dup3\n        /* \"#utility.yul\":11694:11708   */\n      add\n        /* \"#utility.yul\":11687:11716   */\n      mstore\n        /* \"#utility.yul\":11570:11723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11729:12094   */\n    tag_125:\n        /* \"#utility.yul\":11871:11874   */\n      0x00\n        /* \"#utility.yul\":11892:11958   */\n      tag_244\n        /* \"#utility.yul\":11956:11957   */\n      0x03\n        /* \"#utility.yul\":11951:11954   */\n      dup4\n        /* \"#utility.yul\":11892:11958   */\n      tag_123\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":11885:11958   */\n      swap2\n      pop\n        /* \"#utility.yul\":11967:12060   */\n      tag_245\n        /* \"#utility.yul\":12056:12059   */\n      dup3\n        /* \"#utility.yul\":11967:12060   */\n      tag_124\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":12085:12087   */\n      0x20\n        /* \"#utility.yul\":12080:12083   */\n      dup3\n        /* \"#utility.yul\":12076:12088   */\n      add\n        /* \"#utility.yul\":12069:12088   */\n      swap1\n      pop\n        /* \"#utility.yul\":11729:12094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12100:12519   */\n    tag_65:\n        /* \"#utility.yul\":12266:12270   */\n      0x00\n        /* \"#utility.yul\":12304:12306   */\n      0x20\n        /* \"#utility.yul\":12293:12302   */\n      dup3\n        /* \"#utility.yul\":12289:12307   */\n      add\n        /* \"#utility.yul\":12281:12307   */\n      swap1\n      pop\n        /* \"#utility.yul\":12353:12362   */\n      dup2\n        /* \"#utility.yul\":12347:12351   */\n      dup2\n        /* \"#utility.yul\":12343:12363   */\n      sub\n        /* \"#utility.yul\":12339:12340   */\n      0x00\n        /* \"#utility.yul\":12328:12337   */\n      dup4\n        /* \"#utility.yul\":12324:12341   */\n      add\n        /* \"#utility.yul\":12317:12364   */\n      mstore\n        /* \"#utility.yul\":12381:12512   */\n      tag_247\n        /* \"#utility.yul\":12507:12511   */\n      dup2\n        /* \"#utility.yul\":12381:12512   */\n      tag_125\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":12373:12512   */\n      swap1\n      pop\n        /* \"#utility.yul\":12100:12519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12525:12857   */\n    tag_68:\n        /* \"#utility.yul\":12646:12650   */\n      0x00\n        /* \"#utility.yul\":12684:12686   */\n      0x40\n        /* \"#utility.yul\":12673:12682   */\n      dup3\n        /* \"#utility.yul\":12669:12687   */\n      add\n        /* \"#utility.yul\":12661:12687   */\n      swap1\n      pop\n        /* \"#utility.yul\":12697:12768   */\n      tag_249\n        /* \"#utility.yul\":12765:12766   */\n      0x00\n        /* \"#utility.yul\":12754:12763   */\n      dup4\n        /* \"#utility.yul\":12750:12767   */\n      add\n        /* \"#utility.yul\":12741:12747   */\n      dup6\n        /* \"#utility.yul\":12697:12768   */\n      tag_115\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":12778:12850   */\n      tag_250\n        /* \"#utility.yul\":12846:12848   */\n      0x20\n        /* \"#utility.yul\":12835:12844   */\n      dup4\n        /* \"#utility.yul\":12831:12849   */\n      add\n        /* \"#utility.yul\":12822:12828   */\n      dup5\n        /* \"#utility.yul\":12778:12850   */\n      tag_99\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":12525:12857   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12863:13015   */\n    tag_126:\n        /* \"#utility.yul\":13003:13007   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12999:13000   */\n      0x00\n        /* \"#utility.yul\":12991:12997   */\n      dup3\n        /* \"#utility.yul\":12987:13001   */\n      add\n        /* \"#utility.yul\":12980:13008   */\n      mstore\n        /* \"#utility.yul\":12863:13015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13021:13386   */\n    tag_127:\n        /* \"#utility.yul\":13163:13166   */\n      0x00\n        /* \"#utility.yul\":13184:13250   */\n      tag_253\n        /* \"#utility.yul\":13248:13249   */\n      0x02\n        /* \"#utility.yul\":13243:13246   */\n      dup4\n        /* \"#utility.yul\":13184:13250   */\n      tag_123\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":13177:13250   */\n      swap2\n      pop\n        /* \"#utility.yul\":13259:13352   */\n      tag_254\n        /* \"#utility.yul\":13348:13351   */\n      dup3\n        /* \"#utility.yul\":13259:13352   */\n      tag_126\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":13377:13379   */\n      0x20\n        /* \"#utility.yul\":13372:13375   */\n      dup3\n        /* \"#utility.yul\":13368:13380   */\n      add\n        /* \"#utility.yul\":13361:13380   */\n      swap1\n      pop\n        /* \"#utility.yul\":13021:13386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13392:13811   */\n    tag_78:\n        /* \"#utility.yul\":13558:13562   */\n      0x00\n        /* \"#utility.yul\":13596:13598   */\n      0x20\n        /* \"#utility.yul\":13585:13594   */\n      dup3\n        /* \"#utility.yul\":13581:13599   */\n      add\n        /* \"#utility.yul\":13573:13599   */\n      swap1\n      pop\n        /* \"#utility.yul\":13645:13654   */\n      dup2\n        /* \"#utility.yul\":13639:13643   */\n      dup2\n        /* \"#utility.yul\":13635:13655   */\n      sub\n        /* \"#utility.yul\":13631:13632   */\n      0x00\n        /* \"#utility.yul\":13620:13629   */\n      dup4\n        /* \"#utility.yul\":13616:13633   */\n      add\n        /* \"#utility.yul\":13609:13656   */\n      mstore\n        /* \"#utility.yul\":13673:13804   */\n      tag_256\n        /* \"#utility.yul\":13799:13803   */\n      dup2\n        /* \"#utility.yul\":13673:13804   */\n      tag_127\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":13665:13804   */\n      swap1\n      pop\n        /* \"#utility.yul\":13392:13811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13817:13969   */\n    tag_128:\n        /* \"#utility.yul\":13957:13961   */\n      0x5354000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13953:13954   */\n      0x00\n        /* \"#utility.yul\":13945:13951   */\n      dup3\n        /* \"#utility.yul\":13941:13955   */\n      add\n        /* \"#utility.yul\":13934:13962   */\n      mstore\n        /* \"#utility.yul\":13817:13969   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13975:14340   */\n    tag_129:\n        /* \"#utility.yul\":14117:14120   */\n      0x00\n        /* \"#utility.yul\":14138:14204   */\n      tag_259\n        /* \"#utility.yul\":14202:14203   */\n      0x02\n        /* \"#utility.yul\":14197:14200   */\n      dup4\n        /* \"#utility.yul\":14138:14204   */\n      tag_123\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":14131:14204   */\n      swap2\n      pop\n        /* \"#utility.yul\":14213:14306   */\n      tag_260\n        /* \"#utility.yul\":14302:14305   */\n      dup3\n        /* \"#utility.yul\":14213:14306   */\n      tag_128\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":14331:14333   */\n      0x20\n        /* \"#utility.yul\":14326:14329   */\n      dup3\n        /* \"#utility.yul\":14322:14334   */\n      add\n        /* \"#utility.yul\":14315:14334   */\n      swap1\n      pop\n        /* \"#utility.yul\":13975:14340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14346:14765   */\n    tag_90:\n        /* \"#utility.yul\":14512:14516   */\n      0x00\n        /* \"#utility.yul\":14550:14552   */\n      0x20\n        /* \"#utility.yul\":14539:14548   */\n      dup3\n        /* \"#utility.yul\":14535:14553   */\n      add\n        /* \"#utility.yul\":14527:14553   */\n      swap1\n      pop\n        /* \"#utility.yul\":14599:14608   */\n      dup2\n        /* \"#utility.yul\":14593:14597   */\n      dup2\n        /* \"#utility.yul\":14589:14609   */\n      sub\n        /* \"#utility.yul\":14585:14586   */\n      0x00\n        /* \"#utility.yul\":14574:14583   */\n      dup4\n        /* \"#utility.yul\":14570:14587   */\n      add\n        /* \"#utility.yul\":14563:14610   */\n      mstore\n        /* \"#utility.yul\":14627:14758   */\n      tag_262\n        /* \"#utility.yul\":14753:14757   */\n      dup2\n        /* \"#utility.yul\":14627:14758   */\n      tag_129\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":14619:14758   */\n      swap1\n      pop\n        /* \"#utility.yul\":14346:14765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122064807b284766468a009dfbca4d25bc6a2a3d4292c8ba3e29cee53279dc8c69dd64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_389": {
									"entryPoint": null,
									"id": 389,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$191": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$191": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1434:5",
										"nodeType": "YulBlock",
										"src": "0:1434:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "632:51:5",
													"nodeType": "YulBlock",
													"src": "632:51:5",
													"statements": [
														{
															"nativeSrc": "642:35:5",
															"nodeType": "YulAssignment",
															"src": "642:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:5"
																},
																"nativeSrc": "653:24:5",
																"nodeType": "YulFunctionCall",
																"src": "653:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$191",
												"nativeSrc": "568:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:5",
														"nodeType": "YulTypedName",
														"src": "614:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:5",
														"nodeType": "YulTypedName",
														"src": "624:7:5",
														"type": ""
													}
												],
												"src": "568:115:5"
											},
											{
												"body": {
													"nativeSrc": "751:98:5",
													"nodeType": "YulBlock",
													"src": "751:98:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:5",
																"nodeType": "YulBlock",
																"src": "827:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:5",
																					"nodeType": "YulLiteral",
																					"src": "836:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:5",
																					"nodeType": "YulLiteral",
																					"src": "839:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:5"
																			},
																			"nativeSrc": "829:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:5"
																		},
																		"nativeSrc": "829:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$191",
																					"nativeSrc": "781:36:5",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:5"
																				},
																				"nativeSrc": "781:43:5",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:5"
																		},
																		"nativeSrc": "771:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:5"
																},
																"nativeSrc": "764:62:5",
																"nodeType": "YulFunctionCall",
																"src": "764:62:5"
															},
															"nativeSrc": "761:82:5",
															"nodeType": "YulIf",
															"src": "761:82:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$191",
												"nativeSrc": "689:160:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:5",
														"nodeType": "YulTypedName",
														"src": "744:5:5",
														"type": ""
													}
												],
												"src": "689:160:5"
											},
											{
												"body": {
													"nativeSrc": "937:99:5",
													"nodeType": "YulBlock",
													"src": "937:99:5",
													"statements": [
														{
															"nativeSrc": "947:22:5",
															"nodeType": "YulAssignment",
															"src": "947:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:5"
																},
																"nativeSrc": "956:13:5",
																"nodeType": "YulFunctionCall",
																"src": "956:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$191",
																	"nativeSrc": "978:45:5",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:5"
																},
																"nativeSrc": "978:52:5",
																"nodeType": "YulFunctionCall",
																"src": "978:52:5"
															},
															"nativeSrc": "978:52:5",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "855:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:5",
														"nodeType": "YulTypedName",
														"src": "923:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:5",
														"nodeType": "YulTypedName",
														"src": "931:5:5",
														"type": ""
													}
												],
												"src": "855:181:5"
											},
											{
												"body": {
													"nativeSrc": "1138:293:5",
													"nodeType": "YulBlock",
													"src": "1138:293:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1184:83:5",
																"nodeType": "YulBlock",
																"src": "1184:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1186:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1186:77:5"
																			},
																			"nativeSrc": "1186:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1186:79:5"
																		},
																		"nativeSrc": "1186:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1186:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1159:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1159:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1168:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1168:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1155:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1155:3:5"
																		},
																		"nativeSrc": "1155:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1155:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1180:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1180:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1151:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:5"
																},
																"nativeSrc": "1151:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1151:32:5"
															},
															"nativeSrc": "1148:119:5",
															"nodeType": "YulIf",
															"src": "1148:119:5"
														},
														{
															"nativeSrc": "1277:147:5",
															"nodeType": "YulBlock",
															"src": "1277:147:5",
															"statements": [
																{
																	"nativeSrc": "1292:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1306:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1296:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1321:93:5",
																	"nodeType": "YulAssignment",
																	"src": "1321:93:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1386:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1386:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1397:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1397:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1382:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1382:3:5"
																				},
																				"nativeSrc": "1382:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1382:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1406:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1406:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
																			"nativeSrc": "1331:50:5",
																			"nodeType": "YulIdentifier",
																			"src": "1331:50:5"
																		},
																		"nativeSrc": "1331:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1331:83:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1321:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1321:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "1042:389:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1108:9:5",
														"nodeType": "YulTypedName",
														"src": "1108:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1119:7:5",
														"nodeType": "YulTypedName",
														"src": "1119:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1131:6:5",
														"nodeType": "YulTypedName",
														"src": "1131:6:5",
														"type": ""
													}
												],
												"src": "1042:389:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$191(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$191(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$191(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$191_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$191(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$191_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b506040516110e33803806110e3833981810160405281019061003191906100da565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610105565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100988261006f565b9050919050565b5f6100a98261008e565b9050919050565b6100b98161009f565b81146100c3575f80fd5b50565b5f815190506100d4816100b0565b92915050565b5f602082840312156100ef576100ee61006b565b5b5f6100fc848285016100c6565b91505092915050565b608051610fa36101405f395f818161012b01528181610216015281816102b701528181610314015281816103ff01526104ba0152610fa35ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063089fe6aa1461004e57806373bd43ad1461006c578063c31c9c071461009c578063c4b69a18146100ba575b5f80fd5b6100566100ea565b604051610063919061091e565b60405180910390f35b6100866004803603810190610081919061096e565b6100f0565b60405161009391906109a8565b60405180910390f35b6100a46102b5565b6040516100b19190610a3b565b60405180910390f35b6100d460048036038101906100cf9190610a54565b6102d9565b6040516100e191906109a8565b60405180910390f35b610bb881565b5f610111731c7d4b196cb0c7b01d743fbc6116a902379c7238333085610511565b610150731c7d4b196cb0c7b01d743fbc6116a902379c72387f000000000000000000000000000000000000000000000000000000000000000084610663565b5f604051806101000160405280731c7d4b196cb0c7b01d743fbc6116a902379c723873ffffffffffffffffffffffffffffffffffffffff16815260200173fff9976782d46cc05630d1f6ebab18b2324d6b1473ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161026d9190610b7f565b6020604051808303815f875af1158015610289573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ad9190610bad565b915050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f6102fa731c7d4b196cb0c7b01d743fbc6116a902379c7238333085610511565b610339731c7d4b196cb0c7b01d743fbc6116a902379c72387f000000000000000000000000000000000000000000000000000000000000000084610663565b5f604051806101000160405280731c7d4b196cb0c7b01d743fbc6116a902379c723873ffffffffffffffffffffffffffffffffffffffff16815260200173fff9976782d46cc05630d1f6ebab18b2324d6b1473ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018581526020018481526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016104569190610c78565b6020604051808303815f875af1158015610472573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104969190610bad565b91508282101561050a576104df731c7d4b196cb0c7b01d743fbc6116a902379c72387f00000000000000000000000000000000000000000000000000000000000000005f610663565b610509731c7d4b196cb0c7b01d743fbc6116a902379c72383384866105049190610cbf565b6107b2565b5b5092915050565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161054793929190610d01565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105b19190610d88565b5f604051808303815f865af19150503d805f81146105ea576040519150601f19603f3d011682016040523d82523d5f602084013e6105ef565b606091505b509150915081801561061c57505f8151148061061b57508080602001905181019061061a9190610dd3565b5b5b61065b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065290610e58565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610697929190610e76565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107019190610d88565b5f604051808303815f865af19150503d805f811461073a576040519150601f19603f3d011682016040523d82523d5f602084013e61073f565b606091505b509150915081801561076c57505f8151148061076b57508080602001905181019061076a9190610dd3565b5b5b6107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a290610ee7565b60405180910390fd5b5050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b85856040516024016107e6929190610e76565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108509190610d88565b5f604051808303815f865af19150503d805f8114610889576040519150601f19603f3d011682016040523d82523d5f602084013e61088e565b606091505b50915091508180156108bb57505f815114806108ba5750808060200190518101906108b99190610dd3565b5b5b6108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f190610f4f565b60405180910390fd5b5050505050565b5f62ffffff82169050919050565b61091881610901565b82525050565b5f6020820190506109315f83018461090f565b92915050565b5f80fd5b5f819050919050565b61094d8161093b565b8114610957575f80fd5b50565b5f8135905061096881610944565b92915050565b5f6020828403121561098357610982610937565b5b5f6109908482850161095a565b91505092915050565b6109a28161093b565b82525050565b5f6020820190506109bb5f830184610999565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a036109fe6109f9846109c1565b6109e0565b6109c1565b9050919050565b5f610a14826109e9565b9050919050565b5f610a2582610a0a565b9050919050565b610a3581610a1b565b82525050565b5f602082019050610a4e5f830184610a2c565b92915050565b5f8060408385031215610a6a57610a69610937565b5b5f610a778582860161095a565b9250506020610a888582860161095a565b9150509250929050565b5f610a9c826109c1565b9050919050565b610aac81610a92565b82525050565b610abb81610901565b82525050565b610aca8161093b565b82525050565b610ad9816109c1565b82525050565b61010082015f820151610af45f850182610aa3565b506020820151610b076020850182610aa3565b506040820151610b1a6040850182610ab2565b506060820151610b2d6060850182610aa3565b506080820151610b406080850182610ac1565b5060a0820151610b5360a0850182610ac1565b5060c0820151610b6660c0850182610ac1565b5060e0820151610b7960e0850182610ad0565b50505050565b5f61010082019050610b935f830184610adf565b92915050565b5f81519050610ba781610944565b92915050565b5f60208284031215610bc257610bc1610937565b5b5f610bcf84828501610b99565b91505092915050565b61010082015f820151610bed5f850182610aa3565b506020820151610c006020850182610aa3565b506040820151610c136040850182610ab2565b506060820151610c266060850182610aa3565b506080820151610c396080850182610ac1565b5060a0820151610c4c60a0850182610ac1565b5060c0820151610c5f60c0850182610ac1565b5060e0820151610c7260e0850182610ad0565b50505050565b5f61010082019050610c8c5f830184610bd8565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610cc98261093b565b9150610cd48361093b565b9250828203905081811115610cec57610ceb610c92565b5b92915050565b610cfb81610a92565b82525050565b5f606082019050610d145f830186610cf2565b610d216020830185610cf2565b610d2e6040830184610999565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610d6282610d36565b610d6c8185610d40565b9350610d7c818560208601610d4a565b80840191505092915050565b5f610d938284610d58565b915081905092915050565b5f8115159050919050565b610db281610d9e565b8114610dbc575f80fd5b50565b5f81519050610dcd81610da9565b92915050565b5f60208284031215610de857610de7610937565b5b5f610df584828501610dbf565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f610e42600383610dfe565b9150610e4d82610e0e565b602082019050919050565b5f6020820190508181035f830152610e6f81610e36565b9050919050565b5f604082019050610e895f830185610cf2565b610e966020830184610999565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f610ed1600283610dfe565b9150610edc82610e9d565b602082019050919050565b5f6020820190508181035f830152610efe81610ec5565b9050919050565b7f53540000000000000000000000000000000000000000000000000000000000005f82015250565b5f610f39600283610dfe565b9150610f4482610f05565b602082019050919050565b5f6020820190508181035f830152610f6681610f2d565b905091905056fea264697066735822122064807b284766468a009dfbca4d25bc6a2a3d4292c8ba3e29cee53279dc8c69dd64736f6c63430008190033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10E3 CODESIZE SUB DUP1 PUSH2 0x10E3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x105 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98 DUP3 PUSH2 0x6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9 DUP3 PUSH2 0x8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0x9F JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4 DUP2 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0x6B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xFA3 PUSH2 0x140 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x12B ADD MSTORE DUP2 DUP2 PUSH2 0x216 ADD MSTORE DUP2 DUP2 PUSH2 0x2B7 ADD MSTORE DUP2 DUP2 PUSH2 0x314 ADD MSTORE DUP2 DUP2 PUSH2 0x3FF ADD MSTORE PUSH2 0x4BA ADD MSTORE PUSH2 0xFA3 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0xBA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x96E JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCF SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x111 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 CALLER ADDRESS DUP6 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x150 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH32 0x0 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xFFF9976782D46CC05630D1F6EBAB18B2324D6B14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x289 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x2FA PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 CALLER ADDRESS DUP6 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x339 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH32 0x0 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xFFF9976782D46CC05630D1F6EBAB18B2324D6B14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x472 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x50A JUMPI PUSH2 0x4DF PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH32 0x0 PUSH0 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x509 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 CALLER DUP5 DUP7 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0xCBF JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x547 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x61C JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x61B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x61A SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x652 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x697 SWAP3 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x701 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x73F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x76C JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x76B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP1 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7E6 SWAP3 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x850 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x88E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x8BB JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x8BA JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x918 DUP2 PUSH2 0x901 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x931 PUSH0 DUP4 ADD DUP5 PUSH2 0x90F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94D DUP2 PUSH2 0x93B JUMP JUMPDEST DUP2 EQ PUSH2 0x957 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x968 DUP2 PUSH2 0x944 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x983 JUMPI PUSH2 0x982 PUSH2 0x937 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x990 DUP5 DUP3 DUP6 ADD PUSH2 0x95A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9A2 DUP2 PUSH2 0x93B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9BB PUSH0 DUP4 ADD DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA03 PUSH2 0x9FE PUSH2 0x9F9 DUP5 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA14 DUP3 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA25 DUP3 PUSH2 0xA0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA4E PUSH0 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH2 0xA69 PUSH2 0x937 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA77 DUP6 DUP3 DUP7 ADD PUSH2 0x95A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA88 DUP6 DUP3 DUP7 ADD PUSH2 0x95A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9C DUP3 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAAC DUP2 PUSH2 0xA92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xABB DUP2 PUSH2 0x901 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xACA DUP2 PUSH2 0x93B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xAD9 DUP2 PUSH2 0x9C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xAF4 PUSH0 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xB07 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xB1A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAB2 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xB2D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xB40 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xB53 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xB66 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xB79 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xAD0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xB93 PUSH0 DUP4 ADD DUP5 PUSH2 0xADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBA7 DUP2 PUSH2 0x944 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC2 JUMPI PUSH2 0xBC1 PUSH2 0x937 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBCF DUP5 DUP3 DUP6 ADD PUSH2 0xB99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xBED PUSH0 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xC00 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xC13 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAB2 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xC26 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xC39 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xC4C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xC5F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xC72 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xAD0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xC8C PUSH0 DUP4 ADD DUP5 PUSH2 0xBD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCC9 DUP3 PUSH2 0x93B JUMP JUMPDEST SWAP2 POP PUSH2 0xCD4 DUP4 PUSH2 0x93B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0xC92 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCFB DUP2 PUSH2 0xA92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD14 PUSH0 DUP4 ADD DUP7 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0xD21 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0xD2E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD62 DUP3 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xD6C DUP2 DUP6 PUSH2 0xD40 JUMP JUMPDEST SWAP4 POP PUSH2 0xD7C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD4A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD93 DUP3 DUP5 PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB2 DUP2 PUSH2 0xD9E JUMP JUMPDEST DUP2 EQ PUSH2 0xDBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDCD DUP2 PUSH2 0xDA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE8 JUMPI PUSH2 0xDE7 PUSH2 0x937 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF5 DUP5 DUP3 DUP6 ADD PUSH2 0xDBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE42 PUSH1 0x3 DUP4 PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP PUSH2 0xE4D DUP3 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE6F DUP2 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE89 PUSH0 DUP4 ADD DUP6 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0xE96 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xED1 PUSH1 0x2 DUP4 PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP PUSH2 0xEDC DUP3 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEFE DUP2 PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF39 PUSH1 0x2 DUP4 PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP PUSH2 0xF44 DUP3 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF66 DUP2 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x807B284766 CHAINID DUP11 STOP SWAP14 0xFB 0xCA 0x4D 0x25 0xBC PUSH11 0x2A3D4292C8BA3E29CEE532 PUSH26 0xDC8C69DD64736F6C634300081900330000000000000000000000 ",
							"sourceMap": "201:4389:4:-:0;;;622:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;682:11;669:24;;;;;;;;;;622:78;201:4389;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:389::-;1131:6;1180:2;1168:9;1159:7;1155:23;1151:32;1148:119;;;1186:79;;:::i;:::-;1148:119;1306:1;1331:83;1406:7;1397:6;1386:9;1382:22;1331:83;:::i;:::-;1321:93;;1277:147;1042:389;;;;:::o;201:4389:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@poolFee_378": {
									"entryPoint": 234,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_335": {
									"entryPoint": 1635,
									"id": 335,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_243": {
									"entryPoint": 1297,
									"id": 243,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_289": {
									"entryPoint": 1970,
									"id": 289,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapExactInputSingle_448": {
									"entryPoint": 240,
									"id": 448,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapExactOutputSingle_536": {
									"entryPoint": 729,
									"id": 536,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapRouter_375": {
									"entryPoint": 693,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack": {
									"entryPoint": 2604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack": {
									"entryPoint": 2783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack": {
									"entryPoint": 3032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 2768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 2738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3329,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3702,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed": {
									"entryPoint": 3192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 2334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 2305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$191_to_t_address": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca": {
									"entryPoint": 3845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86": {
									"entryPoint": 3598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14768:5",
										"nodeType": "YulBlock",
										"src": "0:14768:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:47:5",
													"nodeType": "YulBlock",
													"src": "51:47:5",
													"statements": [
														{
															"nativeSrc": "61:31:5",
															"nodeType": "YulAssignment",
															"src": "61:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:8:5",
																		"nodeType": "YulLiteral",
																		"src": "83:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:5"
																},
																"nativeSrc": "72:20:5",
																"nodeType": "YulFunctionCall",
																"src": "72:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "7:91:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:5",
														"nodeType": "YulTypedName",
														"src": "33:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:5",
														"nodeType": "YulTypedName",
														"src": "43:7:5",
														"type": ""
													}
												],
												"src": "7:91:5"
											},
											{
												"body": {
													"nativeSrc": "167:52:5",
													"nodeType": "YulBlock",
													"src": "167:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "184:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "184:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "206:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "206:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "189:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "189:16:5"
																		},
																		"nativeSrc": "189:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "189:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "177:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:5"
																},
																"nativeSrc": "177:36:5",
																"nodeType": "YulFunctionCall",
																"src": "177:36:5"
															},
															"nativeSrc": "177:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "177:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "104:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "155:5:5",
														"nodeType": "YulTypedName",
														"src": "155:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "162:3:5",
														"nodeType": "YulTypedName",
														"src": "162:3:5",
														"type": ""
													}
												],
												"src": "104:115:5"
											},
											{
												"body": {
													"nativeSrc": "321:122:5",
													"nodeType": "YulBlock",
													"src": "321:122:5",
													"statements": [
														{
															"nativeSrc": "331:26:5",
															"nodeType": "YulAssignment",
															"src": "331:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "343:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "354:2:5",
																		"nodeType": "YulLiteral",
																		"src": "354:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "339:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "339:3:5"
																},
																"nativeSrc": "339:18:5",
																"nodeType": "YulFunctionCall",
																"src": "339:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "331:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "331:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "409:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "409:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "422:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "422:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "433:1:5",
																				"nodeType": "YulLiteral",
																				"src": "433:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "418:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "418:3:5"
																		},
																		"nativeSrc": "418:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "418:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "367:41:5",
																	"nodeType": "YulIdentifier",
																	"src": "367:41:5"
																},
																"nativeSrc": "367:69:5",
																"nodeType": "YulFunctionCall",
																"src": "367:69:5"
															},
															"nativeSrc": "367:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "367:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nativeSrc": "225:218:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "293:9:5",
														"nodeType": "YulTypedName",
														"src": "293:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "305:6:5",
														"nodeType": "YulTypedName",
														"src": "305:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "316:4:5",
														"nodeType": "YulTypedName",
														"src": "316:4:5",
														"type": ""
													}
												],
												"src": "225:218:5"
											},
											{
												"body": {
													"nativeSrc": "489:35:5",
													"nodeType": "YulBlock",
													"src": "489:35:5",
													"statements": [
														{
															"nativeSrc": "499:19:5",
															"nodeType": "YulAssignment",
															"src": "499:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "515:2:5",
																		"nodeType": "YulLiteral",
																		"src": "515:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "509:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:5:5"
																},
																"nativeSrc": "509:9:5",
																"nodeType": "YulFunctionCall",
																"src": "509:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "499:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "499:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "449:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "482:6:5",
														"nodeType": "YulTypedName",
														"src": "482:6:5",
														"type": ""
													}
												],
												"src": "449:75:5"
											},
											{
												"body": {
													"nativeSrc": "619:28:5",
													"nodeType": "YulBlock",
													"src": "619:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "636:1:5",
																		"nodeType": "YulLiteral",
																		"src": "636:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "639:1:5",
																		"nodeType": "YulLiteral",
																		"src": "639:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "629:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "629:6:5"
																},
																"nativeSrc": "629:12:5",
																"nodeType": "YulFunctionCall",
																"src": "629:12:5"
															},
															"nativeSrc": "629:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "629:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "530:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "530:117:5"
											},
											{
												"body": {
													"nativeSrc": "742:28:5",
													"nodeType": "YulBlock",
													"src": "742:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "759:1:5",
																		"nodeType": "YulLiteral",
																		"src": "759:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "762:1:5",
																		"nodeType": "YulLiteral",
																		"src": "762:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "752:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:5"
																},
																"nativeSrc": "752:12:5",
																"nodeType": "YulFunctionCall",
																"src": "752:12:5"
															},
															"nativeSrc": "752:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "752:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "653:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "653:117:5"
											},
											{
												"body": {
													"nativeSrc": "821:32:5",
													"nodeType": "YulBlock",
													"src": "821:32:5",
													"statements": [
														{
															"nativeSrc": "831:16:5",
															"nodeType": "YulAssignment",
															"src": "831:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "842:5:5",
																"nodeType": "YulIdentifier",
																"src": "842:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "831:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "831:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "776:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "803:5:5",
														"nodeType": "YulTypedName",
														"src": "803:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "813:7:5",
														"nodeType": "YulTypedName",
														"src": "813:7:5",
														"type": ""
													}
												],
												"src": "776:77:5"
											},
											{
												"body": {
													"nativeSrc": "902:79:5",
													"nodeType": "YulBlock",
													"src": "902:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "959:16:5",
																"nodeType": "YulBlock",
																"src": "959:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:5",
																					"nodeType": "YulLiteral",
																					"src": "968:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "971:1:5",
																					"nodeType": "YulLiteral",
																					"src": "971:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "961:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:5"
																			},
																			"nativeSrc": "961:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "961:12:5"
																		},
																		"nativeSrc": "961:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "961:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "925:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "925:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "950:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "950:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "932:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "932:17:5"
																				},
																				"nativeSrc": "932:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "932:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "922:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "922:2:5"
																		},
																		"nativeSrc": "922:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "922:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "915:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:5"
																},
																"nativeSrc": "915:43:5",
																"nodeType": "YulFunctionCall",
																"src": "915:43:5"
															},
															"nativeSrc": "912:63:5",
															"nodeType": "YulIf",
															"src": "912:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "859:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "895:5:5",
														"nodeType": "YulTypedName",
														"src": "895:5:5",
														"type": ""
													}
												],
												"src": "859:122:5"
											},
											{
												"body": {
													"nativeSrc": "1039:87:5",
													"nodeType": "YulBlock",
													"src": "1039:87:5",
													"statements": [
														{
															"nativeSrc": "1049:29:5",
															"nodeType": "YulAssignment",
															"src": "1049:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1071:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1071:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1058:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1058:12:5"
																},
																"nativeSrc": "1058:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1058:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1049:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1049:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1114:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1114:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1087:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1087:26:5"
																},
																"nativeSrc": "1087:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1087:33:5"
															},
															"nativeSrc": "1087:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1087:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "987:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1017:6:5",
														"nodeType": "YulTypedName",
														"src": "1017:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1025:3:5",
														"nodeType": "YulTypedName",
														"src": "1025:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1033:5:5",
														"nodeType": "YulTypedName",
														"src": "1033:5:5",
														"type": ""
													}
												],
												"src": "987:139:5"
											},
											{
												"body": {
													"nativeSrc": "1198:263:5",
													"nodeType": "YulBlock",
													"src": "1198:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1244:83:5",
																"nodeType": "YulBlock",
																"src": "1244:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1246:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1246:77:5"
																			},
																			"nativeSrc": "1246:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1246:79:5"
																		},
																		"nativeSrc": "1246:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1246:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1219:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1219:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1228:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1228:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1215:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1215:3:5"
																		},
																		"nativeSrc": "1215:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1215:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1240:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1240:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1211:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1211:3:5"
																},
																"nativeSrc": "1211:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1211:32:5"
															},
															"nativeSrc": "1208:119:5",
															"nodeType": "YulIf",
															"src": "1208:119:5"
														},
														{
															"nativeSrc": "1337:117:5",
															"nodeType": "YulBlock",
															"src": "1337:117:5",
															"statements": [
																{
																	"nativeSrc": "1352:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1352:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1366:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1366:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1356:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1356:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1381:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1381:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1416:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1416:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1427:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1427:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1412:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1412:3:5"
																				},
																				"nativeSrc": "1412:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1412:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1436:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1436:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1391:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1391:20:5"
																		},
																		"nativeSrc": "1391:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1391:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1381:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1381:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1132:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1168:9:5",
														"nodeType": "YulTypedName",
														"src": "1168:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1179:7:5",
														"nodeType": "YulTypedName",
														"src": "1179:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1191:6:5",
														"nodeType": "YulTypedName",
														"src": "1191:6:5",
														"type": ""
													}
												],
												"src": "1132:329:5"
											},
											{
												"body": {
													"nativeSrc": "1532:53:5",
													"nodeType": "YulBlock",
													"src": "1532:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1549:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1549:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1572:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1572:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1554:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1554:17:5"
																		},
																		"nativeSrc": "1554:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1554:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1542:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:5"
																},
																"nativeSrc": "1542:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1542:37:5"
															},
															"nativeSrc": "1542:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1542:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1467:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1520:5:5",
														"nodeType": "YulTypedName",
														"src": "1520:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1527:3:5",
														"nodeType": "YulTypedName",
														"src": "1527:3:5",
														"type": ""
													}
												],
												"src": "1467:118:5"
											},
											{
												"body": {
													"nativeSrc": "1689:124:5",
													"nodeType": "YulBlock",
													"src": "1689:124:5",
													"statements": [
														{
															"nativeSrc": "1699:26:5",
															"nodeType": "YulAssignment",
															"src": "1699:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1711:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1711:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1722:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1722:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1707:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:5"
																},
																"nativeSrc": "1707:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1707:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1699:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1699:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1779:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1779:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1792:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1792:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1803:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1803:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1788:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1788:3:5"
																		},
																		"nativeSrc": "1788:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1788:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1735:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1735:43:5"
																},
																"nativeSrc": "1735:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1735:71:5"
															},
															"nativeSrc": "1735:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1735:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1591:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1661:9:5",
														"nodeType": "YulTypedName",
														"src": "1661:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1673:6:5",
														"nodeType": "YulTypedName",
														"src": "1673:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1684:4:5",
														"nodeType": "YulTypedName",
														"src": "1684:4:5",
														"type": ""
													}
												],
												"src": "1591:222:5"
											},
											{
												"body": {
													"nativeSrc": "1864:81:5",
													"nodeType": "YulBlock",
													"src": "1864:81:5",
													"statements": [
														{
															"nativeSrc": "1874:65:5",
															"nodeType": "YulAssignment",
															"src": "1874:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1889:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1889:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1896:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1896:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1885:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1885:3:5"
																},
																"nativeSrc": "1885:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1885:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1874:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1874:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1819:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1846:5:5",
														"nodeType": "YulTypedName",
														"src": "1846:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1856:7:5",
														"nodeType": "YulTypedName",
														"src": "1856:7:5",
														"type": ""
													}
												],
												"src": "1819:126:5"
											},
											{
												"body": {
													"nativeSrc": "1983:28:5",
													"nodeType": "YulBlock",
													"src": "1983:28:5",
													"statements": [
														{
															"nativeSrc": "1993:12:5",
															"nodeType": "YulAssignment",
															"src": "1993:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2000:5:5",
																"nodeType": "YulIdentifier",
																"src": "2000:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1993:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1993:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1951:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1969:5:5",
														"nodeType": "YulTypedName",
														"src": "1969:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1979:3:5",
														"nodeType": "YulTypedName",
														"src": "1979:3:5",
														"type": ""
													}
												],
												"src": "1951:60:5"
											},
											{
												"body": {
													"nativeSrc": "2077:82:5",
													"nodeType": "YulBlock",
													"src": "2077:82:5",
													"statements": [
														{
															"nativeSrc": "2087:66:5",
															"nodeType": "YulAssignment",
															"src": "2087:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2145:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2145:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2127:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2127:17:5"
																				},
																				"nativeSrc": "2127:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2127:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2118:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "2118:8:5"
																		},
																		"nativeSrc": "2118:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2118:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2100:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2100:17:5"
																},
																"nativeSrc": "2100:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2100:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2087:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2087:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2017:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2057:5:5",
														"nodeType": "YulTypedName",
														"src": "2057:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2067:9:5",
														"nodeType": "YulTypedName",
														"src": "2067:9:5",
														"type": ""
													}
												],
												"src": "2017:142:5"
											},
											{
												"body": {
													"nativeSrc": "2225:66:5",
													"nodeType": "YulBlock",
													"src": "2225:66:5",
													"statements": [
														{
															"nativeSrc": "2235:50:5",
															"nodeType": "YulAssignment",
															"src": "2235:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2279:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2279:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2248:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2248:30:5"
																},
																"nativeSrc": "2248:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2248:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2235:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2235:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2165:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2205:5:5",
														"nodeType": "YulTypedName",
														"src": "2205:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2215:9:5",
														"nodeType": "YulTypedName",
														"src": "2215:9:5",
														"type": ""
													}
												],
												"src": "2165:126:5"
											},
											{
												"body": {
													"nativeSrc": "2376:66:5",
													"nodeType": "YulBlock",
													"src": "2376:66:5",
													"statements": [
														{
															"nativeSrc": "2386:50:5",
															"nodeType": "YulAssignment",
															"src": "2386:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2430:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2399:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2399:30:5"
																},
																"nativeSrc": "2399:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2399:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2386:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2386:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
												"nativeSrc": "2297:145:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2356:5:5",
														"nodeType": "YulTypedName",
														"src": "2356:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2366:9:5",
														"nodeType": "YulTypedName",
														"src": "2366:9:5",
														"type": ""
													}
												],
												"src": "2297:145:5"
											},
											{
												"body": {
													"nativeSrc": "2532:85:5",
													"nodeType": "YulBlock",
													"src": "2532:85:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2549:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2549:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2604:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2604:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
																			"nativeSrc": "2554:49:5",
																			"nodeType": "YulIdentifier",
																			"src": "2554:49:5"
																		},
																		"nativeSrc": "2554:56:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2554:56:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2542:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2542:6:5"
																},
																"nativeSrc": "2542:69:5",
																"nodeType": "YulFunctionCall",
																"src": "2542:69:5"
															},
															"nativeSrc": "2542:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "2542:69:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
												"nativeSrc": "2448:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2520:5:5",
														"nodeType": "YulTypedName",
														"src": "2520:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2527:3:5",
														"nodeType": "YulTypedName",
														"src": "2527:3:5",
														"type": ""
													}
												],
												"src": "2448:169:5"
											},
											{
												"body": {
													"nativeSrc": "2740:143:5",
													"nodeType": "YulBlock",
													"src": "2740:143:5",
													"statements": [
														{
															"nativeSrc": "2750:26:5",
															"nodeType": "YulAssignment",
															"src": "2750:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2762:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2762:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2773:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2773:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2758:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2758:3:5"
																},
																"nativeSrc": "2758:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2758:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2750:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2750:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2849:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2849:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2862:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2862:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2873:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2873:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2858:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2858:3:5"
																		},
																		"nativeSrc": "2858:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
																	"nativeSrc": "2786:62:5",
																	"nodeType": "YulIdentifier",
																	"src": "2786:62:5"
																},
																"nativeSrc": "2786:90:5",
																"nodeType": "YulFunctionCall",
																"src": "2786:90:5"
															},
															"nativeSrc": "2786:90:5",
															"nodeType": "YulExpressionStatement",
															"src": "2786:90:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed",
												"nativeSrc": "2623:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2712:9:5",
														"nodeType": "YulTypedName",
														"src": "2712:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2724:6:5",
														"nodeType": "YulTypedName",
														"src": "2724:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2735:4:5",
														"nodeType": "YulTypedName",
														"src": "2735:4:5",
														"type": ""
													}
												],
												"src": "2623:260:5"
											},
											{
												"body": {
													"nativeSrc": "2972:391:5",
													"nodeType": "YulBlock",
													"src": "2972:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3018:83:5",
																"nodeType": "YulBlock",
																"src": "3018:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3020:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3020:77:5"
																			},
																			"nativeSrc": "3020:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3020:79:5"
																		},
																		"nativeSrc": "3020:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3020:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2993:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2993:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3002:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3002:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2989:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2989:3:5"
																		},
																		"nativeSrc": "2989:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2989:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3014:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3014:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2985:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2985:3:5"
																},
																"nativeSrc": "2985:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2985:32:5"
															},
															"nativeSrc": "2982:119:5",
															"nodeType": "YulIf",
															"src": "2982:119:5"
														},
														{
															"nativeSrc": "3111:117:5",
															"nodeType": "YulBlock",
															"src": "3111:117:5",
															"statements": [
																{
																	"nativeSrc": "3126:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3126:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3140:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3140:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3130:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3130:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3155:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3155:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3190:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3190:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3201:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3201:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3186:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3186:3:5"
																				},
																				"nativeSrc": "3186:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3186:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3210:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3210:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3165:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3165:20:5"
																		},
																		"nativeSrc": "3165:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3165:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3155:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3155:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3238:118:5",
															"nodeType": "YulBlock",
															"src": "3238:118:5",
															"statements": [
																{
																	"nativeSrc": "3253:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3253:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3267:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3267:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3257:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3257:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3283:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3283:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3318:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3329:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3329:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3314:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:5"
																				},
																				"nativeSrc": "3314:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3314:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3338:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3338:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3293:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3293:20:5"
																		},
																		"nativeSrc": "3293:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3293:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3283:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3283:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2889:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2934:9:5",
														"nodeType": "YulTypedName",
														"src": "2934:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2945:7:5",
														"nodeType": "YulTypedName",
														"src": "2945:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2957:6:5",
														"nodeType": "YulTypedName",
														"src": "2957:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2965:6:5",
														"nodeType": "YulTypedName",
														"src": "2965:6:5",
														"type": ""
													}
												],
												"src": "2889:474:5"
											},
											{
												"body": {
													"nativeSrc": "3414:51:5",
													"nodeType": "YulBlock",
													"src": "3414:51:5",
													"statements": [
														{
															"nativeSrc": "3424:35:5",
															"nodeType": "YulAssignment",
															"src": "3424:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3453:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3453:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3435:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3435:17:5"
																},
																"nativeSrc": "3435:24:5",
																"nodeType": "YulFunctionCall",
																"src": "3435:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3424:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3424:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3369:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3396:5:5",
														"nodeType": "YulTypedName",
														"src": "3396:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3406:7:5",
														"nodeType": "YulTypedName",
														"src": "3406:7:5",
														"type": ""
													}
												],
												"src": "3369:96:5"
											},
											{
												"body": {
													"nativeSrc": "3526:53:5",
													"nodeType": "YulBlock",
													"src": "3526:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3543:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3543:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3566:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3566:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3548:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3548:17:5"
																		},
																		"nativeSrc": "3548:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3548:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3536:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3536:6:5"
																},
																"nativeSrc": "3536:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3536:37:5"
															},
															"nativeSrc": "3536:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3536:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "3471:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3514:5:5",
														"nodeType": "YulTypedName",
														"src": "3514:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3521:3:5",
														"nodeType": "YulTypedName",
														"src": "3521:3:5",
														"type": ""
													}
												],
												"src": "3471:108:5"
											},
											{
												"body": {
													"nativeSrc": "3638:52:5",
													"nodeType": "YulBlock",
													"src": "3638:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3655:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3655:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3677:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "3660:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "3660:16:5"
																		},
																		"nativeSrc": "3660:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3648:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3648:6:5"
																},
																"nativeSrc": "3648:36:5",
																"nodeType": "YulFunctionCall",
																"src": "3648:36:5"
															},
															"nativeSrc": "3648:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "3648:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "3585:105:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3626:5:5",
														"nodeType": "YulTypedName",
														"src": "3626:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3633:3:5",
														"nodeType": "YulTypedName",
														"src": "3633:3:5",
														"type": ""
													}
												],
												"src": "3585:105:5"
											},
											{
												"body": {
													"nativeSrc": "3751:53:5",
													"nodeType": "YulBlock",
													"src": "3751:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3768:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3768:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3791:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3791:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3773:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3773:17:5"
																		},
																		"nativeSrc": "3773:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3773:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3761:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3761:6:5"
																},
																"nativeSrc": "3761:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3761:37:5"
															},
															"nativeSrc": "3761:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3761:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "3696:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3739:5:5",
														"nodeType": "YulTypedName",
														"src": "3739:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3746:3:5",
														"nodeType": "YulTypedName",
														"src": "3746:3:5",
														"type": ""
													}
												],
												"src": "3696:108:5"
											},
											{
												"body": {
													"nativeSrc": "3865:53:5",
													"nodeType": "YulBlock",
													"src": "3865:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3882:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3882:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3905:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3905:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "3887:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3887:17:5"
																		},
																		"nativeSrc": "3887:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3887:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3875:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3875:6:5"
																},
																"nativeSrc": "3875:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3875:37:5"
															},
															"nativeSrc": "3875:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3875:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "3810:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3853:5:5",
														"nodeType": "YulTypedName",
														"src": "3853:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3860:3:5",
														"nodeType": "YulTypedName",
														"src": "3860:3:5",
														"type": ""
													}
												],
												"src": "3810:108:5"
											},
											{
												"body": {
													"nativeSrc": "4162:1479:5",
													"nodeType": "YulBlock",
													"src": "4162:1479:5",
													"statements": [
														{
															"nativeSrc": "4172:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4172:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4188:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4188:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4193:6:5",
																		"nodeType": "YulLiteral",
																		"src": "4193:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4184:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4184:3:5"
																},
																"nativeSrc": "4184:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4184:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4176:4:5",
																	"nodeType": "YulTypedName",
																	"src": "4176:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4210:167:5",
															"nodeType": "YulBlock",
															"src": "4210:167:5",
															"statements": [
																{
																	"nativeSrc": "4248:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4248:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4278:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4278:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4285:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4285:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4274:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4274:3:5"
																				},
																				"nativeSrc": "4274:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4274:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4268:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4268:5:5"
																		},
																		"nativeSrc": "4268:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4268:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4252:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4252:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4338:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4338:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4356:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4356:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4361:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4361:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4352:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4352:3:5"
																				},
																				"nativeSrc": "4352:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4352:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4304:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4304:33:5"
																		},
																		"nativeSrc": "4304:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4304:63:5"
																	},
																	"nativeSrc": "4304:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4304:63:5"
																}
															]
														},
														{
															"nativeSrc": "4387:168:5",
															"nodeType": "YulBlock",
															"src": "4387:168:5",
															"statements": [
																{
																	"nativeSrc": "4426:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4426:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4456:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4456:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4463:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4463:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4452:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4452:3:5"
																				},
																				"nativeSrc": "4452:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4452:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4446:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4446:5:5"
																		},
																		"nativeSrc": "4446:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4446:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4430:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4430:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4516:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4516:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4534:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4534:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4539:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4539:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4530:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4530:3:5"
																				},
																				"nativeSrc": "4530:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4530:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4482:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4482:33:5"
																		},
																		"nativeSrc": "4482:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4482:63:5"
																	},
																	"nativeSrc": "4482:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4482:63:5"
																}
															]
														},
														{
															"nativeSrc": "4565:161:5",
															"nodeType": "YulBlock",
															"src": "4565:161:5",
															"statements": [
																{
																	"nativeSrc": "4599:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4599:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4629:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4629:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4636:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4636:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4625:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4625:3:5"
																				},
																				"nativeSrc": "4625:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4625:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4619:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4619:5:5"
																		},
																		"nativeSrc": "4619:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4619:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4603:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4603:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4687:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4687:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4705:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4705:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4710:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4710:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4701:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4701:3:5"
																				},
																				"nativeSrc": "4701:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4701:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "4655:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "4655:31:5"
																		},
																		"nativeSrc": "4655:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4655:61:5"
																	},
																	"nativeSrc": "4655:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4655:61:5"
																}
															]
														},
														{
															"nativeSrc": "4736:169:5",
															"nodeType": "YulBlock",
															"src": "4736:169:5",
															"statements": [
																{
																	"nativeSrc": "4776:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4776:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4806:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4806:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4813:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4813:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4802:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4802:3:5"
																				},
																				"nativeSrc": "4802:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4802:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4796:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4796:5:5"
																		},
																		"nativeSrc": "4796:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4796:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4780:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4780:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4866:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4866:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4884:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4884:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4889:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4889:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4880:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4880:3:5"
																				},
																				"nativeSrc": "4880:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4880:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4832:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4832:33:5"
																		},
																		"nativeSrc": "4832:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4832:63:5"
																	},
																	"nativeSrc": "4832:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4832:63:5"
																}
															]
														},
														{
															"nativeSrc": "4915:168:5",
															"nodeType": "YulBlock",
															"src": "4915:168:5",
															"statements": [
																{
																	"nativeSrc": "4954:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4954:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4984:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4984:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4991:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4991:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4980:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4980:3:5"
																				},
																				"nativeSrc": "4980:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4980:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4974:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4974:5:5"
																		},
																		"nativeSrc": "4974:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4974:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4958:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4958:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5044:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5044:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5062:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5062:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5067:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5067:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5058:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5058:3:5"
																				},
																				"nativeSrc": "5058:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5058:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5010:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5010:33:5"
																		},
																		"nativeSrc": "5010:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5010:63:5"
																	},
																	"nativeSrc": "5010:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5010:63:5"
																}
															]
														},
														{
															"nativeSrc": "5093:168:5",
															"nodeType": "YulBlock",
															"src": "5093:168:5",
															"statements": [
																{
																	"nativeSrc": "5132:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5132:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5162:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5162:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5169:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5169:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5158:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5158:3:5"
																				},
																				"nativeSrc": "5158:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5158:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5152:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5152:5:5"
																		},
																		"nativeSrc": "5152:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5152:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5136:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5136:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5222:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5222:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5240:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5240:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5245:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5245:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5236:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5236:3:5"
																				},
																				"nativeSrc": "5236:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5236:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5188:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5188:33:5"
																		},
																		"nativeSrc": "5188:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5188:63:5"
																	},
																	"nativeSrc": "5188:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5188:63:5"
																}
															]
														},
														{
															"nativeSrc": "5271:176:5",
															"nodeType": "YulBlock",
															"src": "5271:176:5",
															"statements": [
																{
																	"nativeSrc": "5318:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5348:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5348:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5355:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5355:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5344:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5344:3:5"
																				},
																				"nativeSrc": "5344:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5344:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5338:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5338:5:5"
																		},
																		"nativeSrc": "5338:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5338:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5322:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5322:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5408:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5408:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5426:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5426:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5431:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5431:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5422:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5422:3:5"
																				},
																				"nativeSrc": "5422:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5422:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5374:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5374:33:5"
																		},
																		"nativeSrc": "5374:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5374:63:5"
																	},
																	"nativeSrc": "5374:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5374:63:5"
																}
															]
														},
														{
															"nativeSrc": "5457:177:5",
															"nodeType": "YulBlock",
															"src": "5457:177:5",
															"statements": [
																{
																	"nativeSrc": "5505:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5505:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5535:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5535:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5542:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5542:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5531:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5531:3:5"
																				},
																				"nativeSrc": "5531:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5531:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5525:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5525:5:5"
																		},
																		"nativeSrc": "5525:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5525:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5509:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5509:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5595:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5595:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5613:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5613:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5618:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5618:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5609:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5609:3:5"
																				},
																				"nativeSrc": "5609:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5609:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "5561:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5561:33:5"
																		},
																		"nativeSrc": "5561:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5561:63:5"
																	},
																	"nativeSrc": "5561:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5561:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
												"nativeSrc": "4018:1623:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:5",
														"nodeType": "YulTypedName",
														"src": "4149:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:5",
														"nodeType": "YulTypedName",
														"src": "4156:3:5",
														"type": ""
													}
												],
												"src": "4018:1623:5"
											},
											{
												"body": {
													"nativeSrc": "5823:203:5",
													"nodeType": "YulBlock",
													"src": "5823:203:5",
													"statements": [
														{
															"nativeSrc": "5833:27:5",
															"nodeType": "YulAssignment",
															"src": "5833:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5845:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5845:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5856:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5856:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5841:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5841:3:5"
																},
																"nativeSrc": "5841:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5841:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5833:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5833:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5992:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5992:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6005:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6005:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6016:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6016:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6001:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6001:3:5"
																		},
																		"nativeSrc": "6001:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6001:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
																	"nativeSrc": "5870:121:5",
																	"nodeType": "YulIdentifier",
																	"src": "5870:121:5"
																},
																"nativeSrc": "5870:149:5",
																"nodeType": "YulFunctionCall",
																"src": "5870:149:5"
															},
															"nativeSrc": "5870:149:5",
															"nodeType": "YulExpressionStatement",
															"src": "5870:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
												"nativeSrc": "5647:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5795:9:5",
														"nodeType": "YulTypedName",
														"src": "5795:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5807:6:5",
														"nodeType": "YulTypedName",
														"src": "5807:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5818:4:5",
														"nodeType": "YulTypedName",
														"src": "5818:4:5",
														"type": ""
													}
												],
												"src": "5647:379:5"
											},
											{
												"body": {
													"nativeSrc": "6095:80:5",
													"nodeType": "YulBlock",
													"src": "6095:80:5",
													"statements": [
														{
															"nativeSrc": "6105:22:5",
															"nodeType": "YulAssignment",
															"src": "6105:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6120:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6120:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6114:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6114:5:5"
																},
																"nativeSrc": "6114:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6114:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6105:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6105:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6163:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6163:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6136:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "6136:26:5"
																},
																"nativeSrc": "6136:33:5",
																"nodeType": "YulFunctionCall",
																"src": "6136:33:5"
															},
															"nativeSrc": "6136:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "6136:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6032:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6073:6:5",
														"nodeType": "YulTypedName",
														"src": "6073:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6081:3:5",
														"nodeType": "YulTypedName",
														"src": "6081:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6089:5:5",
														"nodeType": "YulTypedName",
														"src": "6089:5:5",
														"type": ""
													}
												],
												"src": "6032:143:5"
											},
											{
												"body": {
													"nativeSrc": "6258:274:5",
													"nodeType": "YulBlock",
													"src": "6258:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6304:83:5",
																"nodeType": "YulBlock",
																"src": "6304:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6306:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "6306:77:5"
																			},
																			"nativeSrc": "6306:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6306:79:5"
																		},
																		"nativeSrc": "6306:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6306:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6279:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6279:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6288:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6288:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6275:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6275:3:5"
																		},
																		"nativeSrc": "6275:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6275:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6300:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6300:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6271:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6271:3:5"
																},
																"nativeSrc": "6271:32:5",
																"nodeType": "YulFunctionCall",
																"src": "6271:32:5"
															},
															"nativeSrc": "6268:119:5",
															"nodeType": "YulIf",
															"src": "6268:119:5"
														},
														{
															"nativeSrc": "6397:128:5",
															"nodeType": "YulBlock",
															"src": "6397:128:5",
															"statements": [
																{
																	"nativeSrc": "6412:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6412:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6426:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6426:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6416:6:5",
																			"nodeType": "YulTypedName",
																			"src": "6416:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6441:74:5",
																	"nodeType": "YulAssignment",
																	"src": "6441:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6487:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "6487:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6498:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "6498:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6483:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6483:3:5"
																				},
																				"nativeSrc": "6483:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6483:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6507:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6507:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "6451:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "6451:31:5"
																		},
																		"nativeSrc": "6451:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6451:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6441:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6441:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6181:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6228:9:5",
														"nodeType": "YulTypedName",
														"src": "6228:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6239:7:5",
														"nodeType": "YulTypedName",
														"src": "6239:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6251:6:5",
														"nodeType": "YulTypedName",
														"src": "6251:6:5",
														"type": ""
													}
												],
												"src": "6181:351:5"
											},
											{
												"body": {
													"nativeSrc": "6780:1479:5",
													"nodeType": "YulBlock",
													"src": "6780:1479:5",
													"statements": [
														{
															"nativeSrc": "6790:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6790:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6806:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6806:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6811:6:5",
																		"nodeType": "YulLiteral",
																		"src": "6811:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6802:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:5"
																},
																"nativeSrc": "6802:16:5",
																"nodeType": "YulFunctionCall",
																"src": "6802:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "6794:4:5",
																	"nodeType": "YulTypedName",
																	"src": "6794:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6828:167:5",
															"nodeType": "YulBlock",
															"src": "6828:167:5",
															"statements": [
																{
																	"nativeSrc": "6866:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6866:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6896:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6896:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6903:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6903:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6892:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6892:3:5"
																				},
																				"nativeSrc": "6892:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6892:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6886:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "6886:5:5"
																		},
																		"nativeSrc": "6886:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6886:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6870:12:5",
																			"nodeType": "YulTypedName",
																			"src": "6870:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6956:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "6956:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6974:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6974:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6979:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6979:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6970:3:5"
																				},
																				"nativeSrc": "6970:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6970:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6922:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "6922:33:5"
																		},
																		"nativeSrc": "6922:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6922:63:5"
																	},
																	"nativeSrc": "6922:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "6922:63:5"
																}
															]
														},
														{
															"nativeSrc": "7005:168:5",
															"nodeType": "YulBlock",
															"src": "7005:168:5",
															"statements": [
																{
																	"nativeSrc": "7044:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7044:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7074:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7074:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7081:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7081:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7070:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7070:3:5"
																				},
																				"nativeSrc": "7070:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7070:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7064:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7064:5:5"
																		},
																		"nativeSrc": "7064:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7064:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7048:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7048:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7134:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7134:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7152:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7152:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7157:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7157:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7148:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7148:3:5"
																				},
																				"nativeSrc": "7148:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7148:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "7100:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7100:33:5"
																		},
																		"nativeSrc": "7100:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7100:63:5"
																	},
																	"nativeSrc": "7100:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7100:63:5"
																}
															]
														},
														{
															"nativeSrc": "7183:161:5",
															"nodeType": "YulBlock",
															"src": "7183:161:5",
															"statements": [
																{
																	"nativeSrc": "7217:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7217:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7247:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7247:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7254:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7254:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7243:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7243:3:5"
																				},
																				"nativeSrc": "7243:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7243:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7237:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7237:5:5"
																		},
																		"nativeSrc": "7237:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7237:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7221:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7221:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7305:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7305:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7323:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7323:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7328:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7328:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7319:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7319:3:5"
																				},
																				"nativeSrc": "7319:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7319:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "7273:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "7273:31:5"
																		},
																		"nativeSrc": "7273:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7273:61:5"
																	},
																	"nativeSrc": "7273:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7273:61:5"
																}
															]
														},
														{
															"nativeSrc": "7354:169:5",
															"nodeType": "YulBlock",
															"src": "7354:169:5",
															"statements": [
																{
																	"nativeSrc": "7394:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7394:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7424:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7424:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7431:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7431:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7420:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7420:3:5"
																				},
																				"nativeSrc": "7420:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7420:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7414:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7414:5:5"
																		},
																		"nativeSrc": "7414:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7414:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7398:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7398:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7484:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7484:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7502:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7502:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7507:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7507:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7498:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7498:3:5"
																				},
																				"nativeSrc": "7498:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7498:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "7450:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7450:33:5"
																		},
																		"nativeSrc": "7450:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7450:63:5"
																	},
																	"nativeSrc": "7450:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7450:63:5"
																}
															]
														},
														{
															"nativeSrc": "7533:168:5",
															"nodeType": "YulBlock",
															"src": "7533:168:5",
															"statements": [
																{
																	"nativeSrc": "7572:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7572:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7602:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7602:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7609:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7609:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7598:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7598:3:5"
																				},
																				"nativeSrc": "7598:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7598:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7592:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7592:5:5"
																		},
																		"nativeSrc": "7592:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7592:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7576:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7576:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7662:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7662:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7680:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7680:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7685:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7685:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7676:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7676:3:5"
																				},
																				"nativeSrc": "7676:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7676:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7628:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7628:33:5"
																		},
																		"nativeSrc": "7628:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7628:63:5"
																	},
																	"nativeSrc": "7628:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7628:63:5"
																}
															]
														},
														{
															"nativeSrc": "7711:169:5",
															"nodeType": "YulBlock",
															"src": "7711:169:5",
															"statements": [
																{
																	"nativeSrc": "7751:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7751:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7781:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7781:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7788:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7788:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7777:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7777:3:5"
																				},
																				"nativeSrc": "7777:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7777:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7771:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7771:5:5"
																		},
																		"nativeSrc": "7771:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7771:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7755:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7755:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7841:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7841:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7859:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7859:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7864:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7864:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7855:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7855:3:5"
																				},
																				"nativeSrc": "7855:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7855:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7807:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7807:33:5"
																		},
																		"nativeSrc": "7807:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7807:63:5"
																	},
																	"nativeSrc": "7807:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7807:63:5"
																}
															]
														},
														{
															"nativeSrc": "7890:175:5",
															"nodeType": "YulBlock",
															"src": "7890:175:5",
															"statements": [
																{
																	"nativeSrc": "7936:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7936:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7966:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7966:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7973:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7973:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7962:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7962:3:5"
																				},
																				"nativeSrc": "7962:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7962:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7956:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7956:5:5"
																		},
																		"nativeSrc": "7956:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7956:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7940:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7940:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8026:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "8026:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8044:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "8044:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8049:4:5",
																						"nodeType": "YulLiteral",
																						"src": "8049:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8040:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8040:3:5"
																				},
																				"nativeSrc": "8040:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8040:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7992:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7992:33:5"
																		},
																		"nativeSrc": "7992:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7992:63:5"
																	},
																	"nativeSrc": "7992:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7992:63:5"
																}
															]
														},
														{
															"nativeSrc": "8075:177:5",
															"nodeType": "YulBlock",
															"src": "8075:177:5",
															"statements": [
																{
																	"nativeSrc": "8123:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8123:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8153:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8153:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8160:4:5",
																						"nodeType": "YulLiteral",
																						"src": "8160:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8149:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8149:3:5"
																				},
																				"nativeSrc": "8149:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8149:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8143:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8143:5:5"
																		},
																		"nativeSrc": "8143:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8143:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8127:12:5",
																			"nodeType": "YulTypedName",
																			"src": "8127:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8213:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "8213:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8231:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "8231:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8236:4:5",
																						"nodeType": "YulLiteral",
																						"src": "8236:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8227:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8227:3:5"
																				},
																				"nativeSrc": "8227:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8227:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "8179:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "8179:33:5"
																		},
																		"nativeSrc": "8179:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8179:63:5"
																	},
																	"nativeSrc": "8179:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "8179:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack",
												"nativeSrc": "6634:1625:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6767:5:5",
														"nodeType": "YulTypedName",
														"src": "6767:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6774:3:5",
														"nodeType": "YulTypedName",
														"src": "6774:3:5",
														"type": ""
													}
												],
												"src": "6634:1625:5"
											},
											{
												"body": {
													"nativeSrc": "8443:205:5",
													"nodeType": "YulBlock",
													"src": "8443:205:5",
													"statements": [
														{
															"nativeSrc": "8453:27:5",
															"nodeType": "YulAssignment",
															"src": "8453:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8465:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8465:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8476:3:5",
																		"nodeType": "YulLiteral",
																		"src": "8476:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8461:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8461:3:5"
																},
																"nativeSrc": "8461:19:5",
																"nodeType": "YulFunctionCall",
																"src": "8461:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8453:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8453:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8614:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8614:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8627:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8627:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8638:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8638:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8623:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8623:3:5"
																		},
																		"nativeSrc": "8623:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8623:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack",
																	"nativeSrc": "8490:123:5",
																	"nodeType": "YulIdentifier",
																	"src": "8490:123:5"
																},
																"nativeSrc": "8490:151:5",
																"nodeType": "YulFunctionCall",
																"src": "8490:151:5"
															},
															"nativeSrc": "8490:151:5",
															"nodeType": "YulExpressionStatement",
															"src": "8490:151:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed",
												"nativeSrc": "8265:383:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8415:9:5",
														"nodeType": "YulTypedName",
														"src": "8415:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8427:6:5",
														"nodeType": "YulTypedName",
														"src": "8427:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8438:4:5",
														"nodeType": "YulTypedName",
														"src": "8438:4:5",
														"type": ""
													}
												],
												"src": "8265:383:5"
											},
											{
												"body": {
													"nativeSrc": "8682:152:5",
													"nodeType": "YulBlock",
													"src": "8682:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8699:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8699:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8702:77:5",
																		"nodeType": "YulLiteral",
																		"src": "8702:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8692:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8692:6:5"
																},
																"nativeSrc": "8692:88:5",
																"nodeType": "YulFunctionCall",
																"src": "8692:88:5"
															},
															"nativeSrc": "8692:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "8692:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8796:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8796:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8799:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8799:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8789:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8789:6:5"
																},
																"nativeSrc": "8789:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8789:15:5"
															},
															"nativeSrc": "8789:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8789:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8820:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8820:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8823:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8823:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8813:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8813:6:5"
																},
																"nativeSrc": "8813:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8813:15:5"
															},
															"nativeSrc": "8813:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8813:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8654:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8654:180:5"
											},
											{
												"body": {
													"nativeSrc": "8885:149:5",
													"nodeType": "YulBlock",
													"src": "8885:149:5",
													"statements": [
														{
															"nativeSrc": "8895:25:5",
															"nodeType": "YulAssignment",
															"src": "8895:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8918:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8918:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8900:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8900:17:5"
																},
																"nativeSrc": "8900:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8900:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8895:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:1:5"
																}
															]
														},
														{
															"nativeSrc": "8929:25:5",
															"nodeType": "YulAssignment",
															"src": "8929:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8952:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8952:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8934:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8934:17:5"
																},
																"nativeSrc": "8934:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8934:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8929:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8929:1:5"
																}
															]
														},
														{
															"nativeSrc": "8963:17:5",
															"nodeType": "YulAssignment",
															"src": "8963:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8975:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8975:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8978:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8978:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8971:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8971:3:5"
																},
																"nativeSrc": "8971:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8971:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8963:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8963:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9005:22:5",
																"nodeType": "YulBlock",
																"src": "9005:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9007:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9007:16:5"
																			},
																			"nativeSrc": "9007:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9007:18:5"
																		},
																		"nativeSrc": "9007:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9007:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8996:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8996:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9002:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9002:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8993:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "8993:2:5"
																},
																"nativeSrc": "8993:11:5",
																"nodeType": "YulFunctionCall",
																"src": "8993:11:5"
															},
															"nativeSrc": "8990:37:5",
															"nodeType": "YulIf",
															"src": "8990:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8840:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8871:1:5",
														"nodeType": "YulTypedName",
														"src": "8871:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8874:1:5",
														"nodeType": "YulTypedName",
														"src": "8874:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8880:4:5",
														"nodeType": "YulTypedName",
														"src": "8880:4:5",
														"type": ""
													}
												],
												"src": "8840:194:5"
											},
											{
												"body": {
													"nativeSrc": "9105:53:5",
													"nodeType": "YulBlock",
													"src": "9105:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9122:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9122:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9145:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9145:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9127:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "9127:17:5"
																		},
																		"nativeSrc": "9127:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9127:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9115:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9115:6:5"
																},
																"nativeSrc": "9115:37:5",
																"nodeType": "YulFunctionCall",
																"src": "9115:37:5"
															},
															"nativeSrc": "9115:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "9115:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9040:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9093:5:5",
														"nodeType": "YulTypedName",
														"src": "9093:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9100:3:5",
														"nodeType": "YulTypedName",
														"src": "9100:3:5",
														"type": ""
													}
												],
												"src": "9040:118:5"
											},
											{
												"body": {
													"nativeSrc": "9318:288:5",
													"nodeType": "YulBlock",
													"src": "9318:288:5",
													"statements": [
														{
															"nativeSrc": "9328:26:5",
															"nodeType": "YulAssignment",
															"src": "9328:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9340:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9340:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9351:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9351:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9336:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9336:3:5"
																},
																"nativeSrc": "9336:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9336:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9328:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9328:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9408:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9408:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9421:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9421:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9432:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9432:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9417:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9417:3:5"
																		},
																		"nativeSrc": "9417:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9417:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9364:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9364:43:5"
																},
																"nativeSrc": "9364:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9364:71:5"
															},
															"nativeSrc": "9364:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9364:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9489:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9489:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9502:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9502:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9513:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9513:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9498:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:5"
																		},
																		"nativeSrc": "9498:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9498:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9445:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9445:43:5"
																},
																"nativeSrc": "9445:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9445:72:5"
															},
															"nativeSrc": "9445:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9445:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9571:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9571:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9584:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9584:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9595:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9595:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9580:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9580:3:5"
																		},
																		"nativeSrc": "9580:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9580:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9527:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9527:43:5"
																},
																"nativeSrc": "9527:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9527:72:5"
															},
															"nativeSrc": "9527:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9527:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9164:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9274:9:5",
														"nodeType": "YulTypedName",
														"src": "9274:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9286:6:5",
														"nodeType": "YulTypedName",
														"src": "9286:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9294:6:5",
														"nodeType": "YulTypedName",
														"src": "9294:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9302:6:5",
														"nodeType": "YulTypedName",
														"src": "9302:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9313:4:5",
														"nodeType": "YulTypedName",
														"src": "9313:4:5",
														"type": ""
													}
												],
												"src": "9164:442:5"
											},
											{
												"body": {
													"nativeSrc": "9670:40:5",
													"nodeType": "YulBlock",
													"src": "9670:40:5",
													"statements": [
														{
															"nativeSrc": "9681:22:5",
															"nodeType": "YulAssignment",
															"src": "9681:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9697:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9697:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9691:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9691:5:5"
																},
																"nativeSrc": "9691:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9691:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9681:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9681:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "9612:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9653:5:5",
														"nodeType": "YulTypedName",
														"src": "9653:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9663:6:5",
														"nodeType": "YulTypedName",
														"src": "9663:6:5",
														"type": ""
													}
												],
												"src": "9612:98:5"
											},
											{
												"body": {
													"nativeSrc": "9829:34:5",
													"nodeType": "YulBlock",
													"src": "9829:34:5",
													"statements": [
														{
															"nativeSrc": "9839:18:5",
															"nodeType": "YulAssignment",
															"src": "9839:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "9854:3:5",
																"nodeType": "YulIdentifier",
																"src": "9854:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9839:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9839:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9716:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9801:3:5",
														"nodeType": "YulTypedName",
														"src": "9801:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9806:6:5",
														"nodeType": "YulTypedName",
														"src": "9806:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9817:11:5",
														"nodeType": "YulTypedName",
														"src": "9817:11:5",
														"type": ""
													}
												],
												"src": "9716:147:5"
											},
											{
												"body": {
													"nativeSrc": "9931:77:5",
													"nodeType": "YulBlock",
													"src": "9931:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9948:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9948:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9953:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9953:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9958:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9958:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "9942:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9942:5:5"
																},
																"nativeSrc": "9942:23:5",
																"nodeType": "YulFunctionCall",
																"src": "9942:23:5"
															},
															"nativeSrc": "9942:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "9942:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9985:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "9985:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9990:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9990:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9981:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9981:3:5"
																		},
																		"nativeSrc": "9981:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9981:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9999:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9999:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9974:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9974:6:5"
																},
																"nativeSrc": "9974:27:5",
																"nodeType": "YulFunctionCall",
																"src": "9974:27:5"
															},
															"nativeSrc": "9974:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "9974:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "9869:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9913:3:5",
														"nodeType": "YulTypedName",
														"src": "9913:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9918:3:5",
														"nodeType": "YulTypedName",
														"src": "9918:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9923:6:5",
														"nodeType": "YulTypedName",
														"src": "9923:6:5",
														"type": ""
													}
												],
												"src": "9869:139:5"
											},
											{
												"body": {
													"nativeSrc": "10122:278:5",
													"nodeType": "YulBlock",
													"src": "10122:278:5",
													"statements": [
														{
															"nativeSrc": "10132:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10132:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10178:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "10178:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "10146:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "10146:31:5"
																},
																"nativeSrc": "10146:38:5",
																"nodeType": "YulFunctionCall",
																"src": "10146:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10136:6:5",
																	"nodeType": "YulTypedName",
																	"src": "10136:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10193:95:5",
															"nodeType": "YulAssignment",
															"src": "10193:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10276:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10276:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10281:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10281:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10200:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "10200:75:5"
																},
																"nativeSrc": "10200:88:5",
																"nodeType": "YulFunctionCall",
																"src": "10200:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10193:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10193:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10336:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "10336:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10343:4:5",
																				"nodeType": "YulLiteral",
																				"src": "10343:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10332:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10332:3:5"
																		},
																		"nativeSrc": "10332:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10332:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10350:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10350:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10355:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10355:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10297:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "10297:34:5"
																},
																"nativeSrc": "10297:65:5",
																"nodeType": "YulFunctionCall",
																"src": "10297:65:5"
															},
															"nativeSrc": "10297:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "10297:65:5"
														},
														{
															"nativeSrc": "10371:23:5",
															"nodeType": "YulAssignment",
															"src": "10371:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10382:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10382:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10387:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10387:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10378:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10378:3:5"
																},
																"nativeSrc": "10378:16:5",
																"nodeType": "YulFunctionCall",
																"src": "10378:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10371:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10371:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10014:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10103:5:5",
														"nodeType": "YulTypedName",
														"src": "10103:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10110:3:5",
														"nodeType": "YulTypedName",
														"src": "10110:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10118:3:5",
														"nodeType": "YulTypedName",
														"src": "10118:3:5",
														"type": ""
													}
												],
												"src": "10014:386:5"
											},
											{
												"body": {
													"nativeSrc": "10540:137:5",
													"nodeType": "YulBlock",
													"src": "10540:137:5",
													"statements": [
														{
															"nativeSrc": "10551:100:5",
															"nodeType": "YulAssignment",
															"src": "10551:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10638:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10638:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10647:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10647:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10558:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "10558:79:5"
																},
																"nativeSrc": "10558:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10558:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10551:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10551:3:5"
																}
															]
														},
														{
															"nativeSrc": "10661:10:5",
															"nodeType": "YulAssignment",
															"src": "10661:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "10668:3:5",
																"nodeType": "YulIdentifier",
																"src": "10668:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10661:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10661:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10406:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10519:3:5",
														"nodeType": "YulTypedName",
														"src": "10519:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10525:6:5",
														"nodeType": "YulTypedName",
														"src": "10525:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10536:3:5",
														"nodeType": "YulTypedName",
														"src": "10536:3:5",
														"type": ""
													}
												],
												"src": "10406:271:5"
											},
											{
												"body": {
													"nativeSrc": "10725:48:5",
													"nodeType": "YulBlock",
													"src": "10725:48:5",
													"statements": [
														{
															"nativeSrc": "10735:32:5",
															"nodeType": "YulAssignment",
															"src": "10735:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10760:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "10760:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "10753:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "10753:6:5"
																		},
																		"nativeSrc": "10753:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10753:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10746:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10746:6:5"
																},
																"nativeSrc": "10746:21:5",
																"nodeType": "YulFunctionCall",
																"src": "10746:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10735:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "10735:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "10683:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10707:5:5",
														"nodeType": "YulTypedName",
														"src": "10707:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10717:7:5",
														"nodeType": "YulTypedName",
														"src": "10717:7:5",
														"type": ""
													}
												],
												"src": "10683:90:5"
											},
											{
												"body": {
													"nativeSrc": "10819:76:5",
													"nodeType": "YulBlock",
													"src": "10819:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "10873:16:5",
																"nodeType": "YulBlock",
																"src": "10873:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10882:1:5",
																					"nodeType": "YulLiteral",
																					"src": "10882:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10885:1:5",
																					"nodeType": "YulLiteral",
																					"src": "10885:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10875:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10875:6:5"
																			},
																			"nativeSrc": "10875:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "10875:12:5"
																		},
																		"nativeSrc": "10875:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "10875:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10842:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "10842:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10864:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10864:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10849:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "10849:14:5"
																				},
																				"nativeSrc": "10849:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10849:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10839:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "10839:2:5"
																		},
																		"nativeSrc": "10839:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10839:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10832:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10832:6:5"
																},
																"nativeSrc": "10832:40:5",
																"nodeType": "YulFunctionCall",
																"src": "10832:40:5"
															},
															"nativeSrc": "10829:60:5",
															"nodeType": "YulIf",
															"src": "10829:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10779:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10812:5:5",
														"nodeType": "YulTypedName",
														"src": "10812:5:5",
														"type": ""
													}
												],
												"src": "10779:116:5"
											},
											{
												"body": {
													"nativeSrc": "10961:77:5",
													"nodeType": "YulBlock",
													"src": "10961:77:5",
													"statements": [
														{
															"nativeSrc": "10971:22:5",
															"nodeType": "YulAssignment",
															"src": "10971:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10986:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10986:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10980:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "10980:5:5"
																},
																"nativeSrc": "10980:13:5",
																"nodeType": "YulFunctionCall",
																"src": "10980:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10971:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "10971:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11026:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "11026:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11002:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "11002:23:5"
																},
																"nativeSrc": "11002:30:5",
																"nodeType": "YulFunctionCall",
																"src": "11002:30:5"
															},
															"nativeSrc": "11002:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "11002:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "10901:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10939:6:5",
														"nodeType": "YulTypedName",
														"src": "10939:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10947:3:5",
														"nodeType": "YulTypedName",
														"src": "10947:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10955:5:5",
														"nodeType": "YulTypedName",
														"src": "10955:5:5",
														"type": ""
													}
												],
												"src": "10901:137:5"
											},
											{
												"body": {
													"nativeSrc": "11118:271:5",
													"nodeType": "YulBlock",
													"src": "11118:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "11164:83:5",
																"nodeType": "YulBlock",
																"src": "11164:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11166:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "11166:77:5"
																			},
																			"nativeSrc": "11166:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "11166:79:5"
																		},
																		"nativeSrc": "11166:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "11166:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11139:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "11139:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11148:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11148:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11135:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11135:3:5"
																		},
																		"nativeSrc": "11135:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11135:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11160:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11160:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11131:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11131:3:5"
																},
																"nativeSrc": "11131:32:5",
																"nodeType": "YulFunctionCall",
																"src": "11131:32:5"
															},
															"nativeSrc": "11128:119:5",
															"nodeType": "YulIf",
															"src": "11128:119:5"
														},
														{
															"nativeSrc": "11257:125:5",
															"nodeType": "YulBlock",
															"src": "11257:125:5",
															"statements": [
																{
																	"nativeSrc": "11272:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11272:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11286:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11286:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11276:6:5",
																			"nodeType": "YulTypedName",
																			"src": "11276:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11301:71:5",
																	"nodeType": "YulAssignment",
																	"src": "11301:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11344:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "11344:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11355:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "11355:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11340:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "11340:3:5"
																				},
																				"nativeSrc": "11340:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "11340:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11364:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "11364:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11311:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "11311:28:5"
																		},
																		"nativeSrc": "11311:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11311:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11301:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "11301:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11044:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11088:9:5",
														"nodeType": "YulTypedName",
														"src": "11088:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11099:7:5",
														"nodeType": "YulTypedName",
														"src": "11099:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11111:6:5",
														"nodeType": "YulTypedName",
														"src": "11111:6:5",
														"type": ""
													}
												],
												"src": "11044:345:5"
											},
											{
												"body": {
													"nativeSrc": "11491:73:5",
													"nodeType": "YulBlock",
													"src": "11491:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11508:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11508:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11513:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11513:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11501:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11501:6:5"
																},
																"nativeSrc": "11501:19:5",
																"nodeType": "YulFunctionCall",
																"src": "11501:19:5"
															},
															"nativeSrc": "11501:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "11501:19:5"
														},
														{
															"nativeSrc": "11529:29:5",
															"nodeType": "YulAssignment",
															"src": "11529:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11548:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11548:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11553:4:5",
																		"nodeType": "YulLiteral",
																		"src": "11553:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11544:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11544:3:5"
																},
																"nativeSrc": "11544:14:5",
																"nodeType": "YulFunctionCall",
																"src": "11544:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11529:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "11529:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11395:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11463:3:5",
														"nodeType": "YulTypedName",
														"src": "11463:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11468:6:5",
														"nodeType": "YulTypedName",
														"src": "11468:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11479:11:5",
														"nodeType": "YulTypedName",
														"src": "11479:11:5",
														"type": ""
													}
												],
												"src": "11395:169:5"
											},
											{
												"body": {
													"nativeSrc": "11676:47:5",
													"nodeType": "YulBlock",
													"src": "11676:47:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11698:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11698:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11706:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11706:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11694:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11694:3:5"
																		},
																		"nativeSrc": "11694:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11694:14:5"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nativeSrc": "11710:5:5",
																		"nodeType": "YulLiteral",
																		"src": "11710:5:5",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11687:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11687:6:5"
																},
																"nativeSrc": "11687:29:5",
																"nodeType": "YulFunctionCall",
																"src": "11687:29:5"
															},
															"nativeSrc": "11687:29:5",
															"nodeType": "YulExpressionStatement",
															"src": "11687:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
												"nativeSrc": "11570:153:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11668:6:5",
														"nodeType": "YulTypedName",
														"src": "11668:6:5",
														"type": ""
													}
												],
												"src": "11570:153:5"
											},
											{
												"body": {
													"nativeSrc": "11875:219:5",
													"nodeType": "YulBlock",
													"src": "11875:219:5",
													"statements": [
														{
															"nativeSrc": "11885:73:5",
															"nodeType": "YulAssignment",
															"src": "11885:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11951:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11951:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11956:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11956:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11892:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "11892:58:5"
																},
																"nativeSrc": "11892:66:5",
																"nodeType": "YulFunctionCall",
																"src": "11892:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11885:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11885:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12056:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12056:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																	"nativeSrc": "11967:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "11967:88:5"
																},
																"nativeSrc": "11967:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11967:93:5"
															},
															"nativeSrc": "11967:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "11967:93:5"
														},
														{
															"nativeSrc": "12069:19:5",
															"nodeType": "YulAssignment",
															"src": "12069:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12080:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12080:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12085:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12085:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12076:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12076:3:5"
																},
																"nativeSrc": "12076:12:5",
																"nodeType": "YulFunctionCall",
																"src": "12076:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12069:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12069:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11729:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11863:3:5",
														"nodeType": "YulTypedName",
														"src": "11863:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11871:3:5",
														"nodeType": "YulTypedName",
														"src": "11871:3:5",
														"type": ""
													}
												],
												"src": "11729:365:5"
											},
											{
												"body": {
													"nativeSrc": "12271:248:5",
													"nodeType": "YulBlock",
													"src": "12271:248:5",
													"statements": [
														{
															"nativeSrc": "12281:26:5",
															"nodeType": "YulAssignment",
															"src": "12281:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12293:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "12293:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12304:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12304:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12289:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12289:3:5"
																},
																"nativeSrc": "12289:18:5",
																"nodeType": "YulFunctionCall",
																"src": "12289:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12281:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12281:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12328:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12328:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12339:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12339:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12324:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12324:3:5"
																		},
																		"nativeSrc": "12324:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12324:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12347:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "12347:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12353:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12353:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12343:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12343:3:5"
																		},
																		"nativeSrc": "12343:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12343:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12317:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12317:6:5"
																},
																"nativeSrc": "12317:47:5",
																"nodeType": "YulFunctionCall",
																"src": "12317:47:5"
															},
															"nativeSrc": "12317:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "12317:47:5"
														},
														{
															"nativeSrc": "12373:139:5",
															"nodeType": "YulAssignment",
															"src": "12373:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12507:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "12507:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12381:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "12381:124:5"
																},
																"nativeSrc": "12381:131:5",
																"nodeType": "YulFunctionCall",
																"src": "12381:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12373:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12373:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12100:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12251:9:5",
														"nodeType": "YulTypedName",
														"src": "12251:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12266:4:5",
														"nodeType": "YulTypedName",
														"src": "12266:4:5",
														"type": ""
													}
												],
												"src": "12100:419:5"
											},
											{
												"body": {
													"nativeSrc": "12651:206:5",
													"nodeType": "YulBlock",
													"src": "12651:206:5",
													"statements": [
														{
															"nativeSrc": "12661:26:5",
															"nodeType": "YulAssignment",
															"src": "12661:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12673:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "12673:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12684:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12684:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12669:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12669:3:5"
																},
																"nativeSrc": "12669:18:5",
																"nodeType": "YulFunctionCall",
																"src": "12669:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12661:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12661:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12741:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12741:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12754:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12754:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12765:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12765:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12750:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12750:3:5"
																		},
																		"nativeSrc": "12750:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12750:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12697:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12697:43:5"
																},
																"nativeSrc": "12697:71:5",
																"nodeType": "YulFunctionCall",
																"src": "12697:71:5"
															},
															"nativeSrc": "12697:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "12697:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12822:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12822:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12835:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12835:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12846:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12846:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12831:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12831:3:5"
																		},
																		"nativeSrc": "12831:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12831:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12778:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12778:43:5"
																},
																"nativeSrc": "12778:72:5",
																"nodeType": "YulFunctionCall",
																"src": "12778:72:5"
															},
															"nativeSrc": "12778:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "12778:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12525:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12615:9:5",
														"nodeType": "YulTypedName",
														"src": "12615:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12627:6:5",
														"nodeType": "YulTypedName",
														"src": "12627:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12635:6:5",
														"nodeType": "YulTypedName",
														"src": "12635:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12646:4:5",
														"nodeType": "YulTypedName",
														"src": "12646:4:5",
														"type": ""
													}
												],
												"src": "12525:332:5"
											},
											{
												"body": {
													"nativeSrc": "12969:46:5",
													"nodeType": "YulBlock",
													"src": "12969:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12991:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12991:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12999:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12999:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12987:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12987:3:5"
																		},
																		"nativeSrc": "12987:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12987:14:5"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nativeSrc": "13003:4:5",
																		"nodeType": "YulLiteral",
																		"src": "13003:4:5",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12980:6:5"
																},
																"nativeSrc": "12980:28:5",
																"nodeType": "YulFunctionCall",
																"src": "12980:28:5"
															},
															"nativeSrc": "12980:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "12980:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nativeSrc": "12863:152:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12961:6:5",
														"nodeType": "YulTypedName",
														"src": "12961:6:5",
														"type": ""
													}
												],
												"src": "12863:152:5"
											},
											{
												"body": {
													"nativeSrc": "13167:219:5",
													"nodeType": "YulBlock",
													"src": "13167:219:5",
													"statements": [
														{
															"nativeSrc": "13177:73:5",
															"nodeType": "YulAssignment",
															"src": "13177:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13243:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13243:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13248:1:5",
																		"nodeType": "YulLiteral",
																		"src": "13248:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13184:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "13184:58:5"
																},
																"nativeSrc": "13184:66:5",
																"nodeType": "YulFunctionCall",
																"src": "13184:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13177:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13177:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13348:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13348:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nativeSrc": "13259:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "13259:88:5"
																},
																"nativeSrc": "13259:93:5",
																"nodeType": "YulFunctionCall",
																"src": "13259:93:5"
															},
															"nativeSrc": "13259:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "13259:93:5"
														},
														{
															"nativeSrc": "13361:19:5",
															"nodeType": "YulAssignment",
															"src": "13361:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13372:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13372:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13377:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13377:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13368:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13368:3:5"
																},
																"nativeSrc": "13368:12:5",
																"nodeType": "YulFunctionCall",
																"src": "13368:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13361:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13361:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13021:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13155:3:5",
														"nodeType": "YulTypedName",
														"src": "13155:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13163:3:5",
														"nodeType": "YulTypedName",
														"src": "13163:3:5",
														"type": ""
													}
												],
												"src": "13021:365:5"
											},
											{
												"body": {
													"nativeSrc": "13563:248:5",
													"nodeType": "YulBlock",
													"src": "13563:248:5",
													"statements": [
														{
															"nativeSrc": "13573:26:5",
															"nodeType": "YulAssignment",
															"src": "13573:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13585:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "13585:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13596:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13596:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13581:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13581:3:5"
																},
																"nativeSrc": "13581:18:5",
																"nodeType": "YulFunctionCall",
																"src": "13581:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13573:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13573:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13620:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13620:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13631:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13631:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13616:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13616:3:5"
																		},
																		"nativeSrc": "13616:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13616:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13639:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "13639:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13645:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13645:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13635:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13635:3:5"
																		},
																		"nativeSrc": "13635:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13635:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13609:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13609:6:5"
																},
																"nativeSrc": "13609:47:5",
																"nodeType": "YulFunctionCall",
																"src": "13609:47:5"
															},
															"nativeSrc": "13609:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "13609:47:5"
														},
														{
															"nativeSrc": "13665:139:5",
															"nodeType": "YulAssignment",
															"src": "13665:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13799:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "13799:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13673:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "13673:124:5"
																},
																"nativeSrc": "13673:131:5",
																"nodeType": "YulFunctionCall",
																"src": "13673:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13665:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13665:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13392:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13543:9:5",
														"nodeType": "YulTypedName",
														"src": "13543:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13558:4:5",
														"nodeType": "YulTypedName",
														"src": "13558:4:5",
														"type": ""
													}
												],
												"src": "13392:419:5"
											},
											{
												"body": {
													"nativeSrc": "13923:46:5",
													"nodeType": "YulBlock",
													"src": "13923:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13945:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "13945:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13953:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13953:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13941:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13941:3:5"
																		},
																		"nativeSrc": "13941:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13941:14:5"
																	},
																	{
																		"hexValue": "5354",
																		"kind": "string",
																		"nativeSrc": "13957:4:5",
																		"nodeType": "YulLiteral",
																		"src": "13957:4:5",
																		"type": "",
																		"value": "ST"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13934:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13934:6:5"
																},
																"nativeSrc": "13934:28:5",
																"nodeType": "YulFunctionCall",
																"src": "13934:28:5"
															},
															"nativeSrc": "13934:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "13934:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
												"nativeSrc": "13817:152:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13915:6:5",
														"nodeType": "YulTypedName",
														"src": "13915:6:5",
														"type": ""
													}
												],
												"src": "13817:152:5"
											},
											{
												"body": {
													"nativeSrc": "14121:219:5",
													"nodeType": "YulBlock",
													"src": "14121:219:5",
													"statements": [
														{
															"nativeSrc": "14131:73:5",
															"nodeType": "YulAssignment",
															"src": "14131:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14197:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14197:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14202:1:5",
																		"nodeType": "YulLiteral",
																		"src": "14202:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14138:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "14138:58:5"
																},
																"nativeSrc": "14138:66:5",
																"nodeType": "YulFunctionCall",
																"src": "14138:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14131:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14131:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14302:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14302:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																	"nativeSrc": "14213:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "14213:88:5"
																},
																"nativeSrc": "14213:93:5",
																"nodeType": "YulFunctionCall",
																"src": "14213:93:5"
															},
															"nativeSrc": "14213:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "14213:93:5"
														},
														{
															"nativeSrc": "14315:19:5",
															"nodeType": "YulAssignment",
															"src": "14315:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14326:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14326:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14331:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14331:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14322:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14322:3:5"
																},
																"nativeSrc": "14322:12:5",
																"nodeType": "YulFunctionCall",
																"src": "14322:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14315:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14315:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13975:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14109:3:5",
														"nodeType": "YulTypedName",
														"src": "14109:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14117:3:5",
														"nodeType": "YulTypedName",
														"src": "14117:3:5",
														"type": ""
													}
												],
												"src": "13975:365:5"
											},
											{
												"body": {
													"nativeSrc": "14517:248:5",
													"nodeType": "YulBlock",
													"src": "14517:248:5",
													"statements": [
														{
															"nativeSrc": "14527:26:5",
															"nodeType": "YulAssignment",
															"src": "14527:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14539:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "14539:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14550:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14550:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14535:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14535:3:5"
																},
																"nativeSrc": "14535:18:5",
																"nodeType": "YulFunctionCall",
																"src": "14535:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14527:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14527:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14574:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "14574:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14585:1:5",
																				"nodeType": "YulLiteral",
																				"src": "14585:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14570:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14570:3:5"
																		},
																		"nativeSrc": "14570:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14570:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14593:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "14593:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14599:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "14599:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14589:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14589:3:5"
																		},
																		"nativeSrc": "14589:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14589:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14563:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14563:6:5"
																},
																"nativeSrc": "14563:47:5",
																"nodeType": "YulFunctionCall",
																"src": "14563:47:5"
															},
															"nativeSrc": "14563:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "14563:47:5"
														},
														{
															"nativeSrc": "14619:139:5",
															"nodeType": "YulAssignment",
															"src": "14619:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14753:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "14753:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14627:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "14627:124:5"
																},
																"nativeSrc": "14627:131:5",
																"nodeType": "YulFunctionCall",
																"src": "14627:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14619:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14619:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14346:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14497:9:5",
														"nodeType": "YulTypedName",
														"src": "14497:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14512:4:5",
														"nodeType": "YulTypedName",
														"src": "14512:4:5",
														"type": ""
													}
												],
												"src": "14346:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$191_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$191_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // struct ISwapRouter.ExactOutputSingleParams -> struct ISwapRouter.ExactOutputSingleParams\n    function abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"STF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"ST\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"375": [
									{
										"length": 32,
										"start": 299
									},
									{
										"length": 32,
										"start": 534
									},
									{
										"length": 32,
										"start": 695
									},
									{
										"length": 32,
										"start": 788
									},
									{
										"length": 32,
										"start": 1023
									},
									{
										"length": 32,
										"start": 1210
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063089fe6aa1461004e57806373bd43ad1461006c578063c31c9c071461009c578063c4b69a18146100ba575b5f80fd5b6100566100ea565b604051610063919061091e565b60405180910390f35b6100866004803603810190610081919061096e565b6100f0565b60405161009391906109a8565b60405180910390f35b6100a46102b5565b6040516100b19190610a3b565b60405180910390f35b6100d460048036038101906100cf9190610a54565b6102d9565b6040516100e191906109a8565b60405180910390f35b610bb881565b5f610111731c7d4b196cb0c7b01d743fbc6116a902379c7238333085610511565b610150731c7d4b196cb0c7b01d743fbc6116a902379c72387f000000000000000000000000000000000000000000000000000000000000000084610663565b5f604051806101000160405280731c7d4b196cb0c7b01d743fbc6116a902379c723873ffffffffffffffffffffffffffffffffffffffff16815260200173fff9976782d46cc05630d1f6ebab18b2324d6b1473ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161026d9190610b7f565b6020604051808303815f875af1158015610289573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ad9190610bad565b915050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f6102fa731c7d4b196cb0c7b01d743fbc6116a902379c7238333085610511565b610339731c7d4b196cb0c7b01d743fbc6116a902379c72387f000000000000000000000000000000000000000000000000000000000000000084610663565b5f604051806101000160405280731c7d4b196cb0c7b01d743fbc6116a902379c723873ffffffffffffffffffffffffffffffffffffffff16815260200173fff9976782d46cc05630d1f6ebab18b2324d6b1473ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018581526020018481526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016104569190610c78565b6020604051808303815f875af1158015610472573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104969190610bad565b91508282101561050a576104df731c7d4b196cb0c7b01d743fbc6116a902379c72387f00000000000000000000000000000000000000000000000000000000000000005f610663565b610509731c7d4b196cb0c7b01d743fbc6116a902379c72383384866105049190610cbf565b6107b2565b5b5092915050565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161054793929190610d01565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105b19190610d88565b5f604051808303815f865af19150503d805f81146105ea576040519150601f19603f3d011682016040523d82523d5f602084013e6105ef565b606091505b509150915081801561061c57505f8151148061061b57508080602001905181019061061a9190610dd3565b5b5b61065b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065290610e58565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610697929190610e76565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107019190610d88565b5f604051808303815f865af19150503d805f811461073a576040519150601f19603f3d011682016040523d82523d5f602084013e61073f565b606091505b509150915081801561076c57505f8151148061076b57508080602001905181019061076a9190610dd3565b5b5b6107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a290610ee7565b60405180910390fd5b5050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b85856040516024016107e6929190610e76565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108509190610d88565b5f604051808303815f865af19150503d805f8114610889576040519150601f19603f3d011682016040523d82523d5f602084013e61088e565b606091505b50915091508180156108bb57505f815114806108ba5750808060200190518101906108b99190610dd3565b5b5b6108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f190610f4f565b60405180910390fd5b5050505050565b5f62ffffff82169050919050565b61091881610901565b82525050565b5f6020820190506109315f83018461090f565b92915050565b5f80fd5b5f819050919050565b61094d8161093b565b8114610957575f80fd5b50565b5f8135905061096881610944565b92915050565b5f6020828403121561098357610982610937565b5b5f6109908482850161095a565b91505092915050565b6109a28161093b565b82525050565b5f6020820190506109bb5f830184610999565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a036109fe6109f9846109c1565b6109e0565b6109c1565b9050919050565b5f610a14826109e9565b9050919050565b5f610a2582610a0a565b9050919050565b610a3581610a1b565b82525050565b5f602082019050610a4e5f830184610a2c565b92915050565b5f8060408385031215610a6a57610a69610937565b5b5f610a778582860161095a565b9250506020610a888582860161095a565b9150509250929050565b5f610a9c826109c1565b9050919050565b610aac81610a92565b82525050565b610abb81610901565b82525050565b610aca8161093b565b82525050565b610ad9816109c1565b82525050565b61010082015f820151610af45f850182610aa3565b506020820151610b076020850182610aa3565b506040820151610b1a6040850182610ab2565b506060820151610b2d6060850182610aa3565b506080820151610b406080850182610ac1565b5060a0820151610b5360a0850182610ac1565b5060c0820151610b6660c0850182610ac1565b5060e0820151610b7960e0850182610ad0565b50505050565b5f61010082019050610b935f830184610adf565b92915050565b5f81519050610ba781610944565b92915050565b5f60208284031215610bc257610bc1610937565b5b5f610bcf84828501610b99565b91505092915050565b61010082015f820151610bed5f850182610aa3565b506020820151610c006020850182610aa3565b506040820151610c136040850182610ab2565b506060820151610c266060850182610aa3565b506080820151610c396080850182610ac1565b5060a0820151610c4c60a0850182610ac1565b5060c0820151610c5f60c0850182610ac1565b5060e0820151610c7260e0850182610ad0565b50505050565b5f61010082019050610c8c5f830184610bd8565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610cc98261093b565b9150610cd48361093b565b9250828203905081811115610cec57610ceb610c92565b5b92915050565b610cfb81610a92565b82525050565b5f606082019050610d145f830186610cf2565b610d216020830185610cf2565b610d2e6040830184610999565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610d6282610d36565b610d6c8185610d40565b9350610d7c818560208601610d4a565b80840191505092915050565b5f610d938284610d58565b915081905092915050565b5f8115159050919050565b610db281610d9e565b8114610dbc575f80fd5b50565b5f81519050610dcd81610da9565b92915050565b5f60208284031215610de857610de7610937565b5b5f610df584828501610dbf565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f610e42600383610dfe565b9150610e4d82610e0e565b602082019050919050565b5f6020820190508181035f830152610e6f81610e36565b9050919050565b5f604082019050610e895f830185610cf2565b610e966020830184610999565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f610ed1600283610dfe565b9150610edc82610e9d565b602082019050919050565b5f6020820190508181035f830152610efe81610ec5565b9050919050565b7f53540000000000000000000000000000000000000000000000000000000000005f82015250565b5f610f39600283610dfe565b9150610f4482610f05565b602082019050919050565b5f6020820190508181035f830152610f6681610f2d565b905091905056fea264697066735822122064807b284766468a009dfbca4d25bc6a2a3d4292c8ba3e29cee53279dc8c69dd64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0xBA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x96E JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCF SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x111 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 CALLER ADDRESS DUP6 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x150 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH32 0x0 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xFFF9976782D46CC05630D1F6EBAB18B2324D6B14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x289 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x2FA PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 CALLER ADDRESS DUP6 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x339 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH32 0x0 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xFFF9976782D46CC05630D1F6EBAB18B2324D6B14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x472 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x50A JUMPI PUSH2 0x4DF PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH32 0x0 PUSH0 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x509 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 CALLER DUP5 DUP7 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0xCBF JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x547 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x61C JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x61B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x61A SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x652 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x697 SWAP3 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x701 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x73F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x76C JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x76B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP1 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7E6 SWAP3 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x850 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x88E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x8BB JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x8BA JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x918 DUP2 PUSH2 0x901 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x931 PUSH0 DUP4 ADD DUP5 PUSH2 0x90F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94D DUP2 PUSH2 0x93B JUMP JUMPDEST DUP2 EQ PUSH2 0x957 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x968 DUP2 PUSH2 0x944 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x983 JUMPI PUSH2 0x982 PUSH2 0x937 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x990 DUP5 DUP3 DUP6 ADD PUSH2 0x95A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9A2 DUP2 PUSH2 0x93B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9BB PUSH0 DUP4 ADD DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA03 PUSH2 0x9FE PUSH2 0x9F9 DUP5 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA14 DUP3 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA25 DUP3 PUSH2 0xA0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA4E PUSH0 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH2 0xA69 PUSH2 0x937 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA77 DUP6 DUP3 DUP7 ADD PUSH2 0x95A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA88 DUP6 DUP3 DUP7 ADD PUSH2 0x95A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9C DUP3 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAAC DUP2 PUSH2 0xA92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xABB DUP2 PUSH2 0x901 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xACA DUP2 PUSH2 0x93B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xAD9 DUP2 PUSH2 0x9C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xAF4 PUSH0 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xB07 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xB1A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAB2 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xB2D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xB40 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xB53 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xB66 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xB79 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xAD0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xB93 PUSH0 DUP4 ADD DUP5 PUSH2 0xADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBA7 DUP2 PUSH2 0x944 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC2 JUMPI PUSH2 0xBC1 PUSH2 0x937 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBCF DUP5 DUP3 DUP6 ADD PUSH2 0xB99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xBED PUSH0 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xC00 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xC13 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAB2 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xC26 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xAA3 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xC39 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xC4C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xC5F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xC72 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xAD0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xC8C PUSH0 DUP4 ADD DUP5 PUSH2 0xBD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCC9 DUP3 PUSH2 0x93B JUMP JUMPDEST SWAP2 POP PUSH2 0xCD4 DUP4 PUSH2 0x93B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0xC92 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCFB DUP2 PUSH2 0xA92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD14 PUSH0 DUP4 ADD DUP7 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0xD21 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0xD2E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD62 DUP3 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xD6C DUP2 DUP6 PUSH2 0xD40 JUMP JUMPDEST SWAP4 POP PUSH2 0xD7C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD4A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD93 DUP3 DUP5 PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB2 DUP2 PUSH2 0xD9E JUMP JUMPDEST DUP2 EQ PUSH2 0xDBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDCD DUP2 PUSH2 0xDA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE8 JUMPI PUSH2 0xDE7 PUSH2 0x937 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF5 DUP5 DUP3 DUP6 ADD PUSH2 0xDBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE42 PUSH1 0x3 DUP4 PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP PUSH2 0xE4D DUP3 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE6F DUP2 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE89 PUSH0 DUP4 ADD DUP6 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0xE96 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xED1 PUSH1 0x2 DUP4 PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP PUSH2 0xEDC DUP3 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEFE DUP2 PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF39 PUSH1 0x2 DUP4 PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP PUSH2 0xF44 DUP3 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF66 DUP2 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x807B284766 CHAINID DUP11 STOP SWAP14 0xFB 0xCA 0x4D 0x25 0xBC PUSH11 0x2A3D4292C8BA3E29CEE532 PUSH26 0xDC8C69DD64736F6C634300081900330000000000000000000000 ",
							"sourceMap": "201:4389:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;498:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1174:1176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;394:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2974:1613;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;498:37;531:4;498:37;:::o;1174:1176::-;1240:17;1385:74;344:42;1423:10;1443:4;1450:8;1385:31;:74::i;:::-;1514:63;344:42;1555:10;1568:8;1514:26;:63::i;:::-;1825:48;1888:336;;;;;;;;344:42;1888:336;;;;;;272:42;1888:336;;;;;;531:4;1888:336;;;;;;2045:10;1888:336;;;;;;2083:15;1888:336;;;;2126:8;1888:336;;;;2170:1;1888:336;;;;2208:1;1888:336;;;;;1825:399;;2308:10;:27;;;2336:6;2308:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2296:47;;1259:1091;1174:1176;;;:::o;394:39::-;;;:::o;2974:1613::-;3067:16;3161:81;344:42;3199:10;3219:4;3226:15;3161:31;:81::i;:::-;3468:70;344:42;3509:10;3522:15;3468:26;:70::i;:::-;3549:49;3613:352;;;;;;;;344:42;3613:352;;;;;;272:42;3613:352;;;;;;531:4;3613:352;;;;;;3771:10;3613:352;;;;;;3809:15;3613:352;;;;3853:9;3613:352;;;;3897:15;3613:352;;;;3949:1;3613:352;;;;;3549:416;;4089:10;:28;;;4118:6;4089:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4078:47;;4396:15;4385:8;:26;4381:200;;;4427:56;344:42;4468:10;4481:1;4427:26;:56::i;:::-;4497:73;344:42;4531:10;4561:8;4543:15;:26;;;;:::i;:::-;4497:27;:73::i;:::-;4381:200;3085:1502;2974:1613;;;;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;859:44;847:57;839:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:229;;561:358;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;1211:309::-;1325:12;1339:17;1360:5;:10;;1394:24;;;1420:2;1424:5;1371:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;;1476:1;1461:4;:11;:16;:44;;;;1492:4;1481:24;;;;;;;;;;;;:::i;:::-;1461:44;1449:57;1441:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1314:206;;1211:309;;;:::o;7:91:5:-;43:7;83:8;76:5;72:20;61:31;;7:91;;;:::o;104:115::-;189:23;206:5;189:23;:::i;:::-;184:3;177:36;104:115;;:::o;225:218::-;316:4;354:2;343:9;339:18;331:26;;367:69;433:1;422:9;418:17;409:6;367:69;:::i;:::-;225:218;;;;:::o;530:117::-;639:1;636;629:12;776:77;813:7;842:5;831:16;;776:77;;;:::o;859:122::-;932:24;950:5;932:24;:::i;:::-;925:5;922:35;912:63;;971:1;968;961:12;912:63;859:122;:::o;987:139::-;1033:5;1071:6;1058:20;1049:29;;1087:33;1114:5;1087:33;:::i;:::-;987:139;;;;:::o;1132:329::-;1191:6;1240:2;1228:9;1219:7;1215:23;1211:32;1208:119;;;1246:79;;:::i;:::-;1208:119;1366:1;1391:53;1436:7;1427:6;1416:9;1412:22;1391:53;:::i;:::-;1381:63;;1337:117;1132:329;;;;:::o;1467:118::-;1554:24;1572:5;1554:24;:::i;:::-;1549:3;1542:37;1467:118;;:::o;1591:222::-;1684:4;1722:2;1711:9;1707:18;1699:26;;1735:71;1803:1;1792:9;1788:17;1779:6;1735:71;:::i;:::-;1591:222;;;;:::o;1819:126::-;1856:7;1896:42;1889:5;1885:54;1874:65;;1819:126;;;:::o;1951:60::-;1979:3;2000:5;1993:12;;1951:60;;;:::o;2017:142::-;2067:9;2100:53;2118:34;2127:24;2145:5;2127:24;:::i;:::-;2118:34;:::i;:::-;2100:53;:::i;:::-;2087:66;;2017:142;;;:::o;2165:126::-;2215:9;2248:37;2279:5;2248:37;:::i;:::-;2235:50;;2165:126;;;:::o;2297:145::-;2366:9;2399:37;2430:5;2399:37;:::i;:::-;2386:50;;2297:145;;;:::o;2448:169::-;2554:56;2604:5;2554:56;:::i;:::-;2549:3;2542:69;2448:169;;:::o;2623:260::-;2735:4;2773:2;2762:9;2758:18;2750:26;;2786:90;2873:1;2862:9;2858:17;2849:6;2786:90;:::i;:::-;2623:260;;;;:::o;2889:474::-;2957:6;2965;3014:2;3002:9;2993:7;2989:23;2985:32;2982:119;;;3020:79;;:::i;:::-;2982:119;3140:1;3165:53;3210:7;3201:6;3190:9;3186:22;3165:53;:::i;:::-;3155:63;;3111:117;3267:2;3293:53;3338:7;3329:6;3318:9;3314:22;3293:53;:::i;:::-;3283:63;;3238:118;2889:474;;;;;:::o;3369:96::-;3406:7;3435:24;3453:5;3435:24;:::i;:::-;3424:35;;3369:96;;;:::o;3471:108::-;3548:24;3566:5;3548:24;:::i;:::-;3543:3;3536:37;3471:108;;:::o;3585:105::-;3660:23;3677:5;3660:23;:::i;:::-;3655:3;3648:36;3585:105;;:::o;3696:108::-;3773:24;3791:5;3773:24;:::i;:::-;3768:3;3761:37;3696:108;;:::o;3810:::-;3887:24;3905:5;3887:24;:::i;:::-;3882:3;3875:37;3810:108;;:::o;4018:1623::-;4193:6;4188:3;4184:16;4285:4;4278:5;4274:16;4268:23;4304:63;4361:4;4356:3;4352:14;4338:12;4304:63;:::i;:::-;4210:167;4463:4;4456:5;4452:16;4446:23;4482:63;4539:4;4534:3;4530:14;4516:12;4482:63;:::i;:::-;4387:168;4636:4;4629:5;4625:16;4619:23;4655:61;4710:4;4705:3;4701:14;4687:12;4655:61;:::i;:::-;4565:161;4813:4;4806:5;4802:16;4796:23;4832:63;4889:4;4884:3;4880:14;4866:12;4832:63;:::i;:::-;4736:169;4991:4;4984:5;4980:16;4974:23;5010:63;5067:4;5062:3;5058:14;5044:12;5010:63;:::i;:::-;4915:168;5169:4;5162:5;5158:16;5152:23;5188:63;5245:4;5240:3;5236:14;5222:12;5188:63;:::i;:::-;5093:168;5355:4;5348:5;5344:16;5338:23;5374:63;5431:4;5426:3;5422:14;5408:12;5374:63;:::i;:::-;5271:176;5542:4;5535:5;5531:16;5525:23;5561:63;5618:4;5613:3;5609:14;5595:12;5561:63;:::i;:::-;5457:177;4162:1479;4018:1623;;:::o;5647:379::-;5818:4;5856:3;5845:9;5841:19;5833:27;;5870:149;6016:1;6005:9;6001:17;5992:6;5870:149;:::i;:::-;5647:379;;;;:::o;6032:143::-;6089:5;6120:6;6114:13;6105:22;;6136:33;6163:5;6136:33;:::i;:::-;6032:143;;;;:::o;6181:351::-;6251:6;6300:2;6288:9;6279:7;6275:23;6271:32;6268:119;;;6306:79;;:::i;:::-;6268:119;6426:1;6451:64;6507:7;6498:6;6487:9;6483:22;6451:64;:::i;:::-;6441:74;;6397:128;6181:351;;;;:::o;6634:1625::-;6811:6;6806:3;6802:16;6903:4;6896:5;6892:16;6886:23;6922:63;6979:4;6974:3;6970:14;6956:12;6922:63;:::i;:::-;6828:167;7081:4;7074:5;7070:16;7064:23;7100:63;7157:4;7152:3;7148:14;7134:12;7100:63;:::i;:::-;7005:168;7254:4;7247:5;7243:16;7237:23;7273:61;7328:4;7323:3;7319:14;7305:12;7273:61;:::i;:::-;7183:161;7431:4;7424:5;7420:16;7414:23;7450:63;7507:4;7502:3;7498:14;7484:12;7450:63;:::i;:::-;7354:169;7609:4;7602:5;7598:16;7592:23;7628:63;7685:4;7680:3;7676:14;7662:12;7628:63;:::i;:::-;7533:168;7788:4;7781:5;7777:16;7771:23;7807:63;7864:4;7859:3;7855:14;7841:12;7807:63;:::i;:::-;7711:169;7973:4;7966:5;7962:16;7956:23;7992:63;8049:4;8044:3;8040:14;8026:12;7992:63;:::i;:::-;7890:175;8160:4;8153:5;8149:16;8143:23;8179:63;8236:4;8231:3;8227:14;8213:12;8179:63;:::i;:::-;8075:177;6780:1479;6634:1625;;:::o;8265:383::-;8438:4;8476:3;8465:9;8461:19;8453:27;;8490:151;8638:1;8627:9;8623:17;8614:6;8490:151;:::i;:::-;8265:383;;;;:::o;8654:180::-;8702:77;8699:1;8692:88;8799:4;8796:1;8789:15;8823:4;8820:1;8813:15;8840:194;8880:4;8900:20;8918:1;8900:20;:::i;:::-;8895:25;;8934:20;8952:1;8934:20;:::i;:::-;8929:25;;8978:1;8975;8971:9;8963:17;;9002:1;8996:4;8993:11;8990:37;;;9007:18;;:::i;:::-;8990:37;8840:194;;;;:::o;9040:118::-;9127:24;9145:5;9127:24;:::i;:::-;9122:3;9115:37;9040:118;;:::o;9164:442::-;9313:4;9351:2;9340:9;9336:18;9328:26;;9364:71;9432:1;9421:9;9417:17;9408:6;9364:71;:::i;:::-;9445:72;9513:2;9502:9;9498:18;9489:6;9445:72;:::i;:::-;9527;9595:2;9584:9;9580:18;9571:6;9527:72;:::i;:::-;9164:442;;;;;;:::o;9612:98::-;9663:6;9697:5;9691:12;9681:22;;9612:98;;;:::o;9716:147::-;9817:11;9854:3;9839:18;;9716:147;;;;:::o;9869:139::-;9958:6;9953:3;9948;9942:23;9999:1;9990:6;9985:3;9981:16;9974:27;9869:139;;;:::o;10014:386::-;10118:3;10146:38;10178:5;10146:38;:::i;:::-;10200:88;10281:6;10276:3;10200:88;:::i;:::-;10193:95;;10297:65;10355:6;10350:3;10343:4;10336:5;10332:16;10297:65;:::i;:::-;10387:6;10382:3;10378:16;10371:23;;10122:278;10014:386;;;;:::o;10406:271::-;10536:3;10558:93;10647:3;10638:6;10558:93;:::i;:::-;10551:100;;10668:3;10661:10;;10406:271;;;;:::o;10683:90::-;10717:7;10760:5;10753:13;10746:21;10735:32;;10683:90;;;:::o;10779:116::-;10849:21;10864:5;10849:21;:::i;:::-;10842:5;10839:32;10829:60;;10885:1;10882;10875:12;10829:60;10779:116;:::o;10901:137::-;10955:5;10986:6;10980:13;10971:22;;11002:30;11026:5;11002:30;:::i;:::-;10901:137;;;;:::o;11044:345::-;11111:6;11160:2;11148:9;11139:7;11135:23;11131:32;11128:119;;;11166:79;;:::i;:::-;11128:119;11286:1;11311:61;11364:7;11355:6;11344:9;11340:22;11311:61;:::i;:::-;11301:71;;11257:125;11044:345;;;;:::o;11395:169::-;11479:11;11513:6;11508:3;11501:19;11553:4;11548:3;11544:14;11529:29;;11395:169;;;;:::o;11570:153::-;11710:5;11706:1;11698:6;11694:14;11687:29;11570:153;:::o;11729:365::-;11871:3;11892:66;11956:1;11951:3;11892:66;:::i;:::-;11885:73;;11967:93;12056:3;11967:93;:::i;:::-;12085:2;12080:3;12076:12;12069:19;;11729:365;;;:::o;12100:419::-;12266:4;12304:2;12293:9;12289:18;12281:26;;12353:9;12347:4;12343:20;12339:1;12328:9;12324:17;12317:47;12381:131;12507:4;12381:131;:::i;:::-;12373:139;;12100:419;;;:::o;12525:332::-;12646:4;12684:2;12673:9;12669:18;12661:26;;12697:71;12765:1;12754:9;12750:17;12741:6;12697:71;:::i;:::-;12778:72;12846:2;12835:9;12831:18;12822:6;12778:72;:::i;:::-;12525:332;;;;;:::o;12863:152::-;13003:4;12999:1;12991:6;12987:14;12980:28;12863:152;:::o;13021:365::-;13163:3;13184:66;13248:1;13243:3;13184:66;:::i;:::-;13177:73;;13259:93;13348:3;13259:93;:::i;:::-;13377:2;13372:3;13368:12;13361:19;;13021:365;;;:::o;13392:419::-;13558:4;13596:2;13585:9;13581:18;13573:26;;13645:9;13639:4;13635:20;13631:1;13620:9;13616:17;13609:47;13673:131;13799:4;13673:131;:::i;:::-;13665:139;;13392:419;;;:::o;13817:152::-;13957:4;13953:1;13945:6;13941:14;13934:28;13817:152;:::o;13975:365::-;14117:3;14138:66;14202:1;14197:3;14138:66;:::i;:::-;14131:73;;14213:93;14302:3;14213:93;:::i;:::-;14331:2;14326:3;14322:12;14315:19;;13975:365;;;:::o;14346:419::-;14512:4;14550:2;14539:9;14535:18;14527:26;;14599:9;14593:4;14589:20;14585:1;14574:9;14570:17;14563:47;14627:131;14753:4;14627:131;:::i;:::-;14619:139;;14346:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "800600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"poolFee()": "309",
								"swapExactInputSingle(uint256)": "infinite",
								"swapExactOutputSingle(uint256,uint256)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 201,
									"end": 4590,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 622,
									"end": 700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 682,
									"end": 693,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 669,
									"end": 693,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 669,
									"end": 693,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 669,
									"end": 693,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1131,
									"end": 1137,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1159,
									"end": 1166,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1178,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1183,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1186,
									"end": 1265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1406,
									"end": 1413,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1395,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1331,
									"end": 1414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1424,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "375"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 4590,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122064807b284766468a009dfbca4d25bc6a2a3d4292c8ba3e29cee53279dc8c69dd64736f6c63430008190033",
									".code": [
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "89FE6AA"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "73BD43AD"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "C31C9C07"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "C4B69A18"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 4590,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 498,
											"end": 535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 498,
											"end": 535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1174,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1174,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1174,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 394,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 394,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2974,
											"end": 4587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2974,
											"end": 4587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2974,
											"end": 4587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 535,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 344,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1447,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1458,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1385,
											"end": 1459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1459,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1385,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 344,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 1568,
											"end": 1576,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1514,
											"end": 1577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1577,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1514,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 344,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 272,
											"end": 314,
											"name": "PUSH",
											"source": 4,
											"value": "FFF9976782D46CC05630D1F6EBAB18B2324D6B14"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 531,
											"end": 535,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2055,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2098,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2134,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2170,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 2224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 2224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2318,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 2308,
											"end": 2335,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2308,
											"end": 2335,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2335,
											"name": "PUSH",
											"source": 4,
											"value": "414BF389"
										},
										{
											"begin": 2336,
											"end": 2342,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2308,
											"end": 2343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2308,
											"end": 2343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 2350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3067,
											"end": 3083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 344,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 3199,
											"end": 3209,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3223,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3226,
											"end": 3241,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3161,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3161,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3161,
											"end": 3242,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3161,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 344,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 3509,
											"end": 3519,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3522,
											"end": 3537,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3468,
											"end": 3538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3538,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3468,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 344,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 272,
											"end": 314,
											"name": "PUSH",
											"source": 4,
											"value": "FFF9976782D46CC05630D1F6EBAB18B2324D6B14"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 531,
											"end": 535,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3771,
											"end": 3781,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3809,
											"end": 3824,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 3912,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4099,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 4089,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "DB3E2198"
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4089,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4089,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4089,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4078,
											"end": 4125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4078,
											"end": 4125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4411,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4393,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4411,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4581,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4381,
											"end": 4581,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 344,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 4468,
											"end": 4478,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 4481,
											"end": 4482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4427,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4497,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 344,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 4531,
											"end": 4541,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4561,
											"end": 4569,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4543,
											"end": 4558,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4543,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4543,
											"end": 4569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4543,
											"end": 4569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4543,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4543,
											"end": 4569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4543,
											"end": 4569,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4543,
											"end": 4569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4497,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4497,
											"end": 4570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4497,
											"end": 4570,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4497,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4581,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4381,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3085,
											"end": 4587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 4587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 748,
											"end": 758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 812,
											"end": 816,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 759,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 748,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 859,
											"end": 875,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 839,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2032,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2101,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1356,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1371,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1360,
											"end": 1431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1477,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1481,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1441,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 98,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 7,
											"end": 98,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 91,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 72,
											"end": 92,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 61,
											"end": 92,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 61,
											"end": 92,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 104,
											"end": 219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 206,
											"end": 211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 189,
											"end": 212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 189,
											"end": 212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 177,
											"end": 213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 225,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 331,
											"end": 357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 418,
											"end": 435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 409,
											"end": 415,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 367,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 367,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 530,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 530,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 639,
											"end": 640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 629,
											"end": 641,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 776,
											"end": 853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 831,
											"end": 847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 831,
											"end": 847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 859,
											"end": 981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 932,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 925,
											"end": 930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 922,
											"end": 957,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 912,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 912,
											"end": 975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 961,
											"end": 973,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 912,
											"end": 975,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 912,
											"end": 975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1077,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1087,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1197,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1242,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1237,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1215,
											"end": 1238,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1243,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1246,
											"end": 1325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1436,
											"end": 1443,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1391,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1444,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1391,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1444,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1585,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1467,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1572,
											"end": 1577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1554,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1552,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1724,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1711,
											"end": 1720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1803,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1801,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1735,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1735,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1945,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1819,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1938,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1889,
											"end": 1894,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1939,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2011,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1951,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2159,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2017,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2118,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2145,
											"end": 2150,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2127,
											"end": 2151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2118,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2152,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2118,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2100,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2159,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2159,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2159,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2291,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2165,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2248,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2285,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2248,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2291,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2442,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2297,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2375,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2430,
											"end": 2435,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2399,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2399,
											"end": 2436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2399,
											"end": 2436,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2399,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2442,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2442,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2604,
											"end": 2609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2554,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2552,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2611,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2750,
											"end": 2776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2750,
											"end": 2776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 3363,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2889,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3016,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3011,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2993,
											"end": 3000,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3012,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3017,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3101,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2982,
											"end": 3101,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3020,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3020,
											"end": 3099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3099,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3020,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3101,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2982,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3210,
											"end": 3217,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3199,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3186,
											"end": 3208,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3165,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3218,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3165,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3218,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3269,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3327,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3336,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3293,
											"end": 3346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3238,
											"end": 3356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 3363,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 3363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 3363,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 3363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 3363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 3363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3465,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3369,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3406,
											"end": 3413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3453,
											"end": 3458,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3435,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3435,
											"end": 3459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3435,
											"end": 3459,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3435,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3579,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3471,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3566,
											"end": 3571,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3548,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3548,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3543,
											"end": 3546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3573,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3690,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3585,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3677,
											"end": 3682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3660,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3683,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3660,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3655,
											"end": 3658,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3648,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3804,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3696,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3773,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3771,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3918,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3810,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3887,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3905,
											"end": 3910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3887,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3887,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3887,
											"end": 3911,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3887,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 3885,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 5641,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4018,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4188,
											"end": 4191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4285,
											"end": 4289,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4274,
											"end": 4290,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4291,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4361,
											"end": 4365,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4366,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4338,
											"end": 4350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4304,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4367,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4304,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4456,
											"end": 4461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4468,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4482,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4539,
											"end": 4543,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4534,
											"end": 4537,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4530,
											"end": 4544,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4516,
											"end": 4528,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4482,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4482,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4482,
											"end": 4545,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4482,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4636,
											"end": 4640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 4710,
											"end": 4714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4705,
											"end": 4708,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4701,
											"end": 4715,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4699,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4655,
											"end": 4716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4716,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 4655,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4806,
											"end": 4811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4802,
											"end": 4818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4796,
											"end": 4819,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4889,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4884,
											"end": 4887,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4880,
											"end": 4894,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4866,
											"end": 4878,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4832,
											"end": 4895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4895,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4832,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4991,
											"end": 4995,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4984,
											"end": 4989,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 4996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 4997,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5067,
											"end": 5071,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 5010,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5073,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5010,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4915,
											"end": 5083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5173,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5162,
											"end": 5167,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5158,
											"end": 5174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5175,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 5245,
											"end": 5249,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5240,
											"end": 5243,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5250,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 5188,
											"end": 5251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5251,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 5188,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5355,
											"end": 5359,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 5348,
											"end": 5353,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5338,
											"end": 5361,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 5426,
											"end": 5429,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5408,
											"end": 5420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 5374,
											"end": 5437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5437,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5374,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5271,
											"end": 5447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5535,
											"end": 5540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5618,
											"end": 5622,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5613,
											"end": 5616,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5609,
											"end": 5623,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5595,
											"end": 5607,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5561,
											"end": 5624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5624,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5561,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5457,
											"end": 5634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 5641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 5641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 5641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 6026,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 5647,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5818,
											"end": 5822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5859,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5845,
											"end": 5854,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5833,
											"end": 5860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5833,
											"end": 5860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6016,
											"end": 6017,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6005,
											"end": 6014,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 5998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5870,
											"end": 6019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6019,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5870,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 6026,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 6026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 6026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 6026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 6026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6175,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6032,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6089,
											"end": 6094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6163,
											"end": 6168,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 6136,
											"end": 6169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6169,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6136,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6175,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6175,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6532,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 6181,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6300,
											"end": 6302,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6279,
											"end": 6286,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6275,
											"end": 6298,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 6303,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6268,
											"end": 6387,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6268,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 6268,
											"end": 6387,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 6306,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 6306,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6385,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 6306,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6268,
											"end": 6387,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 6268,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6451,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 6507,
											"end": 6514,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6498,
											"end": 6504,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6487,
											"end": 6496,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6451,
											"end": 6515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6515,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 6451,
											"end": 6515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6515,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6397,
											"end": 6525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6532,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6532,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 8259,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6634,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6811,
											"end": 6817,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6806,
											"end": 6809,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6802,
											"end": 6818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 6901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6892,
											"end": 6908,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6886,
											"end": 6909,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6922,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6979,
											"end": 6983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6977,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 6984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6922,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6922,
											"end": 6985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6922,
											"end": 6985,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6922,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6828,
											"end": 6995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7085,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7074,
											"end": 7079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7070,
											"end": 7086,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7087,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 7157,
											"end": 7161,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7152,
											"end": 7155,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7148,
											"end": 7162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7134,
											"end": 7146,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 7100,
											"end": 7163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7163,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 7100,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7254,
											"end": 7258,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7247,
											"end": 7252,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7237,
											"end": 7260,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7319,
											"end": 7333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7317,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 7273,
											"end": 7334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7334,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 7273,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7424,
											"end": 7429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 7436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7414,
											"end": 7437,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7450,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 7507,
											"end": 7511,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7502,
											"end": 7505,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7496,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7450,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 7450,
											"end": 7513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7450,
											"end": 7513,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 7450,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7354,
											"end": 7523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7609,
											"end": 7613,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7598,
											"end": 7614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7592,
											"end": 7615,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7628,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 7685,
											"end": 7689,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7680,
											"end": 7683,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7676,
											"end": 7690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7662,
											"end": 7674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7628,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 7628,
											"end": 7691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7628,
											"end": 7691,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 7628,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7788,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 7781,
											"end": 7786,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7777,
											"end": 7793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7771,
											"end": 7794,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7807,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 7864,
											"end": 7868,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 7859,
											"end": 7862,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7855,
											"end": 7869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7841,
											"end": 7853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7807,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 7807,
											"end": 7870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7807,
											"end": 7870,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 7807,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 7880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 7966,
											"end": 7971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7956,
											"end": 7979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 8049,
											"end": 8053,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 8044,
											"end": 8047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8040,
											"end": 8054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8026,
											"end": 8038,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 7992,
											"end": 8055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8055,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 7992,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7890,
											"end": 8065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8160,
											"end": 8164,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8153,
											"end": 8158,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8149,
											"end": 8165,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8143,
											"end": 8166,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 8236,
											"end": 8240,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8227,
											"end": 8241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 8179,
											"end": 8242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8242,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 8179,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8075,
											"end": 8252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6780,
											"end": 8259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 8259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 8259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 8259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8648,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 8265,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8476,
											"end": 8479,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8465,
											"end": 8474,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8461,
											"end": 8480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8453,
											"end": 8480,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8453,
											"end": 8480,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8490,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 8638,
											"end": 8639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8636,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8623,
											"end": 8640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8614,
											"end": 8620,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8490,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 8490,
											"end": 8641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8490,
											"end": 8641,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 8490,
											"end": 8641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8648,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8648,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 8834,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8654,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8702,
											"end": 8779,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8699,
											"end": 8700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8692,
											"end": 8780,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8789,
											"end": 8804,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8820,
											"end": 8821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8828,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9034,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 8840,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8880,
											"end": 8884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 8918,
											"end": 8919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 8900,
											"end": 8920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8934,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8934,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 8934,
											"end": 8954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8934,
											"end": 8954,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 8934,
											"end": 8954,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8929,
											"end": 8954,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8929,
											"end": 8954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8978,
											"end": 8979,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8971,
											"end": 8980,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8963,
											"end": 8980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8963,
											"end": 8980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9002,
											"end": 9003,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9000,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8993,
											"end": 9004,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 9027,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 8990,
											"end": 9027,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9007,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 9007,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 9007,
											"end": 9025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9007,
											"end": 9025,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 9007,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 9027,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 8990,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9034,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9034,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9158,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 9040,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 9145,
											"end": 9150,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 9127,
											"end": 9151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9151,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 9127,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9122,
											"end": 9125,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9152,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9040,
											"end": 9158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9353,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9340,
											"end": 9349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9336,
											"end": 9354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9328,
											"end": 9354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9328,
											"end": 9354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9364,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9430,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9417,
											"end": 9434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9408,
											"end": 9414,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9364,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 9364,
											"end": 9435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9364,
											"end": 9435,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 9364,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9445,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 9513,
											"end": 9515,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9502,
											"end": 9511,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9498,
											"end": 9516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9495,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9445,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 9445,
											"end": 9517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9445,
											"end": 9517,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 9445,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9527,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 9595,
											"end": 9597,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9584,
											"end": 9593,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9580,
											"end": 9598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9571,
											"end": 9577,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9527,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 9527,
											"end": 9599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9527,
											"end": 9599,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 9527,
											"end": 9599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9612,
											"end": 9710,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 9612,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9663,
											"end": 9669,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9697,
											"end": 9702,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9691,
											"end": 9703,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9681,
											"end": 9703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9681,
											"end": 9703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9612,
											"end": 9710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9612,
											"end": 9710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9612,
											"end": 9710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9612,
											"end": 9710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9716,
											"end": 9863,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 9716,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9817,
											"end": 9828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9854,
											"end": 9857,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9716,
											"end": 9863,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9716,
											"end": 9863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9716,
											"end": 9863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9716,
											"end": 9863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9716,
											"end": 9863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9869,
											"end": 10008,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 9869,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9953,
											"end": 9956,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9948,
											"end": 9951,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9942,
											"end": 9965,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 9999,
											"end": 10000,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9990,
											"end": 9996,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9985,
											"end": 9988,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9981,
											"end": 9997,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9974,
											"end": 10001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9869,
											"end": 10008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9869,
											"end": 10008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9869,
											"end": 10008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9869,
											"end": 10008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10014,
											"end": 10400,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 10014,
											"end": 10400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10146,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 10178,
											"end": 10183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10146,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 10146,
											"end": 10184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10146,
											"end": 10184,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 10146,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10200,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 10281,
											"end": 10287,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10276,
											"end": 10279,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10200,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 10200,
											"end": 10288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10200,
											"end": 10288,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 10200,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10193,
											"end": 10288,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10193,
											"end": 10288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10297,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 10355,
											"end": 10361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10350,
											"end": 10353,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10343,
											"end": 10347,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10336,
											"end": 10341,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10332,
											"end": 10348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10297,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 10297,
											"end": 10362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10297,
											"end": 10362,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 10297,
											"end": 10362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10387,
											"end": 10393,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10382,
											"end": 10385,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10378,
											"end": 10394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10371,
											"end": 10394,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10371,
											"end": 10394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10122,
											"end": 10400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10014,
											"end": 10400,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10014,
											"end": 10400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10014,
											"end": 10400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10014,
											"end": 10400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10014,
											"end": 10400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10406,
											"end": 10677,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 10406,
											"end": 10677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10536,
											"end": 10539,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10558,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 10647,
											"end": 10650,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10638,
											"end": 10644,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10558,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 10558,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10558,
											"end": 10651,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 10558,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10551,
											"end": 10651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10551,
											"end": 10651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10661,
											"end": 10671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10661,
											"end": 10671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10406,
											"end": 10677,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10406,
											"end": 10677,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10406,
											"end": 10677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10406,
											"end": 10677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10406,
											"end": 10677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10773,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 10683,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10717,
											"end": 10724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10760,
											"end": 10765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10753,
											"end": 10766,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10746,
											"end": 10767,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10735,
											"end": 10767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10735,
											"end": 10767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10773,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10773,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10779,
											"end": 10895,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 10779,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10849,
											"end": 10870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 10864,
											"end": 10869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10849,
											"end": 10870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 10849,
											"end": 10870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10849,
											"end": 10870,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 10849,
											"end": 10870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10842,
											"end": 10847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10839,
											"end": 10871,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10829,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10829,
											"end": 10889,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10882,
											"end": 10883,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10875,
											"end": 10887,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10829,
											"end": 10889,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10829,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10779,
											"end": 10895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10779,
											"end": 10895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11038,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 10901,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10955,
											"end": 10960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10980,
											"end": 10993,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10971,
											"end": 10993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10971,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11002,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 11026,
											"end": 11031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11002,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 11002,
											"end": 11032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11002,
											"end": 11032,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 11002,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11038,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11038,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11044,
											"end": 11389,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 11044,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11111,
											"end": 11117,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11160,
											"end": 11162,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11148,
											"end": 11157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11139,
											"end": 11146,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11135,
											"end": 11158,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11131,
											"end": 11163,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 11128,
											"end": 11247,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11128,
											"end": 11247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 11128,
											"end": 11247,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 11166,
											"end": 11245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11128,
											"end": 11247,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 11128,
											"end": 11247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11286,
											"end": 11287,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11311,
											"end": 11372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 11364,
											"end": 11371,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11355,
											"end": 11361,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11344,
											"end": 11353,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11340,
											"end": 11362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11311,
											"end": 11372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 11311,
											"end": 11372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11311,
											"end": 11372,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 11311,
											"end": 11372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11301,
											"end": 11372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11301,
											"end": 11372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11257,
											"end": 11382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11044,
											"end": 11389,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11044,
											"end": 11389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11044,
											"end": 11389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11044,
											"end": 11389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11044,
											"end": 11389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11395,
											"end": 11564,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 11395,
											"end": 11564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11479,
											"end": 11490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11513,
											"end": 11519,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11508,
											"end": 11511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11501,
											"end": 11520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11553,
											"end": 11557,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11548,
											"end": 11551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11544,
											"end": 11558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11529,
											"end": 11558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11529,
											"end": 11558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11395,
											"end": 11564,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11395,
											"end": 11564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11395,
											"end": 11564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11395,
											"end": 11564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11395,
											"end": 11564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11570,
											"end": 11723,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 11570,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11710,
											"end": 11715,
											"name": "PUSH",
											"source": 5,
											"value": "5354460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11706,
											"end": 11707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11698,
											"end": 11704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11694,
											"end": 11708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11687,
											"end": 11716,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11570,
											"end": 11723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11570,
											"end": 11723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11729,
											"end": 12094,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 11729,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11871,
											"end": 11874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11892,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 11956,
											"end": 11957,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 11951,
											"end": 11954,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11892,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 11892,
											"end": 11958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11892,
											"end": 11958,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 11892,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11885,
											"end": 11958,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11885,
											"end": 11958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11967,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 12056,
											"end": 12059,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11967,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 11967,
											"end": 12060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11967,
											"end": 12060,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 11967,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12085,
											"end": 12087,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12080,
											"end": 12083,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12076,
											"end": 12088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12069,
											"end": 12088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12069,
											"end": 12088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11729,
											"end": 12094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11729,
											"end": 12094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11729,
											"end": 12094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11729,
											"end": 12094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12100,
											"end": 12519,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 12100,
											"end": 12519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12266,
											"end": 12270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12304,
											"end": 12306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12293,
											"end": 12302,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12289,
											"end": 12307,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12281,
											"end": 12307,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12281,
											"end": 12307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12347,
											"end": 12351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12343,
											"end": 12363,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12339,
											"end": 12340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12328,
											"end": 12337,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12324,
											"end": 12341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12317,
											"end": 12364,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12381,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 12507,
											"end": 12511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12381,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 12381,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12381,
											"end": 12512,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 12381,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12373,
											"end": 12512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12373,
											"end": 12512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12100,
											"end": 12519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12100,
											"end": 12519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12100,
											"end": 12519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12100,
											"end": 12519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12525,
											"end": 12857,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 12525,
											"end": 12857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12646,
											"end": 12650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12684,
											"end": 12686,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12673,
											"end": 12682,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12661,
											"end": 12687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12661,
											"end": 12687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12697,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 12765,
											"end": 12766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12754,
											"end": 12763,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12741,
											"end": 12747,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12697,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 12697,
											"end": 12768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12697,
											"end": 12768,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 12697,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12778,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 12846,
											"end": 12848,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12835,
											"end": 12844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12822,
											"end": 12828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12778,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 12778,
											"end": 12850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12778,
											"end": 12850,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 12778,
											"end": 12850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12525,
											"end": 12857,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12525,
											"end": 12857,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12525,
											"end": 12857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12525,
											"end": 12857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12525,
											"end": 12857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12525,
											"end": 12857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12863,
											"end": 13015,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 12863,
											"end": 13015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13003,
											"end": 13007,
											"name": "PUSH",
											"source": 5,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12999,
											"end": 13000,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12991,
											"end": 12997,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12987,
											"end": 13001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12980,
											"end": 13008,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12863,
											"end": 13015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12863,
											"end": 13015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13021,
											"end": 13386,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 13021,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13163,
											"end": 13166,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13184,
											"end": 13250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 13248,
											"end": 13249,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 13243,
											"end": 13246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13184,
											"end": 13250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 13184,
											"end": 13250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13184,
											"end": 13250,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 13184,
											"end": 13250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13177,
											"end": 13250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13177,
											"end": 13250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13259,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 13348,
											"end": 13351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13259,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 13259,
											"end": 13352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13259,
											"end": 13352,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 13259,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13377,
											"end": 13379,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13372,
											"end": 13375,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13368,
											"end": 13380,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13361,
											"end": 13380,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13361,
											"end": 13380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13021,
											"end": 13386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13021,
											"end": 13386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13021,
											"end": 13386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13021,
											"end": 13386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13392,
											"end": 13811,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 13392,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13558,
											"end": 13562,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13596,
											"end": 13598,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13581,
											"end": 13599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13573,
											"end": 13599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13573,
											"end": 13599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13645,
											"end": 13654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13639,
											"end": 13643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13635,
											"end": 13655,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13631,
											"end": 13632,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13620,
											"end": 13629,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13616,
											"end": 13633,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13609,
											"end": 13656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13673,
											"end": 13804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 13799,
											"end": 13803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13673,
											"end": 13804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 13673,
											"end": 13804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13673,
											"end": 13804,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 13673,
											"end": 13804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13665,
											"end": 13804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13665,
											"end": 13804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13392,
											"end": 13811,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13392,
											"end": 13811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13392,
											"end": 13811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13392,
											"end": 13811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13817,
											"end": 13969,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 13817,
											"end": 13969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13957,
											"end": 13961,
											"name": "PUSH",
											"source": 5,
											"value": "5354000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13953,
											"end": 13954,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13945,
											"end": 13951,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13941,
											"end": 13955,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13934,
											"end": 13962,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13817,
											"end": 13969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13817,
											"end": 13969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 14340,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 13975,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14117,
											"end": 14120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14138,
											"end": 14204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 14202,
											"end": 14203,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 14197,
											"end": 14200,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14138,
											"end": 14204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 14138,
											"end": 14204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14138,
											"end": 14204,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 14138,
											"end": 14204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14131,
											"end": 14204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14131,
											"end": 14204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14213,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 14302,
											"end": 14305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14213,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 14213,
											"end": 14306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14213,
											"end": 14306,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 14213,
											"end": 14306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14331,
											"end": 14333,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14326,
											"end": 14329,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14322,
											"end": 14334,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 14340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 14340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 14340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 14340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14346,
											"end": 14765,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 14346,
											"end": 14765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14512,
											"end": 14516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14552,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14535,
											"end": 14553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14527,
											"end": 14553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14527,
											"end": 14553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14599,
											"end": 14608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14593,
											"end": 14597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14589,
											"end": 14609,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14585,
											"end": 14586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14574,
											"end": 14583,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14570,
											"end": 14587,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14563,
											"end": 14610,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14627,
											"end": 14758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 14753,
											"end": 14757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14627,
											"end": 14758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 14627,
											"end": 14758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14627,
											"end": 14758,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 14627,
											"end": 14758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14619,
											"end": 14758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14619,
											"end": 14758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14346,
											"end": 14765,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14346,
											"end": 14765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14346,
											"end": 14765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14346,
											"end": 14765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/UniswapV3SingleHopSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"poolFee()": "089fe6aa",
							"swapExactInputSingle(uint256)": "73bd43ad",
							"swapExactOutputSingle(uint256,uint256)": "c4b69a18",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInputSingle(uint256)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\",\"params\":{\"amountIn\":\"The exact amount of DAI that will be swapped for WETH9.\"},\"returns\":{\"amountOut\":\"The amount of WETH9 received.\"}},\"swapExactOutputSingle(uint256,uint256)\":{\"details\":\"The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The amount of DAI we are willing to spend to receive the specified amount of WETH9.\",\"amountOut\":\"The exact amount of WETH9 to receive from the swap.\"},\"returns\":{\"amountIn\":\"The amount of DAI actually spent in the swap.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputSingle(uint256)\":{\"notice\":\"swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\"},\"swapExactOutputSingle(uint256,uint256)\":{\"notice\":\"swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV3SingleHopSwap.sol\":\"UniswapV3SingleHopSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/UniswapV3SingleHopSwap.sol\":{\"keccak256\":\"0x90360c2f4a30bc873c45a8aa224f969ec21c5341fbebd5763785f7e8e3101897\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ab3d25cf006945fb9e301c4da3ba8023fc5ff07be353d4f3e8dbd0f2f28e787\",\"dweb:/ipfs/QmNjEQXEL5qDsB4yw91KR6Q4P65Sv1v9JjChK7QcWvuZgx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"swapExactInputSingle(uint256)": {
								"notice": "swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router."
							},
							"swapExactOutputSingle(uint256,uint256)": {
								"notice": "swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 92,
							"src": "91:83:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "374:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 99,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "399:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 101,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "425:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 103,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "445:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "472:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "498:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "524:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "558:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 113,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "334:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "877:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "877:22:2"
													},
													"referencedDeclaration": 115,
													"src": "877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:2"
									},
									"scope": 191,
									"src": "851:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1002:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 125,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1022:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 127,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1049:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1075:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1101:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "968:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1436:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$135_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 135,
														"src": "1436:16:2"
													},
													"referencedDeclaration": 135,
													"src": "1436:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1496:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:2"
									},
									"scope": 191,
									"src": "1416:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1562:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1587:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1613:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1633:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1660:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1686:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1713:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1746:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 159,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "1521:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2066:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "2066:23:2"
													},
													"referencedDeclaration": 161,
													"src": "2066:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2133:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:2"
									},
									"scope": 191,
									"src": "2039:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2192:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2212:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2239:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2265:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2292:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "2157:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2638:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$181_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2638:17:2"
													},
													"referencedDeclaration": 181,
													"src": "2638:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:2"
									},
									"scope": 191,
									"src": "2617:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "280:2439:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							362
						]
					},
					"id": 363,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 78,
							"src": "71:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "690:229:3",
										"statements": [
											{
												"assignments": [
													207,
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "715:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 214,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 217,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "812:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 218,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "818:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "822:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 212,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 210,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 225,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "859:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 231,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "890:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 232,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 234,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 229,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "839:73:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:3",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "619:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:3"
									},
									"scope": 362,
									"src": "561:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1314:206:3",
										"statements": [
											{
												"assignments": [
													254,
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1325:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1339:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 255,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 261,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 264,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1420:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1424:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 257,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1449:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 271,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1461:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1492:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 278,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 280,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 275,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:3"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:3",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 362,
									"src": "1211:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1975:205:3",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "2000:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2080:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2084:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "2021:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2109:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 317,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2121:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 323,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2152:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 324,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 326,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:3"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:3",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1926:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 362,
									"src": "1873:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2431:104:3",
										"statements": [
											{
												"assignments": [
													344,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2442:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 349,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 345,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2460:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2475:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:3",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2407:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:3"
									},
									"scope": 362,
									"src": "2370:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "129:2408:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:3"
				},
				"id": 3
			},
			"contracts/UniswapV3SingleHopSwap.sol": {
				"ast": {
					"absolutePath": "contracts/UniswapV3SingleHopSwap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						],
						"TransferHelper": [
							362
						],
						"UniswapV3SingleHopSwap": [
							537
						]
					},
					"id": 538,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 538,
							"sourceUnit": 363,
							"src": "57:70:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 538,
							"sourceUnit": 192,
							"src": "128:68:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UniswapV3SingleHopSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 537,
							"linearizedBaseContracts": [
								537
							],
							"name": "UniswapV3SingleHopSwap",
							"nameLocation": "210:22:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 369,
									"mutability": "constant",
									"name": "WETH",
									"nameLocation": "265:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 537,
									"src": "248:66:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 367,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307866466639393736373832643436434330353633304431663665424162313862323332346436423134",
										"id": 368,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "272:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 372,
									"mutability": "constant",
									"name": "USDC",
									"nameLocation": "337:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 537,
									"src": "320:66:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 370,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "320:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831633744344231393643623043374230316437343346626336313136613930323337394337323338",
										"id": 371,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "344:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 375,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "423:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 537,
									"src": "394:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$191",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 374,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 373,
											"name": "ISwapRouter",
											"nameLocations": [
												"394:11:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 191,
											"src": "394:11:4"
										},
										"referencedDeclaration": 191,
										"src": "394:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$191",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "089fe6aa",
									"id": 378,
									"mutability": "constant",
									"name": "poolFee",
									"nameLocation": "521:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 537,
									"src": "498:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 376,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "498:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "531:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "659:41:4",
										"statements": [
											{
												"expression": {
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 384,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "669:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 385,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "682:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "669:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "669:24:4"
											}
										]
									},
									"id": 389,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "647:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "635:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$191",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 380,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 379,
														"name": "ISwapRouter",
														"nameLocations": [
															"635:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 191,
														"src": "635:11:4"
													},
													"referencedDeclaration": 191,
													"src": "635:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:25:4"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:0:4"
									},
									"scope": 537,
									"src": "622:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "1259:1091:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "1417:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1423:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1427:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1423:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 405,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1443:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV3SingleHopSwap_$537",
																		"typeString": "contract UniswapV3SingleHopSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV3SingleHopSwap_$537",
																		"typeString": "contract UniswapV3SingleHopSwap"
																	}
																],
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1435:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 403,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1435:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1435:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "1450:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 397,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1385:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1400:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "1385:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1385:74:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "1541:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 416,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "1555:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1547:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 414,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1547:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1547:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "1568:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 410,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1514:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1529:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "1514:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1514:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "1514:63:4"
											},
											{
												"assignments": [
													425
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1867:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 447,
														"src": "1825:48:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 424,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 423,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1825:11:4",
																	"1837:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 115,
																"src": "1825:34:4"
															},
															"referencedDeclaration": 115,
															"src": "1825:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"id": 428,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "1950:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "1982:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "2009:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 431,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2045:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2049:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2045:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 433,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2083:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2089:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2083:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 435,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2126:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2208:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 426,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1888:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1900:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "1888:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1941:7:4",
														"1972:8:4",
														"2004:3:4",
														"2034:9:4",
														"2073:8:4",
														"2116:8:4",
														"2152:16:4",
														"2189:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1888:336:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1825:399:4"
											},
											{
												"expression": {
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "2296:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 443,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2336:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 441,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "2308:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2319:16:4",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "2308:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2308:35:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2296:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "2296:47:4"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "710:459:4",
										"text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
									},
									"functionSelector": "73bd43ad",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "1183:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1212:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1204:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:18:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1248:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1240:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:19:4"
									},
									"scope": 537,
									"src": "1174:1176:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "3085:1502:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3193:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 462,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3199:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3203:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3199:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 466,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3219:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV3SingleHopSwap_$537",
																		"typeString": "contract UniswapV3SingleHopSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV3SingleHopSwap_$537",
																		"typeString": "contract UniswapV3SingleHopSwap"
																	}
																],
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3211:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 464,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3211:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3211:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3226:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 458,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3161:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3176:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "3161:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3161:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3161:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3495:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 477,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "3509:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3501:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3501:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3501:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3522:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 471,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3468:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3483:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "3468:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3468:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "3468:70:4"
											},
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "3592:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "3549:49:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
															"typeString": "struct ISwapRouter.ExactOutputSingleParams"
														},
														"typeName": {
															"id": 485,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 484,
																"name": "ISwapRouter.ExactOutputSingleParams",
																"nameLocations": [
																	"3549:11:4",
																	"3561:23:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 161,
																"src": "3549:35:4"
															},
															"referencedDeclaration": 161,
															"src": "3549:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
																"typeString": "struct ISwapRouter.ExactOutputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"arguments": [
														{
															"id": 489,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3676:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "3708:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3735:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 492,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3771:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3775:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3771:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 494,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3809:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3815:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3809:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 496,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3853:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 497,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3897:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3949:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 487,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "3613:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3625:23:4",
														"memberName": "ExactOutputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 161,
														"src": "3613:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$161_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3667:7:4",
														"3698:8:4",
														"3730:3:4",
														"3760:9:4",
														"3799:8:4",
														"3842:9:4",
														"3880:15:4",
														"3930:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountOut",
														"amountInMaximum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "3613:352:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3549:416:4"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 501,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "4078:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 504,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "4118:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															],
															"expression": {
																"id": 502,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "4089:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4100:17:4",
															"memberName": "exactOutputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 170,
															"src": "4089:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$161_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4089:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4078:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "4078:47:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 508,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "4385:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 509,
														"name": "amountInMaximum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "4396:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4385:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 534,
												"nodeType": "IfStatement",
												"src": "4381:200:4",
												"trueBody": {
													"id": 533,
													"nodeType": "Block",
													"src": "4413:168:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 514,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "4454:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 517,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "4468:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			],
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4460:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 515,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4460:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4460:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4481:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 511,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "4427:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4442:11:4",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 335,
																	"src": "4427:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4427:56:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 521,
															"nodeType": "ExpressionStatement",
															"src": "4427:56:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 525,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "4525:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 526,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4531:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4535:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4531:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 528,
																			"name": "amountInMaximum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "4543:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 529,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "4561:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4543:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 522,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "4497:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4512:12:4",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 289,
																	"src": "4497:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4497:73:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 532,
															"nodeType": "ExpressionStatement",
															"src": "4497:73:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "2352:617:4",
										"text": "@notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH9 to receive from the swap.\n @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n @return amountIn The amount of DAI actually spent in the swap."
									},
									"functionSelector": "c4b69a18",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactOutputSingle",
									"nameLocation": "2983:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3013:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "3005:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3005:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "amountInMaximum",
												"nameLocation": "3032:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "3024:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3004:44:4"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3075:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "3067:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3067:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3066:18:4"
									},
									"scope": 537,
									"src": "2974:1613:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 538,
							"src": "201:4389:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:4558:4"
				},
				"id": 4
			}
		}
	}
}