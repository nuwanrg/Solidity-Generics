{
	"id": "9f459f057201bd0ab70a3952e6df0c19",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/UniswapV3SingleHopSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\n\n\n\n\ncontract UniswapV3SingleHopSwap {\n   \n    \n    address constant WETH = 0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14;\n    address constant USDC = 0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238;\n\n\n    ISwapRouter public immutable swapRouter;\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant poolFee = 3000;\n\n // address SWAP_ROUTER_02=0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E; sepholia\n    constructor (ISwapRouter _swapRouter){\n        swapRouter = _swapRouter;\n    }\n\n        /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\n    /// @return amountOut The amount of WETH9 received.\n    function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {\n        // msg.sender must approve this contract\n\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amountIn);\n\n        // Approve the router to spend DAI.\n        TransferHelper.safeApprove(USDC, address(swapRouter), amountIn);\n\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter.ExactInputSingleParams memory params =\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: USDC,\n                tokenOut: WETH,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n\n\n}"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE LOG1 POP PUSH9 0xD1EDDDCA978E124D43 SAR 0x2E SWAP13 0xDB PC SIGNEXTEND 0x25 JUMPI SWAP4 0xF8 0xCE BASEFEE BLOBBASEFEE SDIV BALANCE POP SWAP11 ORIGIN SSTORE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE LOG1 POP PUSH9 0xD1EDDDCA978E124D43 SAR 0x2E SWAP13 0xDB PC SIGNEXTEND 0x25 JUMPI SWAP4 0xF8 0xCE BASEFEE BLOBBASEFEE SDIV BALANCE POP SWAP11 ORIGIN SSTORE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/UniswapV3SingleHopSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/UniswapV3SingleHopSwap.sol": {
				"UniswapV3SingleHopSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "poolFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"swapExactInputSingle(uint256)": {
								"details": "The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.",
								"params": {
									"amountIn": "The exact amount of DAI that will be swapped for WETH9."
								},
								"returns": {
									"amountOut": "The amount of WETH9 received."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/UniswapV3SingleHopSwap.sol\":201:2354  contract UniswapV3SingleHopSwap {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":622:700  constructor (ISwapRouter _swapRouter){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":682:693  _swapRouter */\n  dup1\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":669:693  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":622:700  constructor (ISwapRouter _swapRouter){... */\n  pop\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":201:2354  contract UniswapV3SingleHopSwap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_12:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_23\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_13:\n    /* \"#utility.yul\":781:824   */\n  tag_25\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_26:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_14:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_28\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1431   */\ntag_3:\n    /* \"#utility.yul\":1131:1137   */\n  0x00\n    /* \"#utility.yul\":1180:1182   */\n  0x20\n    /* \"#utility.yul\":1168:1177   */\n  dup3\n    /* \"#utility.yul\":1159:1166   */\n  dup5\n    /* \"#utility.yul\":1155:1178   */\n  sub\n    /* \"#utility.yul\":1151:1183   */\n  slt\n    /* \"#utility.yul\":1148:1267   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1186:1265   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1148:1267   */\ntag_30:\n    /* \"#utility.yul\":1306:1307   */\n  0x00\n    /* \"#utility.yul\":1331:1414   */\n  tag_32\n    /* \"#utility.yul\":1406:1413   */\n  dup5\n    /* \"#utility.yul\":1397:1403   */\n  dup3\n    /* \"#utility.yul\":1386:1395   */\n  dup6\n    /* \"#utility.yul\":1382:1404   */\n  add\n    /* \"#utility.yul\":1331:1414   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1321:1414   */\n  swap2\n  pop\n    /* \"#utility.yul\":1277:1424   */\n  pop\n    /* \"#utility.yul\":1042:1431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/UniswapV3SingleHopSwap.sol\":201:2354  contract UniswapV3SingleHopSwap {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":201:2354  contract UniswapV3SingleHopSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x089fe6aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x73bd43ad\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":498:535  uint24 public constant poolFee = 3000 */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1174:2350  function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":394:433  ISwapRouter public immutable swapRouter */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":498:535  uint24 public constant poolFee = 3000 */\n    tag_7:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":531:535  3000 */\n      0x0bb8\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":498:535  uint24 public constant poolFee = 3000 */\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1174:2350  function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {... */\n    tag_13:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1240:1257  uint256 amountOut */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1385:1459  TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amountIn) */\n      tag_21\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":344:386  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1423:1433  msg.sender */\n      caller\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1443:1447  this */\n      address\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1450:1458  amountIn */\n      dup6\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1385:1416  TransferHelper.safeTransferFrom */\n      tag_22\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1385:1459  TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amountIn) */\n      jump\t// in\n    tag_21:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1514:1577  TransferHelper.safeApprove(USDC, address(swapRouter), amountIn) */\n      tag_23\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":344:386  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1555:1565  swapRouter */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1568:1576  amountIn */\n      dup5\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1514:1540  TransferHelper.safeApprove */\n      tag_24\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1514:1577  TransferHelper.safeApprove(USDC, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1825:1873  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":344:386  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":272:314  0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14 */\n      0xfff9976782d46cc05630d1f6ebab18b2324d6b14\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":531:535  3000 */\n      0x0bb8\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2045:2055  msg.sender */\n      caller\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2083:2098  block.timestamp */\n      timestamp\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2126:2134  amountIn */\n      dup5\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2170:2171  0 */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2208:2209  0 */\n      0x00\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1888:2224  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1825:2224  ISwapRouter.ExactInputSingleParams memory params =... */\n      swap1\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2308:2318  swapRouter */\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2308:2335  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2336:2342  params */\n      dup3\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2308:2343  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":2296:2343  amountOut = swapRouter.exactInputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1259:2350  {... */\n      pop\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":1174:2350  function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV3SingleHopSwap.sol\":394:433  ISwapRouter public immutable swapRouter */\n    tag_17:\n      immutable(\"0x6bee8a6b07414df6f08314df38bdc731f007a634b960783bee7b774fa18ce7ee\")\n      dup2\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_22:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":715:732  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:753  token */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":782:810  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":812:816  from */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":818:820  to */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":822:827  value */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_32\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_38\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_37)\n    tag_38:\n      0x60\n      swap2\n      pop\n    tag_37:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_39\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":874:875  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:863  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_40\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n    tag_40:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_39:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":690:919  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_24:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_47\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_49:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_52\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_51)\n    tag_52:\n      0x60\n      swap2\n      pop\n    tag_51:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_53\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2136:2137  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2125  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_54\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_55:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_54:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_53:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:98   */\n    tag_59:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:91   */\n      0xffffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:92   */\n      and\n        /* \"#utility.yul\":61:92   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:98   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":104:219   */\n    tag_60:\n        /* \"#utility.yul\":189:212   */\n      tag_97\n        /* \"#utility.yul\":206:211   */\n      dup2\n        /* \"#utility.yul\":189:212   */\n      tag_59\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":184:187   */\n      dup3\n        /* \"#utility.yul\":177:213   */\n      mstore\n        /* \"#utility.yul\":104:219   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":225:443   */\n    tag_9:\n        /* \"#utility.yul\":316:320   */\n      0x00\n        /* \"#utility.yul\":354:356   */\n      0x20\n        /* \"#utility.yul\":343:352   */\n      dup3\n        /* \"#utility.yul\":339:357   */\n      add\n        /* \"#utility.yul\":331:357   */\n      swap1\n      pop\n        /* \"#utility.yul\":367:436   */\n      tag_99\n        /* \"#utility.yul\":433:434   */\n      0x00\n        /* \"#utility.yul\":422:431   */\n      dup4\n        /* \"#utility.yul\":418:435   */\n      add\n        /* \"#utility.yul\":409:415   */\n      dup5\n        /* \"#utility.yul\":367:436   */\n      tag_60\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":225:443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":530:647   */\n    tag_62:\n        /* \"#utility.yul\":639:640   */\n      0x00\n        /* \"#utility.yul\":636:637   */\n      dup1\n        /* \"#utility.yul\":629:641   */\n      revert\n        /* \"#utility.yul\":776:853   */\n    tag_64:\n        /* \"#utility.yul\":813:820   */\n      0x00\n        /* \"#utility.yul\":842:847   */\n      dup2\n        /* \"#utility.yul\":831:847   */\n      swap1\n      pop\n        /* \"#utility.yul\":776:853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":859:981   */\n    tag_65:\n        /* \"#utility.yul\":932:956   */\n      tag_105\n        /* \"#utility.yul\":950:955   */\n      dup2\n        /* \"#utility.yul\":932:956   */\n      tag_64\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":925:930   */\n      dup2\n        /* \"#utility.yul\":922:957   */\n      eq\n        /* \"#utility.yul\":912:975   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":971:972   */\n      0x00\n        /* \"#utility.yul\":968:969   */\n      dup1\n        /* \"#utility.yul\":961:973   */\n      revert\n        /* \"#utility.yul\":912:975   */\n    tag_106:\n        /* \"#utility.yul\":859:981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":987:1126   */\n    tag_66:\n        /* \"#utility.yul\":1033:1038   */\n      0x00\n        /* \"#utility.yul\":1071:1077   */\n      dup2\n        /* \"#utility.yul\":1058:1078   */\n      calldataload\n        /* \"#utility.yul\":1049:1078   */\n      swap1\n      pop\n        /* \"#utility.yul\":1087:1120   */\n      tag_108\n        /* \"#utility.yul\":1114:1119   */\n      dup2\n        /* \"#utility.yul\":1087:1120   */\n      tag_65\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":987:1126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1132:1461   */\n    tag_12:\n        /* \"#utility.yul\":1191:1197   */\n      0x00\n        /* \"#utility.yul\":1240:1242   */\n      0x20\n        /* \"#utility.yul\":1228:1237   */\n      dup3\n        /* \"#utility.yul\":1219:1226   */\n      dup5\n        /* \"#utility.yul\":1215:1238   */\n      sub\n        /* \"#utility.yul\":1211:1243   */\n      slt\n        /* \"#utility.yul\":1208:1327   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":1246:1325   */\n      tag_111\n      tag_62\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1208:1327   */\n    tag_110:\n        /* \"#utility.yul\":1366:1367   */\n      0x00\n        /* \"#utility.yul\":1391:1444   */\n      tag_112\n        /* \"#utility.yul\":1436:1443   */\n      dup5\n        /* \"#utility.yul\":1427:1433   */\n      dup3\n        /* \"#utility.yul\":1416:1425   */\n      dup6\n        /* \"#utility.yul\":1412:1434   */\n      add\n        /* \"#utility.yul\":1391:1444   */\n      tag_66\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1381:1444   */\n      swap2\n      pop\n        /* \"#utility.yul\":1337:1454   */\n      pop\n        /* \"#utility.yul\":1132:1461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1467:1585   */\n    tag_67:\n        /* \"#utility.yul\":1554:1578   */\n      tag_114\n        /* \"#utility.yul\":1572:1577   */\n      dup2\n        /* \"#utility.yul\":1554:1578   */\n      tag_64\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1549:1552   */\n      dup3\n        /* \"#utility.yul\":1542:1579   */\n      mstore\n        /* \"#utility.yul\":1467:1585   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1591:1813   */\n    tag_15:\n        /* \"#utility.yul\":1684:1688   */\n      0x00\n        /* \"#utility.yul\":1722:1724   */\n      0x20\n        /* \"#utility.yul\":1711:1720   */\n      dup3\n        /* \"#utility.yul\":1707:1725   */\n      add\n        /* \"#utility.yul\":1699:1725   */\n      swap1\n      pop\n        /* \"#utility.yul\":1735:1806   */\n      tag_116\n        /* \"#utility.yul\":1803:1804   */\n      0x00\n        /* \"#utility.yul\":1792:1801   */\n      dup4\n        /* \"#utility.yul\":1788:1805   */\n      add\n        /* \"#utility.yul\":1779:1785   */\n      dup5\n        /* \"#utility.yul\":1735:1806   */\n      tag_67\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1591:1813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1819:1945   */\n    tag_68:\n        /* \"#utility.yul\":1856:1863   */\n      0x00\n        /* \"#utility.yul\":1896:1938   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1889:1894   */\n      dup3\n        /* \"#utility.yul\":1885:1939   */\n      and\n        /* \"#utility.yul\":1874:1939   */\n      swap1\n      pop\n        /* \"#utility.yul\":1819:1945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1951:2011   */\n    tag_69:\n        /* \"#utility.yul\":1979:1982   */\n      0x00\n        /* \"#utility.yul\":2000:2005   */\n      dup2\n        /* \"#utility.yul\":1993:2005   */\n      swap1\n      pop\n        /* \"#utility.yul\":1951:2011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2017:2159   */\n    tag_70:\n        /* \"#utility.yul\":2067:2076   */\n      0x00\n        /* \"#utility.yul\":2100:2153   */\n      tag_120\n        /* \"#utility.yul\":2118:2152   */\n      tag_121\n        /* \"#utility.yul\":2127:2151   */\n      tag_122\n        /* \"#utility.yul\":2145:2150   */\n      dup5\n        /* \"#utility.yul\":2127:2151   */\n      tag_68\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2118:2152   */\n      tag_69\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2100:2153   */\n      tag_68\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2087:2153   */\n      swap1\n      pop\n        /* \"#utility.yul\":2017:2159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2165:2291   */\n    tag_71:\n        /* \"#utility.yul\":2215:2224   */\n      0x00\n        /* \"#utility.yul\":2248:2285   */\n      tag_124\n        /* \"#utility.yul\":2279:2284   */\n      dup3\n        /* \"#utility.yul\":2248:2285   */\n      tag_70\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2235:2285   */\n      swap1\n      pop\n        /* \"#utility.yul\":2165:2291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2297:2442   */\n    tag_72:\n        /* \"#utility.yul\":2366:2375   */\n      0x00\n        /* \"#utility.yul\":2399:2436   */\n      tag_126\n        /* \"#utility.yul\":2430:2435   */\n      dup3\n        /* \"#utility.yul\":2399:2436   */\n      tag_71\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2386:2436   */\n      swap1\n      pop\n        /* \"#utility.yul\":2297:2442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2448:2617   */\n    tag_73:\n        /* \"#utility.yul\":2554:2610   */\n      tag_128\n        /* \"#utility.yul\":2604:2609   */\n      dup2\n        /* \"#utility.yul\":2554:2610   */\n      tag_72\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2549:2552   */\n      dup3\n        /* \"#utility.yul\":2542:2611   */\n      mstore\n        /* \"#utility.yul\":2448:2617   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2623:2883   */\n    tag_19:\n        /* \"#utility.yul\":2735:2739   */\n      0x00\n        /* \"#utility.yul\":2773:2775   */\n      0x20\n        /* \"#utility.yul\":2762:2771   */\n      dup3\n        /* \"#utility.yul\":2758:2776   */\n      add\n        /* \"#utility.yul\":2750:2776   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      tag_130\n        /* \"#utility.yul\":2873:2874   */\n      0x00\n        /* \"#utility.yul\":2862:2871   */\n      dup4\n        /* \"#utility.yul\":2858:2875   */\n      add\n        /* \"#utility.yul\":2849:2855   */\n      dup5\n        /* \"#utility.yul\":2786:2876   */\n      tag_73\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2623:2883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2889:2985   */\n    tag_74:\n        /* \"#utility.yul\":2926:2933   */\n      0x00\n        /* \"#utility.yul\":2955:2979   */\n      tag_132\n        /* \"#utility.yul\":2973:2978   */\n      dup3\n        /* \"#utility.yul\":2955:2979   */\n      tag_68\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2944:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2889:2985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3099   */\n    tag_75:\n        /* \"#utility.yul\":3068:3092   */\n      tag_134\n        /* \"#utility.yul\":3086:3091   */\n      dup2\n        /* \"#utility.yul\":3068:3092   */\n      tag_74\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3063:3066   */\n      dup3\n        /* \"#utility.yul\":3056:3093   */\n      mstore\n        /* \"#utility.yul\":2991:3099   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3105:3210   */\n    tag_76:\n        /* \"#utility.yul\":3180:3203   */\n      tag_136\n        /* \"#utility.yul\":3197:3202   */\n      dup2\n        /* \"#utility.yul\":3180:3203   */\n      tag_59\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3175:3178   */\n      dup3\n        /* \"#utility.yul\":3168:3204   */\n      mstore\n        /* \"#utility.yul\":3105:3210   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3324   */\n    tag_77:\n        /* \"#utility.yul\":3293:3317   */\n      tag_138\n        /* \"#utility.yul\":3311:3316   */\n      dup2\n        /* \"#utility.yul\":3293:3317   */\n      tag_64\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3288:3291   */\n      dup3\n        /* \"#utility.yul\":3281:3318   */\n      mstore\n        /* \"#utility.yul\":3216:3324   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3330:3438   */\n    tag_78:\n        /* \"#utility.yul\":3407:3431   */\n      tag_140\n        /* \"#utility.yul\":3425:3430   */\n      dup2\n        /* \"#utility.yul\":3407:3431   */\n      tag_68\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3402:3405   */\n      dup3\n        /* \"#utility.yul\":3395:3432   */\n      mstore\n        /* \"#utility.yul\":3330:3438   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3538:5161   */\n    tag_79:\n        /* \"#utility.yul\":3713:3719   */\n      0x0100\n        /* \"#utility.yul\":3708:3711   */\n      dup3\n        /* \"#utility.yul\":3704:3720   */\n      add\n        /* \"#utility.yul\":3805:3809   */\n      0x00\n        /* \"#utility.yul\":3798:3803   */\n      dup3\n        /* \"#utility.yul\":3794:3810   */\n      add\n        /* \"#utility.yul\":3788:3811   */\n      mload\n        /* \"#utility.yul\":3824:3887   */\n      tag_142\n        /* \"#utility.yul\":3881:3885   */\n      0x00\n        /* \"#utility.yul\":3876:3879   */\n      dup6\n        /* \"#utility.yul\":3872:3886   */\n      add\n        /* \"#utility.yul\":3858:3870   */\n      dup3\n        /* \"#utility.yul\":3824:3887   */\n      tag_75\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3730:3897   */\n      pop\n        /* \"#utility.yul\":3983:3987   */\n      0x20\n        /* \"#utility.yul\":3976:3981   */\n      dup3\n        /* \"#utility.yul\":3972:3988   */\n      add\n        /* \"#utility.yul\":3966:3989   */\n      mload\n        /* \"#utility.yul\":4002:4065   */\n      tag_143\n        /* \"#utility.yul\":4059:4063   */\n      0x20\n        /* \"#utility.yul\":4054:4057   */\n      dup6\n        /* \"#utility.yul\":4050:4064   */\n      add\n        /* \"#utility.yul\":4036:4048   */\n      dup3\n        /* \"#utility.yul\":4002:4065   */\n      tag_75\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3907:4075   */\n      pop\n        /* \"#utility.yul\":4156:4160   */\n      0x40\n        /* \"#utility.yul\":4149:4154   */\n      dup3\n        /* \"#utility.yul\":4145:4161   */\n      add\n        /* \"#utility.yul\":4139:4162   */\n      mload\n        /* \"#utility.yul\":4175:4236   */\n      tag_144\n        /* \"#utility.yul\":4230:4234   */\n      0x40\n        /* \"#utility.yul\":4225:4228   */\n      dup6\n        /* \"#utility.yul\":4221:4235   */\n      add\n        /* \"#utility.yul\":4207:4219   */\n      dup3\n        /* \"#utility.yul\":4175:4236   */\n      tag_76\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4085:4246   */\n      pop\n        /* \"#utility.yul\":4333:4337   */\n      0x60\n        /* \"#utility.yul\":4326:4331   */\n      dup3\n        /* \"#utility.yul\":4322:4338   */\n      add\n        /* \"#utility.yul\":4316:4339   */\n      mload\n        /* \"#utility.yul\":4352:4415   */\n      tag_145\n        /* \"#utility.yul\":4409:4413   */\n      0x60\n        /* \"#utility.yul\":4404:4407   */\n      dup6\n        /* \"#utility.yul\":4400:4414   */\n      add\n        /* \"#utility.yul\":4386:4398   */\n      dup3\n        /* \"#utility.yul\":4352:4415   */\n      tag_75\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4256:4425   */\n      pop\n        /* \"#utility.yul\":4511:4515   */\n      0x80\n        /* \"#utility.yul\":4504:4509   */\n      dup3\n        /* \"#utility.yul\":4500:4516   */\n      add\n        /* \"#utility.yul\":4494:4517   */\n      mload\n        /* \"#utility.yul\":4530:4593   */\n      tag_146\n        /* \"#utility.yul\":4587:4591   */\n      0x80\n        /* \"#utility.yul\":4582:4585   */\n      dup6\n        /* \"#utility.yul\":4578:4592   */\n      add\n        /* \"#utility.yul\":4564:4576   */\n      dup3\n        /* \"#utility.yul\":4530:4593   */\n      tag_77\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4435:4603   */\n      pop\n        /* \"#utility.yul\":4689:4693   */\n      0xa0\n        /* \"#utility.yul\":4682:4687   */\n      dup3\n        /* \"#utility.yul\":4678:4694   */\n      add\n        /* \"#utility.yul\":4672:4695   */\n      mload\n        /* \"#utility.yul\":4708:4771   */\n      tag_147\n        /* \"#utility.yul\":4765:4769   */\n      0xa0\n        /* \"#utility.yul\":4760:4763   */\n      dup6\n        /* \"#utility.yul\":4756:4770   */\n      add\n        /* \"#utility.yul\":4742:4754   */\n      dup3\n        /* \"#utility.yul\":4708:4771   */\n      tag_77\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4613:4781   */\n      pop\n        /* \"#utility.yul\":4875:4879   */\n      0xc0\n        /* \"#utility.yul\":4868:4873   */\n      dup3\n        /* \"#utility.yul\":4864:4880   */\n      add\n        /* \"#utility.yul\":4858:4881   */\n      mload\n        /* \"#utility.yul\":4894:4957   */\n      tag_148\n        /* \"#utility.yul\":4951:4955   */\n      0xc0\n        /* \"#utility.yul\":4946:4949   */\n      dup6\n        /* \"#utility.yul\":4942:4956   */\n      add\n        /* \"#utility.yul\":4928:4940   */\n      dup3\n        /* \"#utility.yul\":4894:4957   */\n      tag_77\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4791:4967   */\n      pop\n        /* \"#utility.yul\":5062:5066   */\n      0xe0\n        /* \"#utility.yul\":5055:5060   */\n      dup3\n        /* \"#utility.yul\":5051:5067   */\n      add\n        /* \"#utility.yul\":5045:5068   */\n      mload\n        /* \"#utility.yul\":5081:5144   */\n      tag_149\n        /* \"#utility.yul\":5138:5142   */\n      0xe0\n        /* \"#utility.yul\":5133:5136   */\n      dup6\n        /* \"#utility.yul\":5129:5143   */\n      add\n        /* \"#utility.yul\":5115:5127   */\n      dup3\n        /* \"#utility.yul\":5081:5144   */\n      tag_78\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4977:5154   */\n      pop\n        /* \"#utility.yul\":3682:5161   */\n      pop\n        /* \"#utility.yul\":3538:5161   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5167:5546   */\n    tag_26:\n        /* \"#utility.yul\":5338:5342   */\n      0x00\n        /* \"#utility.yul\":5376:5379   */\n      0x0100\n        /* \"#utility.yul\":5365:5374   */\n      dup3\n        /* \"#utility.yul\":5361:5380   */\n      add\n        /* \"#utility.yul\":5353:5380   */\n      swap1\n      pop\n        /* \"#utility.yul\":5390:5539   */\n      tag_151\n        /* \"#utility.yul\":5536:5537   */\n      0x00\n        /* \"#utility.yul\":5525:5534   */\n      dup4\n        /* \"#utility.yul\":5521:5538   */\n      add\n        /* \"#utility.yul\":5512:5518   */\n      dup5\n        /* \"#utility.yul\":5390:5539   */\n      tag_79\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":5167:5546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5552:5695   */\n    tag_80:\n        /* \"#utility.yul\":5609:5614   */\n      0x00\n        /* \"#utility.yul\":5640:5646   */\n      dup2\n        /* \"#utility.yul\":5634:5647   */\n      mload\n        /* \"#utility.yul\":5625:5647   */\n      swap1\n      pop\n        /* \"#utility.yul\":5656:5689   */\n      tag_153\n        /* \"#utility.yul\":5683:5688   */\n      dup2\n        /* \"#utility.yul\":5656:5689   */\n      tag_65\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5552:5695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5701:6052   */\n    tag_30:\n        /* \"#utility.yul\":5771:5777   */\n      0x00\n        /* \"#utility.yul\":5820:5822   */\n      0x20\n        /* \"#utility.yul\":5808:5817   */\n      dup3\n        /* \"#utility.yul\":5799:5806   */\n      dup5\n        /* \"#utility.yul\":5795:5818   */\n      sub\n        /* \"#utility.yul\":5791:5823   */\n      slt\n        /* \"#utility.yul\":5788:5907   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":5826:5905   */\n      tag_156\n      tag_62\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5788:5907   */\n    tag_155:\n        /* \"#utility.yul\":5946:5947   */\n      0x00\n        /* \"#utility.yul\":5971:6035   */\n      tag_157\n        /* \"#utility.yul\":6027:6034   */\n      dup5\n        /* \"#utility.yul\":6018:6024   */\n      dup3\n        /* \"#utility.yul\":6007:6016   */\n      dup6\n        /* \"#utility.yul\":6003:6025   */\n      add\n        /* \"#utility.yul\":5971:6035   */\n      tag_80\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5961:6035   */\n      swap2\n      pop\n        /* \"#utility.yul\":5917:6045   */\n      pop\n        /* \"#utility.yul\":5701:6052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6058:6176   */\n    tag_81:\n        /* \"#utility.yul\":6145:6169   */\n      tag_159\n        /* \"#utility.yul\":6163:6168   */\n      dup2\n        /* \"#utility.yul\":6145:6169   */\n      tag_74\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":6140:6143   */\n      dup3\n        /* \"#utility.yul\":6133:6170   */\n      mstore\n        /* \"#utility.yul\":6058:6176   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6182:6624   */\n    tag_33:\n        /* \"#utility.yul\":6331:6335   */\n      0x00\n        /* \"#utility.yul\":6369:6371   */\n      0x60\n        /* \"#utility.yul\":6358:6367   */\n      dup3\n        /* \"#utility.yul\":6354:6372   */\n      add\n        /* \"#utility.yul\":6346:6372   */\n      swap1\n      pop\n        /* \"#utility.yul\":6382:6453   */\n      tag_161\n        /* \"#utility.yul\":6450:6451   */\n      0x00\n        /* \"#utility.yul\":6439:6448   */\n      dup4\n        /* \"#utility.yul\":6435:6452   */\n      add\n        /* \"#utility.yul\":6426:6432   */\n      dup7\n        /* \"#utility.yul\":6382:6453   */\n      tag_81\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":6463:6535   */\n      tag_162\n        /* \"#utility.yul\":6531:6533   */\n      0x20\n        /* \"#utility.yul\":6520:6529   */\n      dup4\n        /* \"#utility.yul\":6516:6534   */\n      add\n        /* \"#utility.yul\":6507:6513   */\n      dup6\n        /* \"#utility.yul\":6463:6535   */\n      tag_81\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":6545:6617   */\n      tag_163\n        /* \"#utility.yul\":6613:6615   */\n      0x40\n        /* \"#utility.yul\":6602:6611   */\n      dup4\n        /* \"#utility.yul\":6598:6616   */\n      add\n        /* \"#utility.yul\":6589:6595   */\n      dup5\n        /* \"#utility.yul\":6545:6617   */\n      tag_67\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":6182:6624   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6630:6728   */\n    tag_82:\n        /* \"#utility.yul\":6681:6687   */\n      0x00\n        /* \"#utility.yul\":6715:6720   */\n      dup2\n        /* \"#utility.yul\":6709:6721   */\n      mload\n        /* \"#utility.yul\":6699:6721   */\n      swap1\n      pop\n        /* \"#utility.yul\":6630:6728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6734:6881   */\n    tag_83:\n        /* \"#utility.yul\":6835:6846   */\n      0x00\n        /* \"#utility.yul\":6872:6875   */\n      dup2\n        /* \"#utility.yul\":6857:6875   */\n      swap1\n      pop\n        /* \"#utility.yul\":6734:6881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6887:7026   */\n    tag_84:\n        /* \"#utility.yul\":6976:6982   */\n      dup3\n        /* \"#utility.yul\":6971:6974   */\n      dup2\n        /* \"#utility.yul\":6966:6969   */\n      dup4\n        /* \"#utility.yul\":6960:6983   */\n      mcopy\n        /* \"#utility.yul\":7017:7018   */\n      0x00\n        /* \"#utility.yul\":7008:7014   */\n      dup4\n        /* \"#utility.yul\":7003:7006   */\n      dup4\n        /* \"#utility.yul\":6999:7015   */\n      add\n        /* \"#utility.yul\":6992:7019   */\n      mstore\n        /* \"#utility.yul\":6887:7026   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7032:7418   */\n    tag_85:\n        /* \"#utility.yul\":7136:7139   */\n      0x00\n        /* \"#utility.yul\":7164:7202   */\n      tag_168\n        /* \"#utility.yul\":7196:7201   */\n      dup3\n        /* \"#utility.yul\":7164:7202   */\n      tag_82\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":7218:7306   */\n      tag_169\n        /* \"#utility.yul\":7299:7305   */\n      dup2\n        /* \"#utility.yul\":7294:7297   */\n      dup6\n        /* \"#utility.yul\":7218:7306   */\n      tag_83\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":7211:7306   */\n      swap4\n      pop\n        /* \"#utility.yul\":7315:7380   */\n      tag_170\n        /* \"#utility.yul\":7373:7379   */\n      dup2\n        /* \"#utility.yul\":7368:7371   */\n      dup6\n        /* \"#utility.yul\":7361:7365   */\n      0x20\n        /* \"#utility.yul\":7354:7359   */\n      dup7\n        /* \"#utility.yul\":7350:7366   */\n      add\n        /* \"#utility.yul\":7315:7380   */\n      tag_84\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":7405:7411   */\n      dup1\n        /* \"#utility.yul\":7400:7403   */\n      dup5\n        /* \"#utility.yul\":7396:7412   */\n      add\n        /* \"#utility.yul\":7389:7412   */\n      swap2\n      pop\n        /* \"#utility.yul\":7140:7418   */\n      pop\n        /* \"#utility.yul\":7032:7418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7424:7695   */\n    tag_35:\n        /* \"#utility.yul\":7554:7557   */\n      0x00\n        /* \"#utility.yul\":7576:7669   */\n      tag_172\n        /* \"#utility.yul\":7665:7668   */\n      dup3\n        /* \"#utility.yul\":7656:7662   */\n      dup5\n        /* \"#utility.yul\":7576:7669   */\n      tag_85\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":7569:7669   */\n      swap2\n      pop\n        /* \"#utility.yul\":7686:7689   */\n      dup2\n        /* \"#utility.yul\":7679:7689   */\n      swap1\n      pop\n        /* \"#utility.yul\":7424:7695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7701:7791   */\n    tag_86:\n        /* \"#utility.yul\":7735:7742   */\n      0x00\n        /* \"#utility.yul\":7778:7783   */\n      dup2\n        /* \"#utility.yul\":7771:7784   */\n      iszero\n        /* \"#utility.yul\":7764:7785   */\n      iszero\n        /* \"#utility.yul\":7753:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7701:7791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7797:7913   */\n    tag_87:\n        /* \"#utility.yul\":7867:7888   */\n      tag_175\n        /* \"#utility.yul\":7882:7887   */\n      dup2\n        /* \"#utility.yul\":7867:7888   */\n      tag_86\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":7860:7865   */\n      dup2\n        /* \"#utility.yul\":7857:7889   */\n      eq\n        /* \"#utility.yul\":7847:7907   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":7903:7904   */\n      0x00\n        /* \"#utility.yul\":7900:7901   */\n      dup1\n        /* \"#utility.yul\":7893:7905   */\n      revert\n        /* \"#utility.yul\":7847:7907   */\n    tag_176:\n        /* \"#utility.yul\":7797:7913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7919:8056   */\n    tag_88:\n        /* \"#utility.yul\":7973:7978   */\n      0x00\n        /* \"#utility.yul\":8004:8010   */\n      dup2\n        /* \"#utility.yul\":7998:8011   */\n      mload\n        /* \"#utility.yul\":7989:8011   */\n      swap1\n      pop\n        /* \"#utility.yul\":8020:8050   */\n      tag_178\n        /* \"#utility.yul\":8044:8049   */\n      dup2\n        /* \"#utility.yul\":8020:8050   */\n      tag_87\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":7919:8056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8062:8407   */\n    tag_42:\n        /* \"#utility.yul\":8129:8135   */\n      0x00\n        /* \"#utility.yul\":8178:8180   */\n      0x20\n        /* \"#utility.yul\":8166:8175   */\n      dup3\n        /* \"#utility.yul\":8157:8164   */\n      dup5\n        /* \"#utility.yul\":8153:8176   */\n      sub\n        /* \"#utility.yul\":8149:8181   */\n      slt\n        /* \"#utility.yul\":8146:8265   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":8184:8263   */\n      tag_181\n      tag_62\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":8146:8265   */\n    tag_180:\n        /* \"#utility.yul\":8304:8305   */\n      0x00\n        /* \"#utility.yul\":8329:8390   */\n      tag_182\n        /* \"#utility.yul\":8382:8389   */\n      dup5\n        /* \"#utility.yul\":8373:8379   */\n      dup3\n        /* \"#utility.yul\":8362:8371   */\n      dup6\n        /* \"#utility.yul\":8358:8380   */\n      add\n        /* \"#utility.yul\":8329:8390   */\n      tag_88\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":8319:8390   */\n      swap2\n      pop\n        /* \"#utility.yul\":8275:8400   */\n      pop\n        /* \"#utility.yul\":8062:8407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8413:8582   */\n    tag_89:\n        /* \"#utility.yul\":8497:8508   */\n      0x00\n        /* \"#utility.yul\":8531:8537   */\n      dup3\n        /* \"#utility.yul\":8526:8529   */\n      dup3\n        /* \"#utility.yul\":8519:8538   */\n      mstore\n        /* \"#utility.yul\":8571:8575   */\n      0x20\n        /* \"#utility.yul\":8566:8569   */\n      dup3\n        /* \"#utility.yul\":8562:8576   */\n      add\n        /* \"#utility.yul\":8547:8576   */\n      swap1\n      pop\n        /* \"#utility.yul\":8413:8582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8588:8741   */\n    tag_90:\n        /* \"#utility.yul\":8728:8733   */\n      0x5354460000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8724:8725   */\n      0x00\n        /* \"#utility.yul\":8716:8722   */\n      dup3\n        /* \"#utility.yul\":8712:8726   */\n      add\n        /* \"#utility.yul\":8705:8734   */\n      mstore\n        /* \"#utility.yul\":8588:8741   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8747:9112   */\n    tag_91:\n        /* \"#utility.yul\":8889:8892   */\n      0x00\n        /* \"#utility.yul\":8910:8976   */\n      tag_186\n        /* \"#utility.yul\":8974:8975   */\n      0x03\n        /* \"#utility.yul\":8969:8972   */\n      dup4\n        /* \"#utility.yul\":8910:8976   */\n      tag_89\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8903:8976   */\n      swap2\n      pop\n        /* \"#utility.yul\":8985:9078   */\n      tag_187\n        /* \"#utility.yul\":9074:9077   */\n      dup3\n        /* \"#utility.yul\":8985:9078   */\n      tag_90\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":9103:9105   */\n      0x20\n        /* \"#utility.yul\":9098:9101   */\n      dup3\n        /* \"#utility.yul\":9094:9106   */\n      add\n        /* \"#utility.yul\":9087:9106   */\n      swap1\n      pop\n        /* \"#utility.yul\":8747:9112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9118:9537   */\n    tag_45:\n        /* \"#utility.yul\":9284:9288   */\n      0x00\n        /* \"#utility.yul\":9322:9324   */\n      0x20\n        /* \"#utility.yul\":9311:9320   */\n      dup3\n        /* \"#utility.yul\":9307:9325   */\n      add\n        /* \"#utility.yul\":9299:9325   */\n      swap1\n      pop\n        /* \"#utility.yul\":9371:9380   */\n      dup2\n        /* \"#utility.yul\":9365:9369   */\n      dup2\n        /* \"#utility.yul\":9361:9381   */\n      sub\n        /* \"#utility.yul\":9357:9358   */\n      0x00\n        /* \"#utility.yul\":9346:9355   */\n      dup4\n        /* \"#utility.yul\":9342:9359   */\n      add\n        /* \"#utility.yul\":9335:9382   */\n      mstore\n        /* \"#utility.yul\":9399:9530   */\n      tag_189\n        /* \"#utility.yul\":9525:9529   */\n      dup2\n        /* \"#utility.yul\":9399:9530   */\n      tag_91\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":9391:9530   */\n      swap1\n      pop\n        /* \"#utility.yul\":9118:9537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9543:9875   */\n    tag_48:\n        /* \"#utility.yul\":9664:9668   */\n      0x00\n        /* \"#utility.yul\":9702:9704   */\n      0x40\n        /* \"#utility.yul\":9691:9700   */\n      dup3\n        /* \"#utility.yul\":9687:9705   */\n      add\n        /* \"#utility.yul\":9679:9705   */\n      swap1\n      pop\n        /* \"#utility.yul\":9715:9786   */\n      tag_191\n        /* \"#utility.yul\":9783:9784   */\n      0x00\n        /* \"#utility.yul\":9772:9781   */\n      dup4\n        /* \"#utility.yul\":9768:9785   */\n      add\n        /* \"#utility.yul\":9759:9765   */\n      dup6\n        /* \"#utility.yul\":9715:9786   */\n      tag_81\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":9796:9868   */\n      tag_192\n        /* \"#utility.yul\":9864:9866   */\n      0x20\n        /* \"#utility.yul\":9853:9862   */\n      dup4\n        /* \"#utility.yul\":9849:9867   */\n      add\n        /* \"#utility.yul\":9840:9846   */\n      dup5\n        /* \"#utility.yul\":9796:9868   */\n      tag_67\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":9543:9875   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9881:10033   */\n    tag_92:\n        /* \"#utility.yul\":10021:10025   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10017:10018   */\n      0x00\n        /* \"#utility.yul\":10009:10015   */\n      dup3\n        /* \"#utility.yul\":10005:10019   */\n      add\n        /* \"#utility.yul\":9998:10026   */\n      mstore\n        /* \"#utility.yul\":9881:10033   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10039:10404   */\n    tag_93:\n        /* \"#utility.yul\":10181:10184   */\n      0x00\n        /* \"#utility.yul\":10202:10268   */\n      tag_195\n        /* \"#utility.yul\":10266:10267   */\n      0x02\n        /* \"#utility.yul\":10261:10264   */\n      dup4\n        /* \"#utility.yul\":10202:10268   */\n      tag_89\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":10195:10268   */\n      swap2\n      pop\n        /* \"#utility.yul\":10277:10370   */\n      tag_196\n        /* \"#utility.yul\":10366:10369   */\n      dup3\n        /* \"#utility.yul\":10277:10370   */\n      tag_92\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":10395:10397   */\n      0x20\n        /* \"#utility.yul\":10390:10393   */\n      dup3\n        /* \"#utility.yul\":10386:10398   */\n      add\n        /* \"#utility.yul\":10379:10398   */\n      swap1\n      pop\n        /* \"#utility.yul\":10039:10404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10410:10829   */\n    tag_58:\n        /* \"#utility.yul\":10576:10580   */\n      0x00\n        /* \"#utility.yul\":10614:10616   */\n      0x20\n        /* \"#utility.yul\":10603:10612   */\n      dup3\n        /* \"#utility.yul\":10599:10617   */\n      add\n        /* \"#utility.yul\":10591:10617   */\n      swap1\n      pop\n        /* \"#utility.yul\":10663:10672   */\n      dup2\n        /* \"#utility.yul\":10657:10661   */\n      dup2\n        /* \"#utility.yul\":10653:10673   */\n      sub\n        /* \"#utility.yul\":10649:10650   */\n      0x00\n        /* \"#utility.yul\":10638:10647   */\n      dup4\n        /* \"#utility.yul\":10634:10651   */\n      add\n        /* \"#utility.yul\":10627:10674   */\n      mstore\n        /* \"#utility.yul\":10691:10822   */\n      tag_198\n        /* \"#utility.yul\":10817:10821   */\n      dup2\n        /* \"#utility.yul\":10691:10822   */\n      tag_93\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":10683:10822   */\n      swap1\n      pop\n        /* \"#utility.yul\":10410:10829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220721a7aa0dcf6d3b9e9e964932b451de059d2145bc8837c65880528d3e172ba4464736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_389": {
									"entryPoint": null,
									"id": 389,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$191": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$191": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1434:5",
										"nodeType": "YulBlock",
										"src": "0:1434:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "632:51:5",
													"nodeType": "YulBlock",
													"src": "632:51:5",
													"statements": [
														{
															"nativeSrc": "642:35:5",
															"nodeType": "YulAssignment",
															"src": "642:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:5"
																},
																"nativeSrc": "653:24:5",
																"nodeType": "YulFunctionCall",
																"src": "653:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$191",
												"nativeSrc": "568:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:5",
														"nodeType": "YulTypedName",
														"src": "614:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:5",
														"nodeType": "YulTypedName",
														"src": "624:7:5",
														"type": ""
													}
												],
												"src": "568:115:5"
											},
											{
												"body": {
													"nativeSrc": "751:98:5",
													"nodeType": "YulBlock",
													"src": "751:98:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:5",
																"nodeType": "YulBlock",
																"src": "827:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:5",
																					"nodeType": "YulLiteral",
																					"src": "836:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:5",
																					"nodeType": "YulLiteral",
																					"src": "839:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:5"
																			},
																			"nativeSrc": "829:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:5"
																		},
																		"nativeSrc": "829:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$191",
																					"nativeSrc": "781:36:5",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:5"
																				},
																				"nativeSrc": "781:43:5",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:5"
																		},
																		"nativeSrc": "771:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:5"
																},
																"nativeSrc": "764:62:5",
																"nodeType": "YulFunctionCall",
																"src": "764:62:5"
															},
															"nativeSrc": "761:82:5",
															"nodeType": "YulIf",
															"src": "761:82:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$191",
												"nativeSrc": "689:160:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:5",
														"nodeType": "YulTypedName",
														"src": "744:5:5",
														"type": ""
													}
												],
												"src": "689:160:5"
											},
											{
												"body": {
													"nativeSrc": "937:99:5",
													"nodeType": "YulBlock",
													"src": "937:99:5",
													"statements": [
														{
															"nativeSrc": "947:22:5",
															"nodeType": "YulAssignment",
															"src": "947:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:5"
																},
																"nativeSrc": "956:13:5",
																"nodeType": "YulFunctionCall",
																"src": "956:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$191",
																	"nativeSrc": "978:45:5",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:5"
																},
																"nativeSrc": "978:52:5",
																"nodeType": "YulFunctionCall",
																"src": "978:52:5"
															},
															"nativeSrc": "978:52:5",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "855:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:5",
														"nodeType": "YulTypedName",
														"src": "923:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:5",
														"nodeType": "YulTypedName",
														"src": "931:5:5",
														"type": ""
													}
												],
												"src": "855:181:5"
											},
											{
												"body": {
													"nativeSrc": "1138:293:5",
													"nodeType": "YulBlock",
													"src": "1138:293:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1184:83:5",
																"nodeType": "YulBlock",
																"src": "1184:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1186:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1186:77:5"
																			},
																			"nativeSrc": "1186:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1186:79:5"
																		},
																		"nativeSrc": "1186:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1186:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1159:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1159:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1168:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1168:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1155:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1155:3:5"
																		},
																		"nativeSrc": "1155:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1155:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1180:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1180:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1151:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:5"
																},
																"nativeSrc": "1151:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1151:32:5"
															},
															"nativeSrc": "1148:119:5",
															"nodeType": "YulIf",
															"src": "1148:119:5"
														},
														{
															"nativeSrc": "1277:147:5",
															"nodeType": "YulBlock",
															"src": "1277:147:5",
															"statements": [
																{
																	"nativeSrc": "1292:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1306:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1296:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1321:93:5",
																	"nodeType": "YulAssignment",
																	"src": "1321:93:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1386:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1386:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1397:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1397:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1382:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1382:3:5"
																				},
																				"nativeSrc": "1382:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1382:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1406:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1406:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
																			"nativeSrc": "1331:50:5",
																			"nodeType": "YulIdentifier",
																			"src": "1331:50:5"
																		},
																		"nativeSrc": "1331:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1331:83:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1321:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1321:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "1042:389:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1108:9:5",
														"nodeType": "YulTypedName",
														"src": "1108:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1119:7:5",
														"nodeType": "YulTypedName",
														"src": "1119:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1131:6:5",
														"nodeType": "YulTypedName",
														"src": "1131:6:5",
														"type": ""
													}
												],
												"src": "1042:389:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$191(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$191(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$191(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$191_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$191(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$191_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051610b4b380380610b4b833981810160405281019061003191906100da565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610105565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100988261006f565b9050919050565b5f6100a98261008e565b9050919050565b6100b98161009f565b81146100c3575f80fd5b50565b5f815190506100d4816100b0565b92915050565b5f602082840312156100ef576100ee61006b565b5b5f6100fc848285016100c6565b91505092915050565b608051610a2161012a5f395f818160f0015281816101db015261027c0152610a215ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063089fe6aa1461004357806373bd43ad14610061578063c31c9c0714610091575b5f80fd5b61004b6100af565b604051610058919061055c565b60405180910390f35b61007b600480360381019061007691906105ac565b6100b5565b60405161008891906105e6565b60405180910390f35b61009961027a565b6040516100a69190610679565b60405180910390f35b610bb881565b5f6100d6731c7d4b196cb0c7b01d743fbc6116a902379c723833308561029e565b610115731c7d4b196cb0c7b01d743fbc6116a902379c72387f0000000000000000000000000000000000000000000000000000000000000000846103f0565b5f604051806101000160405280731c7d4b196cb0c7b01d743fbc6116a902379c723873ffffffffffffffffffffffffffffffffffffffff16815260200173fff9976782d46cc05630d1f6ebab18b2324d6b1473ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b8152600401610232919061077f565b6020604051808303815f875af115801561024e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027291906107ad565b915050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b8686866040516024016102d4939291906107e7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161033e919061086e565b5f604051808303815f865af19150503d805f8114610377576040519150601f19603f3d011682016040523d82523d5f602084013e61037c565b606091505b50915091508180156103a957505f815114806103a85750808060200190518101906103a791906108b9565b5b5b6103e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103df9061093e565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b858560405160240161042492919061095c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161048e919061086e565b5f604051808303815f865af19150503d805f81146104c7576040519150601f19603f3d011682016040523d82523d5f602084013e6104cc565b606091505b50915091508180156104f957505f815114806104f85750808060200190518101906104f791906108b9565b5b5b610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f906109cd565b60405180910390fd5b5050505050565b5f62ffffff82169050919050565b6105568161053f565b82525050565b5f60208201905061056f5f83018461054d565b92915050565b5f80fd5b5f819050919050565b61058b81610579565b8114610595575f80fd5b50565b5f813590506105a681610582565b92915050565b5f602082840312156105c1576105c0610575565b5b5f6105ce84828501610598565b91505092915050565b6105e081610579565b82525050565b5f6020820190506105f95f8301846105d7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61064161063c610637846105ff565b61061e565b6105ff565b9050919050565b5f61065282610627565b9050919050565b5f61066382610648565b9050919050565b61067381610659565b82525050565b5f60208201905061068c5f83018461066a565b92915050565b5f61069c826105ff565b9050919050565b6106ac81610692565b82525050565b6106bb8161053f565b82525050565b6106ca81610579565b82525050565b6106d9816105ff565b82525050565b61010082015f8201516106f45f8501826106a3565b50602082015161070760208501826106a3565b50604082015161071a60408501826106b2565b50606082015161072d60608501826106a3565b50608082015161074060808501826106c1565b5060a082015161075360a08501826106c1565b5060c082015161076660c08501826106c1565b5060e082015161077960e08501826106d0565b50505050565b5f610100820190506107935f8301846106df565b92915050565b5f815190506107a781610582565b92915050565b5f602082840312156107c2576107c1610575565b5b5f6107cf84828501610799565b91505092915050565b6107e181610692565b82525050565b5f6060820190506107fa5f8301866107d8565b61080760208301856107d8565b61081460408301846105d7565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6108488261081c565b6108528185610826565b9350610862818560208601610830565b80840191505092915050565b5f610879828461083e565b915081905092915050565b5f8115159050919050565b61089881610884565b81146108a2575f80fd5b50565b5f815190506108b38161088f565b92915050565b5f602082840312156108ce576108cd610575565b5b5f6108db848285016108a5565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f6109286003836108e4565b9150610933826108f4565b602082019050919050565b5f6020820190508181035f8301526109558161091c565b9050919050565b5f60408201905061096f5f8301856107d8565b61097c60208301846105d7565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f6109b76002836108e4565b91506109c282610983565b602082019050919050565b5f6020820190508181035f8301526109e4816109ab565b905091905056fea2646970667358221220721a7aa0dcf6d3b9e9e964932b451de059d2145bc8837c65880528d3e172ba4464736f6c63430008190033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB4B CODESIZE SUB DUP1 PUSH2 0xB4B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x105 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98 DUP3 PUSH2 0x6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9 DUP3 PUSH2 0x8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0x9F JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4 DUP2 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0x6B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xA21 PUSH2 0x12A PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0xF0 ADD MSTORE DUP2 DUP2 PUSH2 0x1DB ADD MSTORE PUSH2 0x27C ADD MSTORE PUSH2 0xA21 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xD6 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 CALLER ADDRESS DUP6 PUSH2 0x29E JUMP JUMPDEST PUSH2 0x115 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH32 0x0 DUP5 PUSH2 0x3F0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xFFF9976782D46CC05630D1F6EBAB18B2324D6B14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x77F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x377 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x37C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x3A9 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x3A8 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x3E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DF SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x424 SWAP3 SWAP2 SWAP1 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x4C7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x4F9 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x4F8 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52F SWAP1 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x556 DUP2 PUSH2 0x53F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x56F PUSH0 DUP4 ADD DUP5 PUSH2 0x54D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58B DUP2 PUSH2 0x579 JUMP JUMPDEST DUP2 EQ PUSH2 0x595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A6 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5C0 PUSH2 0x575 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5CE DUP5 DUP3 DUP6 ADD PUSH2 0x598 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E0 DUP2 PUSH2 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x5D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x641 PUSH2 0x63C PUSH2 0x637 DUP5 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x652 DUP3 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x663 DUP3 PUSH2 0x648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x673 DUP2 PUSH2 0x659 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x68C PUSH0 DUP4 ADD DUP5 PUSH2 0x66A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x69C DUP3 PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AC DUP2 PUSH2 0x692 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6BB DUP2 PUSH2 0x53F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6CA DUP2 PUSH2 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6D9 DUP2 PUSH2 0x5FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x6F4 PUSH0 DUP6 ADD DUP3 PUSH2 0x6A3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x707 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6A3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x71A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6B2 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x72D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x6A3 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x740 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x6C1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x753 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x6C1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x766 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x6C1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x779 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x6D0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x793 PUSH0 DUP4 ADD DUP5 PUSH2 0x6DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7A7 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C2 JUMPI PUSH2 0x7C1 PUSH2 0x575 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7CF DUP5 DUP3 DUP6 ADD PUSH2 0x799 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E1 DUP2 PUSH2 0x692 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7FA PUSH0 DUP4 ADD DUP7 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x807 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x814 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x848 DUP3 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x852 DUP2 DUP6 PUSH2 0x826 JUMP JUMPDEST SWAP4 POP PUSH2 0x862 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x830 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x879 DUP3 DUP5 PUSH2 0x83E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x898 DUP2 PUSH2 0x884 JUMP JUMPDEST DUP2 EQ PUSH2 0x8A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8B3 DUP2 PUSH2 0x88F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CD PUSH2 0x575 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8DB DUP5 DUP3 DUP6 ADD PUSH2 0x8A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x928 PUSH1 0x3 DUP4 PUSH2 0x8E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x933 DUP3 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x955 DUP2 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x96F PUSH0 DUP4 ADD DUP6 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x97C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9B7 PUSH1 0x2 DUP4 PUSH2 0x8E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C2 DUP3 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9E4 DUP2 PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x1A7AA0DCF6D3B9E9E964932B451DE059D2145B 0xC8 DUP4 PUSH29 0x65880528D3E172BA4464736F6C63430008190033000000000000000000 ",
							"sourceMap": "201:2153:4:-:0;;;622:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;682:11;669:24;;;;;;;;;;622:78;201:2153;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:389::-;1131:6;1180:2;1168:9;1159:7;1155:23;1151:32;1148:119;;;1186:79;;:::i;:::-;1148:119;1306:1;1331:83;1406:7;1397:6;1386:9;1382:22;1331:83;:::i;:::-;1321:93;;1277:147;1042:389;;;;:::o;201:2153:4:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@poolFee_378": {
									"entryPoint": 175,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_335": {
									"entryPoint": 1008,
									"id": 335,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_243": {
									"entryPoint": 670,
									"id": 243,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@swapExactInputSingle_448": {
									"entryPoint": 181,
									"id": 448,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapRouter_375": {
									"entryPoint": 634,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack": {
									"entryPoint": 1759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2023,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2396,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$191_to_t_address": {
									"entryPoint": 1625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2096,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 2435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86": {
									"entryPoint": 2292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10832:5",
										"nodeType": "YulBlock",
										"src": "0:10832:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:47:5",
													"nodeType": "YulBlock",
													"src": "51:47:5",
													"statements": [
														{
															"nativeSrc": "61:31:5",
															"nodeType": "YulAssignment",
															"src": "61:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:8:5",
																		"nodeType": "YulLiteral",
																		"src": "83:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:5"
																},
																"nativeSrc": "72:20:5",
																"nodeType": "YulFunctionCall",
																"src": "72:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "7:91:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:5",
														"nodeType": "YulTypedName",
														"src": "33:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:5",
														"nodeType": "YulTypedName",
														"src": "43:7:5",
														"type": ""
													}
												],
												"src": "7:91:5"
											},
											{
												"body": {
													"nativeSrc": "167:52:5",
													"nodeType": "YulBlock",
													"src": "167:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "184:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "184:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "206:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "206:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "189:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "189:16:5"
																		},
																		"nativeSrc": "189:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "189:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "177:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:5"
																},
																"nativeSrc": "177:36:5",
																"nodeType": "YulFunctionCall",
																"src": "177:36:5"
															},
															"nativeSrc": "177:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "177:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "104:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "155:5:5",
														"nodeType": "YulTypedName",
														"src": "155:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "162:3:5",
														"nodeType": "YulTypedName",
														"src": "162:3:5",
														"type": ""
													}
												],
												"src": "104:115:5"
											},
											{
												"body": {
													"nativeSrc": "321:122:5",
													"nodeType": "YulBlock",
													"src": "321:122:5",
													"statements": [
														{
															"nativeSrc": "331:26:5",
															"nodeType": "YulAssignment",
															"src": "331:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "343:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "354:2:5",
																		"nodeType": "YulLiteral",
																		"src": "354:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "339:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "339:3:5"
																},
																"nativeSrc": "339:18:5",
																"nodeType": "YulFunctionCall",
																"src": "339:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "331:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "331:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "409:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "409:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "422:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "422:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "433:1:5",
																				"nodeType": "YulLiteral",
																				"src": "433:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "418:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "418:3:5"
																		},
																		"nativeSrc": "418:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "418:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "367:41:5",
																	"nodeType": "YulIdentifier",
																	"src": "367:41:5"
																},
																"nativeSrc": "367:69:5",
																"nodeType": "YulFunctionCall",
																"src": "367:69:5"
															},
															"nativeSrc": "367:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "367:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nativeSrc": "225:218:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "293:9:5",
														"nodeType": "YulTypedName",
														"src": "293:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "305:6:5",
														"nodeType": "YulTypedName",
														"src": "305:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "316:4:5",
														"nodeType": "YulTypedName",
														"src": "316:4:5",
														"type": ""
													}
												],
												"src": "225:218:5"
											},
											{
												"body": {
													"nativeSrc": "489:35:5",
													"nodeType": "YulBlock",
													"src": "489:35:5",
													"statements": [
														{
															"nativeSrc": "499:19:5",
															"nodeType": "YulAssignment",
															"src": "499:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "515:2:5",
																		"nodeType": "YulLiteral",
																		"src": "515:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "509:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:5:5"
																},
																"nativeSrc": "509:9:5",
																"nodeType": "YulFunctionCall",
																"src": "509:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "499:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "499:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "449:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "482:6:5",
														"nodeType": "YulTypedName",
														"src": "482:6:5",
														"type": ""
													}
												],
												"src": "449:75:5"
											},
											{
												"body": {
													"nativeSrc": "619:28:5",
													"nodeType": "YulBlock",
													"src": "619:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "636:1:5",
																		"nodeType": "YulLiteral",
																		"src": "636:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "639:1:5",
																		"nodeType": "YulLiteral",
																		"src": "639:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "629:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "629:6:5"
																},
																"nativeSrc": "629:12:5",
																"nodeType": "YulFunctionCall",
																"src": "629:12:5"
															},
															"nativeSrc": "629:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "629:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "530:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "530:117:5"
											},
											{
												"body": {
													"nativeSrc": "742:28:5",
													"nodeType": "YulBlock",
													"src": "742:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "759:1:5",
																		"nodeType": "YulLiteral",
																		"src": "759:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "762:1:5",
																		"nodeType": "YulLiteral",
																		"src": "762:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "752:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:5"
																},
																"nativeSrc": "752:12:5",
																"nodeType": "YulFunctionCall",
																"src": "752:12:5"
															},
															"nativeSrc": "752:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "752:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "653:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "653:117:5"
											},
											{
												"body": {
													"nativeSrc": "821:32:5",
													"nodeType": "YulBlock",
													"src": "821:32:5",
													"statements": [
														{
															"nativeSrc": "831:16:5",
															"nodeType": "YulAssignment",
															"src": "831:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "842:5:5",
																"nodeType": "YulIdentifier",
																"src": "842:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "831:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "831:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "776:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "803:5:5",
														"nodeType": "YulTypedName",
														"src": "803:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "813:7:5",
														"nodeType": "YulTypedName",
														"src": "813:7:5",
														"type": ""
													}
												],
												"src": "776:77:5"
											},
											{
												"body": {
													"nativeSrc": "902:79:5",
													"nodeType": "YulBlock",
													"src": "902:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "959:16:5",
																"nodeType": "YulBlock",
																"src": "959:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:5",
																					"nodeType": "YulLiteral",
																					"src": "968:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "971:1:5",
																					"nodeType": "YulLiteral",
																					"src": "971:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "961:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:5"
																			},
																			"nativeSrc": "961:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "961:12:5"
																		},
																		"nativeSrc": "961:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "961:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "925:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "925:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "950:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "950:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "932:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "932:17:5"
																				},
																				"nativeSrc": "932:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "932:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "922:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "922:2:5"
																		},
																		"nativeSrc": "922:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "922:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "915:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:5"
																},
																"nativeSrc": "915:43:5",
																"nodeType": "YulFunctionCall",
																"src": "915:43:5"
															},
															"nativeSrc": "912:63:5",
															"nodeType": "YulIf",
															"src": "912:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "859:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "895:5:5",
														"nodeType": "YulTypedName",
														"src": "895:5:5",
														"type": ""
													}
												],
												"src": "859:122:5"
											},
											{
												"body": {
													"nativeSrc": "1039:87:5",
													"nodeType": "YulBlock",
													"src": "1039:87:5",
													"statements": [
														{
															"nativeSrc": "1049:29:5",
															"nodeType": "YulAssignment",
															"src": "1049:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1071:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1071:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1058:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1058:12:5"
																},
																"nativeSrc": "1058:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1058:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1049:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1049:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1114:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1114:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1087:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1087:26:5"
																},
																"nativeSrc": "1087:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1087:33:5"
															},
															"nativeSrc": "1087:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1087:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "987:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1017:6:5",
														"nodeType": "YulTypedName",
														"src": "1017:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1025:3:5",
														"nodeType": "YulTypedName",
														"src": "1025:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1033:5:5",
														"nodeType": "YulTypedName",
														"src": "1033:5:5",
														"type": ""
													}
												],
												"src": "987:139:5"
											},
											{
												"body": {
													"nativeSrc": "1198:263:5",
													"nodeType": "YulBlock",
													"src": "1198:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1244:83:5",
																"nodeType": "YulBlock",
																"src": "1244:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1246:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1246:77:5"
																			},
																			"nativeSrc": "1246:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1246:79:5"
																		},
																		"nativeSrc": "1246:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1246:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1219:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1219:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1228:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1228:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1215:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1215:3:5"
																		},
																		"nativeSrc": "1215:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1215:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1240:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1240:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1211:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1211:3:5"
																},
																"nativeSrc": "1211:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1211:32:5"
															},
															"nativeSrc": "1208:119:5",
															"nodeType": "YulIf",
															"src": "1208:119:5"
														},
														{
															"nativeSrc": "1337:117:5",
															"nodeType": "YulBlock",
															"src": "1337:117:5",
															"statements": [
																{
																	"nativeSrc": "1352:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1352:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1366:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1366:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1356:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1356:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1381:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1381:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1416:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1416:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1427:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1427:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1412:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1412:3:5"
																				},
																				"nativeSrc": "1412:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1412:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1436:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1436:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1391:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1391:20:5"
																		},
																		"nativeSrc": "1391:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1391:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1381:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1381:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1132:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1168:9:5",
														"nodeType": "YulTypedName",
														"src": "1168:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1179:7:5",
														"nodeType": "YulTypedName",
														"src": "1179:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1191:6:5",
														"nodeType": "YulTypedName",
														"src": "1191:6:5",
														"type": ""
													}
												],
												"src": "1132:329:5"
											},
											{
												"body": {
													"nativeSrc": "1532:53:5",
													"nodeType": "YulBlock",
													"src": "1532:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1549:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1549:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1572:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1572:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1554:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1554:17:5"
																		},
																		"nativeSrc": "1554:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1554:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1542:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:5"
																},
																"nativeSrc": "1542:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1542:37:5"
															},
															"nativeSrc": "1542:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1542:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1467:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1520:5:5",
														"nodeType": "YulTypedName",
														"src": "1520:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1527:3:5",
														"nodeType": "YulTypedName",
														"src": "1527:3:5",
														"type": ""
													}
												],
												"src": "1467:118:5"
											},
											{
												"body": {
													"nativeSrc": "1689:124:5",
													"nodeType": "YulBlock",
													"src": "1689:124:5",
													"statements": [
														{
															"nativeSrc": "1699:26:5",
															"nodeType": "YulAssignment",
															"src": "1699:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1711:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1711:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1722:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1722:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1707:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:5"
																},
																"nativeSrc": "1707:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1707:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1699:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1699:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1779:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1779:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1792:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1792:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1803:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1803:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1788:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1788:3:5"
																		},
																		"nativeSrc": "1788:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1788:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1735:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1735:43:5"
																},
																"nativeSrc": "1735:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1735:71:5"
															},
															"nativeSrc": "1735:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1735:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1591:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1661:9:5",
														"nodeType": "YulTypedName",
														"src": "1661:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1673:6:5",
														"nodeType": "YulTypedName",
														"src": "1673:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1684:4:5",
														"nodeType": "YulTypedName",
														"src": "1684:4:5",
														"type": ""
													}
												],
												"src": "1591:222:5"
											},
											{
												"body": {
													"nativeSrc": "1864:81:5",
													"nodeType": "YulBlock",
													"src": "1864:81:5",
													"statements": [
														{
															"nativeSrc": "1874:65:5",
															"nodeType": "YulAssignment",
															"src": "1874:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1889:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1889:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1896:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1896:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1885:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1885:3:5"
																},
																"nativeSrc": "1885:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1885:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1874:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1874:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1819:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1846:5:5",
														"nodeType": "YulTypedName",
														"src": "1846:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1856:7:5",
														"nodeType": "YulTypedName",
														"src": "1856:7:5",
														"type": ""
													}
												],
												"src": "1819:126:5"
											},
											{
												"body": {
													"nativeSrc": "1983:28:5",
													"nodeType": "YulBlock",
													"src": "1983:28:5",
													"statements": [
														{
															"nativeSrc": "1993:12:5",
															"nodeType": "YulAssignment",
															"src": "1993:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2000:5:5",
																"nodeType": "YulIdentifier",
																"src": "2000:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1993:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1993:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1951:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1969:5:5",
														"nodeType": "YulTypedName",
														"src": "1969:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1979:3:5",
														"nodeType": "YulTypedName",
														"src": "1979:3:5",
														"type": ""
													}
												],
												"src": "1951:60:5"
											},
											{
												"body": {
													"nativeSrc": "2077:82:5",
													"nodeType": "YulBlock",
													"src": "2077:82:5",
													"statements": [
														{
															"nativeSrc": "2087:66:5",
															"nodeType": "YulAssignment",
															"src": "2087:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2145:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2145:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2127:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2127:17:5"
																				},
																				"nativeSrc": "2127:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2127:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2118:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "2118:8:5"
																		},
																		"nativeSrc": "2118:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2118:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2100:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2100:17:5"
																},
																"nativeSrc": "2100:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2100:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2087:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2087:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2017:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2057:5:5",
														"nodeType": "YulTypedName",
														"src": "2057:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2067:9:5",
														"nodeType": "YulTypedName",
														"src": "2067:9:5",
														"type": ""
													}
												],
												"src": "2017:142:5"
											},
											{
												"body": {
													"nativeSrc": "2225:66:5",
													"nodeType": "YulBlock",
													"src": "2225:66:5",
													"statements": [
														{
															"nativeSrc": "2235:50:5",
															"nodeType": "YulAssignment",
															"src": "2235:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2279:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2279:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2248:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2248:30:5"
																},
																"nativeSrc": "2248:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2248:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2235:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2235:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2165:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2205:5:5",
														"nodeType": "YulTypedName",
														"src": "2205:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2215:9:5",
														"nodeType": "YulTypedName",
														"src": "2215:9:5",
														"type": ""
													}
												],
												"src": "2165:126:5"
											},
											{
												"body": {
													"nativeSrc": "2376:66:5",
													"nodeType": "YulBlock",
													"src": "2376:66:5",
													"statements": [
														{
															"nativeSrc": "2386:50:5",
															"nodeType": "YulAssignment",
															"src": "2386:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2430:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2399:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2399:30:5"
																},
																"nativeSrc": "2399:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2399:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2386:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2386:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
												"nativeSrc": "2297:145:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2356:5:5",
														"nodeType": "YulTypedName",
														"src": "2356:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2366:9:5",
														"nodeType": "YulTypedName",
														"src": "2366:9:5",
														"type": ""
													}
												],
												"src": "2297:145:5"
											},
											{
												"body": {
													"nativeSrc": "2532:85:5",
													"nodeType": "YulBlock",
													"src": "2532:85:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2549:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2549:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2604:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2604:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
																			"nativeSrc": "2554:49:5",
																			"nodeType": "YulIdentifier",
																			"src": "2554:49:5"
																		},
																		"nativeSrc": "2554:56:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2554:56:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2542:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2542:6:5"
																},
																"nativeSrc": "2542:69:5",
																"nodeType": "YulFunctionCall",
																"src": "2542:69:5"
															},
															"nativeSrc": "2542:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "2542:69:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
												"nativeSrc": "2448:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2520:5:5",
														"nodeType": "YulTypedName",
														"src": "2520:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2527:3:5",
														"nodeType": "YulTypedName",
														"src": "2527:3:5",
														"type": ""
													}
												],
												"src": "2448:169:5"
											},
											{
												"body": {
													"nativeSrc": "2740:143:5",
													"nodeType": "YulBlock",
													"src": "2740:143:5",
													"statements": [
														{
															"nativeSrc": "2750:26:5",
															"nodeType": "YulAssignment",
															"src": "2750:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2762:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2762:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2773:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2773:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2758:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2758:3:5"
																},
																"nativeSrc": "2758:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2758:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2750:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2750:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2849:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2849:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2862:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2862:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2873:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2873:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2858:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2858:3:5"
																		},
																		"nativeSrc": "2858:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
																	"nativeSrc": "2786:62:5",
																	"nodeType": "YulIdentifier",
																	"src": "2786:62:5"
																},
																"nativeSrc": "2786:90:5",
																"nodeType": "YulFunctionCall",
																"src": "2786:90:5"
															},
															"nativeSrc": "2786:90:5",
															"nodeType": "YulExpressionStatement",
															"src": "2786:90:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed",
												"nativeSrc": "2623:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2712:9:5",
														"nodeType": "YulTypedName",
														"src": "2712:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2724:6:5",
														"nodeType": "YulTypedName",
														"src": "2724:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2735:4:5",
														"nodeType": "YulTypedName",
														"src": "2735:4:5",
														"type": ""
													}
												],
												"src": "2623:260:5"
											},
											{
												"body": {
													"nativeSrc": "2934:51:5",
													"nodeType": "YulBlock",
													"src": "2934:51:5",
													"statements": [
														{
															"nativeSrc": "2944:35:5",
															"nodeType": "YulAssignment",
															"src": "2944:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2973:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2973:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2955:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2955:17:5"
																},
																"nativeSrc": "2955:24:5",
																"nodeType": "YulFunctionCall",
																"src": "2955:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2944:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2944:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2889:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2916:5:5",
														"nodeType": "YulTypedName",
														"src": "2916:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2926:7:5",
														"nodeType": "YulTypedName",
														"src": "2926:7:5",
														"type": ""
													}
												],
												"src": "2889:96:5"
											},
											{
												"body": {
													"nativeSrc": "3046:53:5",
													"nodeType": "YulBlock",
													"src": "3046:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3063:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3063:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3086:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3086:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3068:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3068:17:5"
																		},
																		"nativeSrc": "3068:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3068:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3056:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3056:6:5"
																},
																"nativeSrc": "3056:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3056:37:5"
															},
															"nativeSrc": "3056:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3056:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "2991:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3034:5:5",
														"nodeType": "YulTypedName",
														"src": "3034:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3041:3:5",
														"nodeType": "YulTypedName",
														"src": "3041:3:5",
														"type": ""
													}
												],
												"src": "2991:108:5"
											},
											{
												"body": {
													"nativeSrc": "3158:52:5",
													"nodeType": "YulBlock",
													"src": "3158:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3175:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3175:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3197:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3197:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "3180:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "3180:16:5"
																		},
																		"nativeSrc": "3180:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3180:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3168:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:5"
																},
																"nativeSrc": "3168:36:5",
																"nodeType": "YulFunctionCall",
																"src": "3168:36:5"
															},
															"nativeSrc": "3168:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "3168:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "3105:105:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3146:5:5",
														"nodeType": "YulTypedName",
														"src": "3146:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3153:3:5",
														"nodeType": "YulTypedName",
														"src": "3153:3:5",
														"type": ""
													}
												],
												"src": "3105:105:5"
											},
											{
												"body": {
													"nativeSrc": "3271:53:5",
													"nodeType": "YulBlock",
													"src": "3271:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3288:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3288:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3311:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3311:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3293:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3293:17:5"
																		},
																		"nativeSrc": "3293:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3293:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3281:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3281:6:5"
																},
																"nativeSrc": "3281:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3281:37:5"
															},
															"nativeSrc": "3281:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3281:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "3216:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3259:5:5",
														"nodeType": "YulTypedName",
														"src": "3259:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3266:3:5",
														"nodeType": "YulTypedName",
														"src": "3266:3:5",
														"type": ""
													}
												],
												"src": "3216:108:5"
											},
											{
												"body": {
													"nativeSrc": "3385:53:5",
													"nodeType": "YulBlock",
													"src": "3385:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3402:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3402:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3425:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3425:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "3407:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3407:17:5"
																		},
																		"nativeSrc": "3407:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3407:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3395:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:5"
																},
																"nativeSrc": "3395:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3395:37:5"
															},
															"nativeSrc": "3395:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3395:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "3330:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3373:5:5",
														"nodeType": "YulTypedName",
														"src": "3373:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3380:3:5",
														"nodeType": "YulTypedName",
														"src": "3380:3:5",
														"type": ""
													}
												],
												"src": "3330:108:5"
											},
											{
												"body": {
													"nativeSrc": "3682:1479:5",
													"nodeType": "YulBlock",
													"src": "3682:1479:5",
													"statements": [
														{
															"nativeSrc": "3692:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3692:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3708:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3708:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3713:6:5",
																		"nodeType": "YulLiteral",
																		"src": "3713:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3704:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3704:3:5"
																},
																"nativeSrc": "3704:16:5",
																"nodeType": "YulFunctionCall",
																"src": "3704:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "3696:4:5",
																	"nodeType": "YulTypedName",
																	"src": "3696:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3730:167:5",
															"nodeType": "YulBlock",
															"src": "3730:167:5",
															"statements": [
																{
																	"nativeSrc": "3768:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3768:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3798:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3798:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3805:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3805:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3794:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3794:3:5"
																				},
																				"nativeSrc": "3794:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3794:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3788:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3788:5:5"
																		},
																		"nativeSrc": "3788:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3788:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3772:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3772:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3858:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "3858:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3876:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3876:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3881:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3881:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3872:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3872:3:5"
																				},
																				"nativeSrc": "3872:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3872:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "3824:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "3824:33:5"
																		},
																		"nativeSrc": "3824:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3824:63:5"
																	},
																	"nativeSrc": "3824:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "3824:63:5"
																}
															]
														},
														{
															"nativeSrc": "3907:168:5",
															"nodeType": "YulBlock",
															"src": "3907:168:5",
															"statements": [
																{
																	"nativeSrc": "3946:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3946:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3976:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3976:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3983:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3983:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3972:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3972:3:5"
																				},
																				"nativeSrc": "3972:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3972:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3966:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3966:5:5"
																		},
																		"nativeSrc": "3966:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3966:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3950:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3950:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4036:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4036:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4054:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4054:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4059:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4059:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4050:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4050:3:5"
																				},
																				"nativeSrc": "4050:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4050:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4002:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4002:33:5"
																		},
																		"nativeSrc": "4002:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4002:63:5"
																	},
																	"nativeSrc": "4002:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4002:63:5"
																}
															]
														},
														{
															"nativeSrc": "4085:161:5",
															"nodeType": "YulBlock",
															"src": "4085:161:5",
															"statements": [
																{
																	"nativeSrc": "4119:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4119:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4149:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4149:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4156:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4156:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4145:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4145:3:5"
																				},
																				"nativeSrc": "4145:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4145:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4139:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4139:5:5"
																		},
																		"nativeSrc": "4139:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4139:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4123:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4123:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4207:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4207:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4225:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4225:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4230:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4230:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4221:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4221:3:5"
																				},
																				"nativeSrc": "4221:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4221:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "4175:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "4175:31:5"
																		},
																		"nativeSrc": "4175:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4175:61:5"
																	},
																	"nativeSrc": "4175:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4175:61:5"
																}
															]
														},
														{
															"nativeSrc": "4256:169:5",
															"nodeType": "YulBlock",
															"src": "4256:169:5",
															"statements": [
																{
																	"nativeSrc": "4296:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4296:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4326:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4326:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4333:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4333:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4322:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4322:3:5"
																				},
																				"nativeSrc": "4322:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4322:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4316:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4316:5:5"
																		},
																		"nativeSrc": "4316:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4316:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4300:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4300:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4386:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4386:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4404:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4404:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4409:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4409:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4400:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4400:3:5"
																				},
																				"nativeSrc": "4400:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4400:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4352:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4352:33:5"
																		},
																		"nativeSrc": "4352:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4352:63:5"
																	},
																	"nativeSrc": "4352:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4352:63:5"
																}
															]
														},
														{
															"nativeSrc": "4435:168:5",
															"nodeType": "YulBlock",
															"src": "4435:168:5",
															"statements": [
																{
																	"nativeSrc": "4474:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4474:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4504:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4504:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4511:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4511:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4500:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4500:3:5"
																				},
																				"nativeSrc": "4500:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4500:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4494:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4494:5:5"
																		},
																		"nativeSrc": "4494:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4494:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4478:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4478:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4564:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4564:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4582:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4582:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4587:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4587:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4578:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4578:3:5"
																				},
																				"nativeSrc": "4578:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4578:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4530:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4530:33:5"
																		},
																		"nativeSrc": "4530:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4530:63:5"
																	},
																	"nativeSrc": "4530:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4530:63:5"
																}
															]
														},
														{
															"nativeSrc": "4613:168:5",
															"nodeType": "YulBlock",
															"src": "4613:168:5",
															"statements": [
																{
																	"nativeSrc": "4652:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4652:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4682:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4682:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4689:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4689:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4678:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4678:3:5"
																				},
																				"nativeSrc": "4678:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4678:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4672:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4672:5:5"
																		},
																		"nativeSrc": "4672:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4672:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4656:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4656:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4742:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4742:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4760:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4760:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4765:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4765:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4756:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4756:3:5"
																				},
																				"nativeSrc": "4756:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4756:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4708:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4708:33:5"
																		},
																		"nativeSrc": "4708:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4708:63:5"
																	},
																	"nativeSrc": "4708:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4708:63:5"
																}
															]
														},
														{
															"nativeSrc": "4791:176:5",
															"nodeType": "YulBlock",
															"src": "4791:176:5",
															"statements": [
																{
																	"nativeSrc": "4838:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4838:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4868:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4868:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4875:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4875:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4864:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4864:3:5"
																				},
																				"nativeSrc": "4864:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4864:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4858:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4858:5:5"
																		},
																		"nativeSrc": "4858:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4858:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4842:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4842:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4928:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4928:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4946:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4946:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4951:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4951:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4942:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4942:3:5"
																				},
																				"nativeSrc": "4942:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4942:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4894:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4894:33:5"
																		},
																		"nativeSrc": "4894:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4894:63:5"
																	},
																	"nativeSrc": "4894:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4894:63:5"
																}
															]
														},
														{
															"nativeSrc": "4977:177:5",
															"nodeType": "YulBlock",
															"src": "4977:177:5",
															"statements": [
																{
																	"nativeSrc": "5025:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5025:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5055:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5055:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5062:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5062:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5051:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5051:3:5"
																				},
																				"nativeSrc": "5051:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5051:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5045:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5045:5:5"
																		},
																		"nativeSrc": "5045:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5045:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5029:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5029:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5115:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5115:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5133:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5133:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5138:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5138:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5129:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5129:3:5"
																				},
																				"nativeSrc": "5129:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5129:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "5081:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5081:33:5"
																		},
																		"nativeSrc": "5081:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5081:63:5"
																	},
																	"nativeSrc": "5081:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5081:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
												"nativeSrc": "3538:1623:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3669:5:5",
														"nodeType": "YulTypedName",
														"src": "3669:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3676:3:5",
														"nodeType": "YulTypedName",
														"src": "3676:3:5",
														"type": ""
													}
												],
												"src": "3538:1623:5"
											},
											{
												"body": {
													"nativeSrc": "5343:203:5",
													"nodeType": "YulBlock",
													"src": "5343:203:5",
													"statements": [
														{
															"nativeSrc": "5353:27:5",
															"nodeType": "YulAssignment",
															"src": "5353:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5365:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5365:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5376:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5376:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5361:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5361:3:5"
																},
																"nativeSrc": "5361:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5361:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5353:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5353:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5512:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5512:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5536:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5536:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5521:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5521:3:5"
																		},
																		"nativeSrc": "5521:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5521:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
																	"nativeSrc": "5390:121:5",
																	"nodeType": "YulIdentifier",
																	"src": "5390:121:5"
																},
																"nativeSrc": "5390:149:5",
																"nodeType": "YulFunctionCall",
																"src": "5390:149:5"
															},
															"nativeSrc": "5390:149:5",
															"nodeType": "YulExpressionStatement",
															"src": "5390:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
												"nativeSrc": "5167:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5315:9:5",
														"nodeType": "YulTypedName",
														"src": "5315:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5327:6:5",
														"nodeType": "YulTypedName",
														"src": "5327:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5338:4:5",
														"nodeType": "YulTypedName",
														"src": "5338:4:5",
														"type": ""
													}
												],
												"src": "5167:379:5"
											},
											{
												"body": {
													"nativeSrc": "5615:80:5",
													"nodeType": "YulBlock",
													"src": "5615:80:5",
													"statements": [
														{
															"nativeSrc": "5625:22:5",
															"nodeType": "YulAssignment",
															"src": "5625:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5640:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5640:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5634:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5634:5:5"
																},
																"nativeSrc": "5634:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5634:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5625:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5625:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5683:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5683:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5656:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "5656:26:5"
																},
																"nativeSrc": "5656:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5656:33:5"
															},
															"nativeSrc": "5656:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5656:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5552:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5593:6:5",
														"nodeType": "YulTypedName",
														"src": "5593:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5601:3:5",
														"nodeType": "YulTypedName",
														"src": "5601:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5609:5:5",
														"nodeType": "YulTypedName",
														"src": "5609:5:5",
														"type": ""
													}
												],
												"src": "5552:143:5"
											},
											{
												"body": {
													"nativeSrc": "5778:274:5",
													"nodeType": "YulBlock",
													"src": "5778:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5824:83:5",
																"nodeType": "YulBlock",
																"src": "5824:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5826:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5826:77:5"
																			},
																			"nativeSrc": "5826:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5826:79:5"
																		},
																		"nativeSrc": "5826:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5826:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5799:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5799:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5808:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5808:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5795:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5795:3:5"
																		},
																		"nativeSrc": "5795:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5820:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5820:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5791:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5791:3:5"
																},
																"nativeSrc": "5791:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5791:32:5"
															},
															"nativeSrc": "5788:119:5",
															"nodeType": "YulIf",
															"src": "5788:119:5"
														},
														{
															"nativeSrc": "5917:128:5",
															"nodeType": "YulBlock",
															"src": "5917:128:5",
															"statements": [
																{
																	"nativeSrc": "5932:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5932:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5946:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5946:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5936:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5936:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5961:74:5",
																	"nodeType": "YulAssignment",
																	"src": "5961:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6007:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "6007:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6018:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "6018:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6003:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6003:3:5"
																				},
																				"nativeSrc": "6003:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6003:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6027:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6027:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5971:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "5971:31:5"
																		},
																		"nativeSrc": "5971:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5971:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5961:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5961:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5701:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5748:9:5",
														"nodeType": "YulTypedName",
														"src": "5748:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5759:7:5",
														"nodeType": "YulTypedName",
														"src": "5759:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5771:6:5",
														"nodeType": "YulTypedName",
														"src": "5771:6:5",
														"type": ""
													}
												],
												"src": "5701:351:5"
											},
											{
												"body": {
													"nativeSrc": "6123:53:5",
													"nodeType": "YulBlock",
													"src": "6123:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6140:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6140:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6163:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6163:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6145:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "6145:17:5"
																		},
																		"nativeSrc": "6145:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6145:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6133:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6133:6:5"
																},
																"nativeSrc": "6133:37:5",
																"nodeType": "YulFunctionCall",
																"src": "6133:37:5"
															},
															"nativeSrc": "6133:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "6133:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6058:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6111:5:5",
														"nodeType": "YulTypedName",
														"src": "6111:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6118:3:5",
														"nodeType": "YulTypedName",
														"src": "6118:3:5",
														"type": ""
													}
												],
												"src": "6058:118:5"
											},
											{
												"body": {
													"nativeSrc": "6336:288:5",
													"nodeType": "YulBlock",
													"src": "6336:288:5",
													"statements": [
														{
															"nativeSrc": "6346:26:5",
															"nodeType": "YulAssignment",
															"src": "6346:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6358:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6358:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6369:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6369:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6354:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6354:3:5"
																},
																"nativeSrc": "6354:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6354:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6346:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6346:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6426:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6426:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6439:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6439:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6450:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6450:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6435:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6435:3:5"
																		},
																		"nativeSrc": "6435:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6435:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6382:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6382:43:5"
																},
																"nativeSrc": "6382:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6382:71:5"
															},
															"nativeSrc": "6382:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6382:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6507:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6507:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6520:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6520:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6531:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6531:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6516:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6516:3:5"
																		},
																		"nativeSrc": "6516:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6463:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6463:43:5"
																},
																"nativeSrc": "6463:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6463:72:5"
															},
															"nativeSrc": "6463:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6463:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6589:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6589:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6602:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6602:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6613:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6613:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6598:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6598:3:5"
																		},
																		"nativeSrc": "6598:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6598:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6545:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6545:43:5"
																},
																"nativeSrc": "6545:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6545:72:5"
															},
															"nativeSrc": "6545:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6545:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6182:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6292:9:5",
														"nodeType": "YulTypedName",
														"src": "6292:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6304:6:5",
														"nodeType": "YulTypedName",
														"src": "6304:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6312:6:5",
														"nodeType": "YulTypedName",
														"src": "6312:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6320:6:5",
														"nodeType": "YulTypedName",
														"src": "6320:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6331:4:5",
														"nodeType": "YulTypedName",
														"src": "6331:4:5",
														"type": ""
													}
												],
												"src": "6182:442:5"
											},
											{
												"body": {
													"nativeSrc": "6688:40:5",
													"nodeType": "YulBlock",
													"src": "6688:40:5",
													"statements": [
														{
															"nativeSrc": "6699:22:5",
															"nodeType": "YulAssignment",
															"src": "6699:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6715:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6715:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6709:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6709:5:5"
																},
																"nativeSrc": "6709:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6709:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6699:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6699:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "6630:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6671:5:5",
														"nodeType": "YulTypedName",
														"src": "6671:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6681:6:5",
														"nodeType": "YulTypedName",
														"src": "6681:6:5",
														"type": ""
													}
												],
												"src": "6630:98:5"
											},
											{
												"body": {
													"nativeSrc": "6847:34:5",
													"nodeType": "YulBlock",
													"src": "6847:34:5",
													"statements": [
														{
															"nativeSrc": "6857:18:5",
															"nodeType": "YulAssignment",
															"src": "6857:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "6872:3:5",
																"nodeType": "YulIdentifier",
																"src": "6872:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6857:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "6857:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6734:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6819:3:5",
														"nodeType": "YulTypedName",
														"src": "6819:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6824:6:5",
														"nodeType": "YulTypedName",
														"src": "6824:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6835:11:5",
														"nodeType": "YulTypedName",
														"src": "6835:11:5",
														"type": ""
													}
												],
												"src": "6734:147:5"
											},
											{
												"body": {
													"nativeSrc": "6949:77:5",
													"nodeType": "YulBlock",
													"src": "6949:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6966:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6966:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6971:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6971:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6976:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6976:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6960:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6960:5:5"
																},
																"nativeSrc": "6960:23:5",
																"nodeType": "YulFunctionCall",
																"src": "6960:23:5"
															},
															"nativeSrc": "6960:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "6960:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7003:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "7003:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7008:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7008:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6999:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6999:3:5"
																		},
																		"nativeSrc": "6999:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6999:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7017:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7017:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6992:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6992:6:5"
																},
																"nativeSrc": "6992:27:5",
																"nodeType": "YulFunctionCall",
																"src": "6992:27:5"
															},
															"nativeSrc": "6992:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "6992:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6887:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6931:3:5",
														"nodeType": "YulTypedName",
														"src": "6931:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6936:3:5",
														"nodeType": "YulTypedName",
														"src": "6936:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6941:6:5",
														"nodeType": "YulTypedName",
														"src": "6941:6:5",
														"type": ""
													}
												],
												"src": "6887:139:5"
											},
											{
												"body": {
													"nativeSrc": "7140:278:5",
													"nodeType": "YulBlock",
													"src": "7140:278:5",
													"statements": [
														{
															"nativeSrc": "7150:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7150:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7196:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7196:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "7164:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "7164:31:5"
																},
																"nativeSrc": "7164:38:5",
																"nodeType": "YulFunctionCall",
																"src": "7164:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7154:6:5",
																	"nodeType": "YulTypedName",
																	"src": "7154:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7211:95:5",
															"nodeType": "YulAssignment",
															"src": "7211:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7294:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7294:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7299:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7299:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7218:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "7218:75:5"
																},
																"nativeSrc": "7218:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7218:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7211:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7211:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7354:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7354:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7361:4:5",
																				"nodeType": "YulLiteral",
																				"src": "7361:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7350:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7350:3:5"
																		},
																		"nativeSrc": "7350:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7350:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7368:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7368:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7373:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7373:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7315:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "7315:34:5"
																},
																"nativeSrc": "7315:65:5",
																"nodeType": "YulFunctionCall",
																"src": "7315:65:5"
															},
															"nativeSrc": "7315:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "7315:65:5"
														},
														{
															"nativeSrc": "7389:23:5",
															"nodeType": "YulAssignment",
															"src": "7389:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7400:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7400:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7405:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7405:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7396:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:5"
																},
																"nativeSrc": "7396:16:5",
																"nodeType": "YulFunctionCall",
																"src": "7396:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7389:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7389:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7032:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7121:5:5",
														"nodeType": "YulTypedName",
														"src": "7121:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7128:3:5",
														"nodeType": "YulTypedName",
														"src": "7128:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7136:3:5",
														"nodeType": "YulTypedName",
														"src": "7136:3:5",
														"type": ""
													}
												],
												"src": "7032:386:5"
											},
											{
												"body": {
													"nativeSrc": "7558:137:5",
													"nodeType": "YulBlock",
													"src": "7558:137:5",
													"statements": [
														{
															"nativeSrc": "7569:100:5",
															"nodeType": "YulAssignment",
															"src": "7569:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7656:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7656:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7665:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7665:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7576:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "7576:79:5"
																},
																"nativeSrc": "7576:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7576:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7569:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7569:3:5"
																}
															]
														},
														{
															"nativeSrc": "7679:10:5",
															"nodeType": "YulAssignment",
															"src": "7679:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "7686:3:5",
																"nodeType": "YulIdentifier",
																"src": "7686:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7679:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7679:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7424:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7537:3:5",
														"nodeType": "YulTypedName",
														"src": "7537:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7543:6:5",
														"nodeType": "YulTypedName",
														"src": "7543:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7554:3:5",
														"nodeType": "YulTypedName",
														"src": "7554:3:5",
														"type": ""
													}
												],
												"src": "7424:271:5"
											},
											{
												"body": {
													"nativeSrc": "7743:48:5",
													"nodeType": "YulBlock",
													"src": "7743:48:5",
													"statements": [
														{
															"nativeSrc": "7753:32:5",
															"nodeType": "YulAssignment",
															"src": "7753:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7778:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7778:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7771:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7771:6:5"
																		},
																		"nativeSrc": "7771:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7771:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7764:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7764:6:5"
																},
																"nativeSrc": "7764:21:5",
																"nodeType": "YulFunctionCall",
																"src": "7764:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7753:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "7753:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7701:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7725:5:5",
														"nodeType": "YulTypedName",
														"src": "7725:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7735:7:5",
														"nodeType": "YulTypedName",
														"src": "7735:7:5",
														"type": ""
													}
												],
												"src": "7701:90:5"
											},
											{
												"body": {
													"nativeSrc": "7837:76:5",
													"nodeType": "YulBlock",
													"src": "7837:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7891:16:5",
																"nodeType": "YulBlock",
																"src": "7891:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7900:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7900:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7903:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7903:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7893:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7893:6:5"
																			},
																			"nativeSrc": "7893:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7893:12:5"
																		},
																		"nativeSrc": "7893:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7893:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7860:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7860:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7882:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7882:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7867:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "7867:14:5"
																				},
																				"nativeSrc": "7867:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7867:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7857:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "7857:2:5"
																		},
																		"nativeSrc": "7857:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7857:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7850:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7850:6:5"
																},
																"nativeSrc": "7850:40:5",
																"nodeType": "YulFunctionCall",
																"src": "7850:40:5"
															},
															"nativeSrc": "7847:60:5",
															"nodeType": "YulIf",
															"src": "7847:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7797:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7830:5:5",
														"nodeType": "YulTypedName",
														"src": "7830:5:5",
														"type": ""
													}
												],
												"src": "7797:116:5"
											},
											{
												"body": {
													"nativeSrc": "7979:77:5",
													"nodeType": "YulBlock",
													"src": "7979:77:5",
													"statements": [
														{
															"nativeSrc": "7989:22:5",
															"nodeType": "YulAssignment",
															"src": "7989:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8004:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8004:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7998:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7998:5:5"
																},
																"nativeSrc": "7998:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7998:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7989:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7989:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8044:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8044:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8020:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "8020:23:5"
																},
																"nativeSrc": "8020:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8020:30:5"
															},
															"nativeSrc": "8020:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "8020:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7919:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7957:6:5",
														"nodeType": "YulTypedName",
														"src": "7957:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7965:3:5",
														"nodeType": "YulTypedName",
														"src": "7965:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7973:5:5",
														"nodeType": "YulTypedName",
														"src": "7973:5:5",
														"type": ""
													}
												],
												"src": "7919:137:5"
											},
											{
												"body": {
													"nativeSrc": "8136:271:5",
													"nodeType": "YulBlock",
													"src": "8136:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8182:83:5",
																"nodeType": "YulBlock",
																"src": "8182:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8184:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8184:77:5"
																			},
																			"nativeSrc": "8184:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8184:79:5"
																		},
																		"nativeSrc": "8184:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8184:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8157:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8157:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8166:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8166:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8153:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8153:3:5"
																		},
																		"nativeSrc": "8153:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8153:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8178:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8178:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8149:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8149:3:5"
																},
																"nativeSrc": "8149:32:5",
																"nodeType": "YulFunctionCall",
																"src": "8149:32:5"
															},
															"nativeSrc": "8146:119:5",
															"nodeType": "YulIf",
															"src": "8146:119:5"
														},
														{
															"nativeSrc": "8275:125:5",
															"nodeType": "YulBlock",
															"src": "8275:125:5",
															"statements": [
																{
																	"nativeSrc": "8290:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8290:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8304:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8304:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8294:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8294:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8319:71:5",
																	"nodeType": "YulAssignment",
																	"src": "8319:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8362:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8362:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8373:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8373:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8358:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8358:3:5"
																				},
																				"nativeSrc": "8358:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8358:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8382:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8382:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8329:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "8329:28:5"
																		},
																		"nativeSrc": "8329:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8329:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8319:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8319:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8062:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8106:9:5",
														"nodeType": "YulTypedName",
														"src": "8106:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8117:7:5",
														"nodeType": "YulTypedName",
														"src": "8117:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8129:6:5",
														"nodeType": "YulTypedName",
														"src": "8129:6:5",
														"type": ""
													}
												],
												"src": "8062:345:5"
											},
											{
												"body": {
													"nativeSrc": "8509:73:5",
													"nodeType": "YulBlock",
													"src": "8509:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8526:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8526:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8531:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8531:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8519:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8519:6:5"
																},
																"nativeSrc": "8519:19:5",
																"nodeType": "YulFunctionCall",
																"src": "8519:19:5"
															},
															"nativeSrc": "8519:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "8519:19:5"
														},
														{
															"nativeSrc": "8547:29:5",
															"nodeType": "YulAssignment",
															"src": "8547:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8566:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8566:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8571:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8571:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8562:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8562:3:5"
																},
																"nativeSrc": "8562:14:5",
																"nodeType": "YulFunctionCall",
																"src": "8562:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8547:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8547:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8413:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8481:3:5",
														"nodeType": "YulTypedName",
														"src": "8481:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8486:6:5",
														"nodeType": "YulTypedName",
														"src": "8486:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8497:11:5",
														"nodeType": "YulTypedName",
														"src": "8497:11:5",
														"type": ""
													}
												],
												"src": "8413:169:5"
											},
											{
												"body": {
													"nativeSrc": "8694:47:5",
													"nodeType": "YulBlock",
													"src": "8694:47:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8716:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8716:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8724:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8724:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8712:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8712:3:5"
																		},
																		"nativeSrc": "8712:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8712:14:5"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nativeSrc": "8728:5:5",
																		"nodeType": "YulLiteral",
																		"src": "8728:5:5",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8705:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8705:6:5"
																},
																"nativeSrc": "8705:29:5",
																"nodeType": "YulFunctionCall",
																"src": "8705:29:5"
															},
															"nativeSrc": "8705:29:5",
															"nodeType": "YulExpressionStatement",
															"src": "8705:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
												"nativeSrc": "8588:153:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8686:6:5",
														"nodeType": "YulTypedName",
														"src": "8686:6:5",
														"type": ""
													}
												],
												"src": "8588:153:5"
											},
											{
												"body": {
													"nativeSrc": "8893:219:5",
													"nodeType": "YulBlock",
													"src": "8893:219:5",
													"statements": [
														{
															"nativeSrc": "8903:73:5",
															"nodeType": "YulAssignment",
															"src": "8903:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8969:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8969:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8974:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8974:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8910:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:58:5"
																},
																"nativeSrc": "8910:66:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8903:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8903:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9074:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9074:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																	"nativeSrc": "8985:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8985:88:5"
																},
																"nativeSrc": "8985:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8985:93:5"
															},
															"nativeSrc": "8985:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8985:93:5"
														},
														{
															"nativeSrc": "9087:19:5",
															"nodeType": "YulAssignment",
															"src": "9087:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9098:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9098:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9103:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9103:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9094:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9094:3:5"
																},
																"nativeSrc": "9094:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9094:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9087:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9087:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8747:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8881:3:5",
														"nodeType": "YulTypedName",
														"src": "8881:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8889:3:5",
														"nodeType": "YulTypedName",
														"src": "8889:3:5",
														"type": ""
													}
												],
												"src": "8747:365:5"
											},
											{
												"body": {
													"nativeSrc": "9289:248:5",
													"nodeType": "YulBlock",
													"src": "9289:248:5",
													"statements": [
														{
															"nativeSrc": "9299:26:5",
															"nodeType": "YulAssignment",
															"src": "9299:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9311:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9311:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9322:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9322:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9307:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9307:3:5"
																},
																"nativeSrc": "9307:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9307:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9299:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9299:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9346:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9346:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9357:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9357:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9342:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9342:3:5"
																		},
																		"nativeSrc": "9342:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9342:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9365:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9365:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9371:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9371:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9361:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9361:3:5"
																		},
																		"nativeSrc": "9361:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9361:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9335:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9335:6:5"
																},
																"nativeSrc": "9335:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9335:47:5"
															},
															"nativeSrc": "9335:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9335:47:5"
														},
														{
															"nativeSrc": "9391:139:5",
															"nodeType": "YulAssignment",
															"src": "9391:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9525:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9525:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9399:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9399:124:5"
																},
																"nativeSrc": "9399:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9399:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9391:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9391:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9118:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9269:9:5",
														"nodeType": "YulTypedName",
														"src": "9269:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9284:4:5",
														"nodeType": "YulTypedName",
														"src": "9284:4:5",
														"type": ""
													}
												],
												"src": "9118:419:5"
											},
											{
												"body": {
													"nativeSrc": "9669:206:5",
													"nodeType": "YulBlock",
													"src": "9669:206:5",
													"statements": [
														{
															"nativeSrc": "9679:26:5",
															"nodeType": "YulAssignment",
															"src": "9679:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9691:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9691:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9702:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9702:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9687:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9687:3:5"
																},
																"nativeSrc": "9687:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9687:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9679:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9679:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9759:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9759:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9772:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9772:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9783:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9783:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9768:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9768:3:5"
																		},
																		"nativeSrc": "9768:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9715:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9715:43:5"
																},
																"nativeSrc": "9715:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9715:71:5"
															},
															"nativeSrc": "9715:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9715:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9840:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9840:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9853:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9853:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9864:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9864:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9849:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9849:3:5"
																		},
																		"nativeSrc": "9849:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9849:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9796:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9796:43:5"
																},
																"nativeSrc": "9796:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9796:72:5"
															},
															"nativeSrc": "9796:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9796:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9543:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9633:9:5",
														"nodeType": "YulTypedName",
														"src": "9633:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9645:6:5",
														"nodeType": "YulTypedName",
														"src": "9645:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9653:6:5",
														"nodeType": "YulTypedName",
														"src": "9653:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9664:4:5",
														"nodeType": "YulTypedName",
														"src": "9664:4:5",
														"type": ""
													}
												],
												"src": "9543:332:5"
											},
											{
												"body": {
													"nativeSrc": "9987:46:5",
													"nodeType": "YulBlock",
													"src": "9987:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10009:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10009:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10017:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10017:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10005:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10005:3:5"
																		},
																		"nativeSrc": "10005:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10005:14:5"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nativeSrc": "10021:4:5",
																		"nodeType": "YulLiteral",
																		"src": "10021:4:5",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9998:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9998:6:5"
																},
																"nativeSrc": "9998:28:5",
																"nodeType": "YulFunctionCall",
																"src": "9998:28:5"
															},
															"nativeSrc": "9998:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "9998:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nativeSrc": "9881:152:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9979:6:5",
														"nodeType": "YulTypedName",
														"src": "9979:6:5",
														"type": ""
													}
												],
												"src": "9881:152:5"
											},
											{
												"body": {
													"nativeSrc": "10185:219:5",
													"nodeType": "YulBlock",
													"src": "10185:219:5",
													"statements": [
														{
															"nativeSrc": "10195:73:5",
															"nodeType": "YulAssignment",
															"src": "10195:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10261:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10261:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10266:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10266:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10202:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10202:58:5"
																},
																"nativeSrc": "10202:66:5",
																"nodeType": "YulFunctionCall",
																"src": "10202:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10195:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10195:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10366:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10366:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nativeSrc": "10277:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10277:88:5"
																},
																"nativeSrc": "10277:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10277:93:5"
															},
															"nativeSrc": "10277:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10277:93:5"
														},
														{
															"nativeSrc": "10379:19:5",
															"nodeType": "YulAssignment",
															"src": "10379:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10390:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10390:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10395:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10395:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10386:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10386:3:5"
																},
																"nativeSrc": "10386:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10386:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10379:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10379:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10039:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10173:3:5",
														"nodeType": "YulTypedName",
														"src": "10173:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10181:3:5",
														"nodeType": "YulTypedName",
														"src": "10181:3:5",
														"type": ""
													}
												],
												"src": "10039:365:5"
											},
											{
												"body": {
													"nativeSrc": "10581:248:5",
													"nodeType": "YulBlock",
													"src": "10581:248:5",
													"statements": [
														{
															"nativeSrc": "10591:26:5",
															"nodeType": "YulAssignment",
															"src": "10591:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10603:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10603:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10614:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10614:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10599:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10599:3:5"
																},
																"nativeSrc": "10599:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10599:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10591:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10591:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10638:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10638:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10649:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10649:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10634:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10634:3:5"
																		},
																		"nativeSrc": "10634:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10634:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10657:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10657:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10663:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10663:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10653:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10653:3:5"
																		},
																		"nativeSrc": "10653:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10653:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10627:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10627:6:5"
																},
																"nativeSrc": "10627:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10627:47:5"
															},
															"nativeSrc": "10627:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10627:47:5"
														},
														{
															"nativeSrc": "10683:139:5",
															"nodeType": "YulAssignment",
															"src": "10683:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10817:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10817:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10691:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10691:124:5"
																},
																"nativeSrc": "10691:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10691:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10683:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10683:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10410:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10561:9:5",
														"nodeType": "YulTypedName",
														"src": "10561:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10576:4:5",
														"nodeType": "YulTypedName",
														"src": "10576:4:5",
														"type": ""
													}
												],
												"src": "10410:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$191_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$191_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"STF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"375": [
									{
										"length": 32,
										"start": 240
									},
									{
										"length": 32,
										"start": 475
									},
									{
										"length": 32,
										"start": 636
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063089fe6aa1461004357806373bd43ad14610061578063c31c9c0714610091575b5f80fd5b61004b6100af565b604051610058919061055c565b60405180910390f35b61007b600480360381019061007691906105ac565b6100b5565b60405161008891906105e6565b60405180910390f35b61009961027a565b6040516100a69190610679565b60405180910390f35b610bb881565b5f6100d6731c7d4b196cb0c7b01d743fbc6116a902379c723833308561029e565b610115731c7d4b196cb0c7b01d743fbc6116a902379c72387f0000000000000000000000000000000000000000000000000000000000000000846103f0565b5f604051806101000160405280731c7d4b196cb0c7b01d743fbc6116a902379c723873ffffffffffffffffffffffffffffffffffffffff16815260200173fff9976782d46cc05630d1f6ebab18b2324d6b1473ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b8152600401610232919061077f565b6020604051808303815f875af115801561024e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027291906107ad565b915050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b8686866040516024016102d4939291906107e7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161033e919061086e565b5f604051808303815f865af19150503d805f8114610377576040519150601f19603f3d011682016040523d82523d5f602084013e61037c565b606091505b50915091508180156103a957505f815114806103a85750808060200190518101906103a791906108b9565b5b5b6103e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103df9061093e565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b858560405160240161042492919061095c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161048e919061086e565b5f604051808303815f865af19150503d805f81146104c7576040519150601f19603f3d011682016040523d82523d5f602084013e6104cc565b606091505b50915091508180156104f957505f815114806104f85750808060200190518101906104f791906108b9565b5b5b610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f906109cd565b60405180910390fd5b5050505050565b5f62ffffff82169050919050565b6105568161053f565b82525050565b5f60208201905061056f5f83018461054d565b92915050565b5f80fd5b5f819050919050565b61058b81610579565b8114610595575f80fd5b50565b5f813590506105a681610582565b92915050565b5f602082840312156105c1576105c0610575565b5b5f6105ce84828501610598565b91505092915050565b6105e081610579565b82525050565b5f6020820190506105f95f8301846105d7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61064161063c610637846105ff565b61061e565b6105ff565b9050919050565b5f61065282610627565b9050919050565b5f61066382610648565b9050919050565b61067381610659565b82525050565b5f60208201905061068c5f83018461066a565b92915050565b5f61069c826105ff565b9050919050565b6106ac81610692565b82525050565b6106bb8161053f565b82525050565b6106ca81610579565b82525050565b6106d9816105ff565b82525050565b61010082015f8201516106f45f8501826106a3565b50602082015161070760208501826106a3565b50604082015161071a60408501826106b2565b50606082015161072d60608501826106a3565b50608082015161074060808501826106c1565b5060a082015161075360a08501826106c1565b5060c082015161076660c08501826106c1565b5060e082015161077960e08501826106d0565b50505050565b5f610100820190506107935f8301846106df565b92915050565b5f815190506107a781610582565b92915050565b5f602082840312156107c2576107c1610575565b5b5f6107cf84828501610799565b91505092915050565b6107e181610692565b82525050565b5f6060820190506107fa5f8301866107d8565b61080760208301856107d8565b61081460408301846105d7565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6108488261081c565b6108528185610826565b9350610862818560208601610830565b80840191505092915050565b5f610879828461083e565b915081905092915050565b5f8115159050919050565b61089881610884565b81146108a2575f80fd5b50565b5f815190506108b38161088f565b92915050565b5f602082840312156108ce576108cd610575565b5b5f6108db848285016108a5565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f6109286003836108e4565b9150610933826108f4565b602082019050919050565b5f6020820190508181035f8301526109558161091c565b9050919050565b5f60408201905061096f5f8301856107d8565b61097c60208301846105d7565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f6109b76002836108e4565b91506109c282610983565b602082019050919050565b5f6020820190508181035f8301526109e4816109ab565b905091905056fea2646970667358221220721a7aa0dcf6d3b9e9e964932b451de059d2145bc8837c65880528d3e172ba4464736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xD6 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 CALLER ADDRESS DUP6 PUSH2 0x29E JUMP JUMPDEST PUSH2 0x115 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH32 0x0 DUP5 PUSH2 0x3F0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xFFF9976782D46CC05630D1F6EBAB18B2324D6B14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x77F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x377 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x37C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x3A9 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x3A8 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x3E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DF SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x424 SWAP3 SWAP2 SWAP1 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x4C7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x4F9 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x4F8 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52F SWAP1 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x556 DUP2 PUSH2 0x53F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x56F PUSH0 DUP4 ADD DUP5 PUSH2 0x54D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58B DUP2 PUSH2 0x579 JUMP JUMPDEST DUP2 EQ PUSH2 0x595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A6 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5C0 PUSH2 0x575 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5CE DUP5 DUP3 DUP6 ADD PUSH2 0x598 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E0 DUP2 PUSH2 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x5D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x641 PUSH2 0x63C PUSH2 0x637 DUP5 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x652 DUP3 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x663 DUP3 PUSH2 0x648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x673 DUP2 PUSH2 0x659 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x68C PUSH0 DUP4 ADD DUP5 PUSH2 0x66A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x69C DUP3 PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AC DUP2 PUSH2 0x692 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6BB DUP2 PUSH2 0x53F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6CA DUP2 PUSH2 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6D9 DUP2 PUSH2 0x5FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x6F4 PUSH0 DUP6 ADD DUP3 PUSH2 0x6A3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x707 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6A3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x71A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6B2 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x72D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x6A3 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x740 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x6C1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x753 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x6C1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x766 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x6C1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x779 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x6D0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x793 PUSH0 DUP4 ADD DUP5 PUSH2 0x6DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7A7 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C2 JUMPI PUSH2 0x7C1 PUSH2 0x575 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7CF DUP5 DUP3 DUP6 ADD PUSH2 0x799 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E1 DUP2 PUSH2 0x692 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7FA PUSH0 DUP4 ADD DUP7 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x807 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x814 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x848 DUP3 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x852 DUP2 DUP6 PUSH2 0x826 JUMP JUMPDEST SWAP4 POP PUSH2 0x862 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x830 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x879 DUP3 DUP5 PUSH2 0x83E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x898 DUP2 PUSH2 0x884 JUMP JUMPDEST DUP2 EQ PUSH2 0x8A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8B3 DUP2 PUSH2 0x88F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CD PUSH2 0x575 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8DB DUP5 DUP3 DUP6 ADD PUSH2 0x8A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x928 PUSH1 0x3 DUP4 PUSH2 0x8E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x933 DUP3 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x955 DUP2 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x96F PUSH0 DUP4 ADD DUP6 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x97C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9B7 PUSH1 0x2 DUP4 PUSH2 0x8E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C2 DUP3 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9E4 DUP2 PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x1A7AA0DCF6D3B9E9E964932B451DE059D2145B 0xC8 DUP4 PUSH29 0x65880528D3E172BA4464736F6C63430008190033000000000000000000 ",
							"sourceMap": "201:2153:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;498:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1174:1176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;394:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;498:37;531:4;498:37;:::o;1174:1176::-;1240:17;1385:74;344:42;1423:10;1443:4;1450:8;1385:31;:74::i;:::-;1514:63;344:42;1555:10;1568:8;1514:26;:63::i;:::-;1825:48;1888:336;;;;;;;;344:42;1888:336;;;;;;272:42;1888:336;;;;;;531:4;1888:336;;;;;;2045:10;1888:336;;;;;;2083:15;1888:336;;;;2126:8;1888:336;;;;2170:1;1888:336;;;;2208:1;1888:336;;;;;1825:399;;2308:10;:27;;;2336:6;2308:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2296:47;;1259:1091;1174:1176;;;:::o;394:39::-;;;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;859:44;847:57;839:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:229;;561:358;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;7:91:5:-;43:7;83:8;76:5;72:20;61:31;;7:91;;;:::o;104:115::-;189:23;206:5;189:23;:::i;:::-;184:3;177:36;104:115;;:::o;225:218::-;316:4;354:2;343:9;339:18;331:26;;367:69;433:1;422:9;418:17;409:6;367:69;:::i;:::-;225:218;;;;:::o;530:117::-;639:1;636;629:12;776:77;813:7;842:5;831:16;;776:77;;;:::o;859:122::-;932:24;950:5;932:24;:::i;:::-;925:5;922:35;912:63;;971:1;968;961:12;912:63;859:122;:::o;987:139::-;1033:5;1071:6;1058:20;1049:29;;1087:33;1114:5;1087:33;:::i;:::-;987:139;;;;:::o;1132:329::-;1191:6;1240:2;1228:9;1219:7;1215:23;1211:32;1208:119;;;1246:79;;:::i;:::-;1208:119;1366:1;1391:53;1436:7;1427:6;1416:9;1412:22;1391:53;:::i;:::-;1381:63;;1337:117;1132:329;;;;:::o;1467:118::-;1554:24;1572:5;1554:24;:::i;:::-;1549:3;1542:37;1467:118;;:::o;1591:222::-;1684:4;1722:2;1711:9;1707:18;1699:26;;1735:71;1803:1;1792:9;1788:17;1779:6;1735:71;:::i;:::-;1591:222;;;;:::o;1819:126::-;1856:7;1896:42;1889:5;1885:54;1874:65;;1819:126;;;:::o;1951:60::-;1979:3;2000:5;1993:12;;1951:60;;;:::o;2017:142::-;2067:9;2100:53;2118:34;2127:24;2145:5;2127:24;:::i;:::-;2118:34;:::i;:::-;2100:53;:::i;:::-;2087:66;;2017:142;;;:::o;2165:126::-;2215:9;2248:37;2279:5;2248:37;:::i;:::-;2235:50;;2165:126;;;:::o;2297:145::-;2366:9;2399:37;2430:5;2399:37;:::i;:::-;2386:50;;2297:145;;;:::o;2448:169::-;2554:56;2604:5;2554:56;:::i;:::-;2549:3;2542:69;2448:169;;:::o;2623:260::-;2735:4;2773:2;2762:9;2758:18;2750:26;;2786:90;2873:1;2862:9;2858:17;2849:6;2786:90;:::i;:::-;2623:260;;;;:::o;2889:96::-;2926:7;2955:24;2973:5;2955:24;:::i;:::-;2944:35;;2889:96;;;:::o;2991:108::-;3068:24;3086:5;3068:24;:::i;:::-;3063:3;3056:37;2991:108;;:::o;3105:105::-;3180:23;3197:5;3180:23;:::i;:::-;3175:3;3168:36;3105:105;;:::o;3216:108::-;3293:24;3311:5;3293:24;:::i;:::-;3288:3;3281:37;3216:108;;:::o;3330:::-;3407:24;3425:5;3407:24;:::i;:::-;3402:3;3395:37;3330:108;;:::o;3538:1623::-;3713:6;3708:3;3704:16;3805:4;3798:5;3794:16;3788:23;3824:63;3881:4;3876:3;3872:14;3858:12;3824:63;:::i;:::-;3730:167;3983:4;3976:5;3972:16;3966:23;4002:63;4059:4;4054:3;4050:14;4036:12;4002:63;:::i;:::-;3907:168;4156:4;4149:5;4145:16;4139:23;4175:61;4230:4;4225:3;4221:14;4207:12;4175:61;:::i;:::-;4085:161;4333:4;4326:5;4322:16;4316:23;4352:63;4409:4;4404:3;4400:14;4386:12;4352:63;:::i;:::-;4256:169;4511:4;4504:5;4500:16;4494:23;4530:63;4587:4;4582:3;4578:14;4564:12;4530:63;:::i;:::-;4435:168;4689:4;4682:5;4678:16;4672:23;4708:63;4765:4;4760:3;4756:14;4742:12;4708:63;:::i;:::-;4613:168;4875:4;4868:5;4864:16;4858:23;4894:63;4951:4;4946:3;4942:14;4928:12;4894:63;:::i;:::-;4791:176;5062:4;5055:5;5051:16;5045:23;5081:63;5138:4;5133:3;5129:14;5115:12;5081:63;:::i;:::-;4977:177;3682:1479;3538:1623;;:::o;5167:379::-;5338:4;5376:3;5365:9;5361:19;5353:27;;5390:149;5536:1;5525:9;5521:17;5512:6;5390:149;:::i;:::-;5167:379;;;;:::o;5552:143::-;5609:5;5640:6;5634:13;5625:22;;5656:33;5683:5;5656:33;:::i;:::-;5552:143;;;;:::o;5701:351::-;5771:6;5820:2;5808:9;5799:7;5795:23;5791:32;5788:119;;;5826:79;;:::i;:::-;5788:119;5946:1;5971:64;6027:7;6018:6;6007:9;6003:22;5971:64;:::i;:::-;5961:74;;5917:128;5701:351;;;;:::o;6058:118::-;6145:24;6163:5;6145:24;:::i;:::-;6140:3;6133:37;6058:118;;:::o;6182:442::-;6331:4;6369:2;6358:9;6354:18;6346:26;;6382:71;6450:1;6439:9;6435:17;6426:6;6382:71;:::i;:::-;6463:72;6531:2;6520:9;6516:18;6507:6;6463:72;:::i;:::-;6545;6613:2;6602:9;6598:18;6589:6;6545:72;:::i;:::-;6182:442;;;;;;:::o;6630:98::-;6681:6;6715:5;6709:12;6699:22;;6630:98;;;:::o;6734:147::-;6835:11;6872:3;6857:18;;6734:147;;;;:::o;6887:139::-;6976:6;6971:3;6966;6960:23;7017:1;7008:6;7003:3;6999:16;6992:27;6887:139;;;:::o;7032:386::-;7136:3;7164:38;7196:5;7164:38;:::i;:::-;7218:88;7299:6;7294:3;7218:88;:::i;:::-;7211:95;;7315:65;7373:6;7368:3;7361:4;7354:5;7350:16;7315:65;:::i;:::-;7405:6;7400:3;7396:16;7389:23;;7140:278;7032:386;;;;:::o;7424:271::-;7554:3;7576:93;7665:3;7656:6;7576:93;:::i;:::-;7569:100;;7686:3;7679:10;;7424:271;;;;:::o;7701:90::-;7735:7;7778:5;7771:13;7764:21;7753:32;;7701:90;;;:::o;7797:116::-;7867:21;7882:5;7867:21;:::i;:::-;7860:5;7857:32;7847:60;;7903:1;7900;7893:12;7847:60;7797:116;:::o;7919:137::-;7973:5;8004:6;7998:13;7989:22;;8020:30;8044:5;8020:30;:::i;:::-;7919:137;;;;:::o;8062:345::-;8129:6;8178:2;8166:9;8157:7;8153:23;8149:32;8146:119;;;8184:79;;:::i;:::-;8146:119;8304:1;8329:61;8382:7;8373:6;8362:9;8358:22;8329:61;:::i;:::-;8319:71;;8275:125;8062:345;;;;:::o;8413:169::-;8497:11;8531:6;8526:3;8519:19;8571:4;8566:3;8562:14;8547:29;;8413:169;;;;:::o;8588:153::-;8728:5;8724:1;8716:6;8712:14;8705:29;8588:153;:::o;8747:365::-;8889:3;8910:66;8974:1;8969:3;8910:66;:::i;:::-;8903:73;;8985:93;9074:3;8985:93;:::i;:::-;9103:2;9098:3;9094:12;9087:19;;8747:365;;;:::o;9118:419::-;9284:4;9322:2;9311:9;9307:18;9299:26;;9371:9;9365:4;9361:20;9357:1;9346:9;9342:17;9335:47;9399:131;9525:4;9399:131;:::i;:::-;9391:139;;9118:419;;;:::o;9543:332::-;9664:4;9702:2;9691:9;9687:18;9679:26;;9715:71;9783:1;9772:9;9768:17;9759:6;9715:71;:::i;:::-;9796:72;9864:2;9853:9;9849:18;9840:6;9796:72;:::i;:::-;9543:332;;;;;:::o;9881:152::-;10021:4;10017:1;10009:6;10005:14;9998:28;9881:152;:::o;10039:365::-;10181:3;10202:66;10266:1;10261:3;10202:66;:::i;:::-;10195:73;;10277:93;10366:3;10277:93;:::i;:::-;10395:2;10390:3;10386:12;10379:19;;10039:365;;;:::o;10410:419::-;10576:4;10614:2;10603:9;10599:18;10591:26;;10663:9;10657:4;10653:20;10649:1;10638:9;10634:17;10627:47;10691:131;10817:4;10691:131;:::i;:::-;10683:139;;10410:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "518600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"poolFee()": "309",
								"swapExactInputSingle(uint256)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 201,
									"end": 2354,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 622,
									"end": 700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 622,
									"end": 700,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 682,
									"end": 693,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 669,
									"end": 693,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 669,
									"end": 693,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 669,
									"end": 693,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 669,
									"end": 693,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 622,
									"end": 700,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1131,
									"end": 1137,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1159,
									"end": 1166,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1178,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1183,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1186,
									"end": 1265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1406,
									"end": 1413,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1395,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1331,
									"end": 1414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1424,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "375"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2354,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220721a7aa0dcf6d3b9e9e964932b451de059d2145bc8837c65880528d3e172ba4464736f6c63430008190033",
									".code": [
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "89FE6AA"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "73BD43AD"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "C31C9C07"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 201,
											"end": 2354,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 498,
											"end": 535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 498,
											"end": 535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1174,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1174,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1174,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 394,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 394,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 535,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 498,
											"end": 535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 344,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1447,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1458,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1385,
											"end": 1459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1459,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1385,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 344,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 1568,
											"end": 1576,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1514,
											"end": 1577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1577,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1514,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 344,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 272,
											"end": 314,
											"name": "PUSH",
											"source": 4,
											"value": "FFF9976782D46CC05630D1F6EBAB18B2324D6B14"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 531,
											"end": 535,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2055,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2098,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2134,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2170,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 2224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 2224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2318,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 2308,
											"end": 2335,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2308,
											"end": 2335,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2335,
											"name": "PUSH",
											"source": 4,
											"value": "414BF389"
										},
										{
											"begin": 2336,
											"end": 2342,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2308,
											"end": 2343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2308,
											"end": 2343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2308,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 2350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 2350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 394,
											"end": 433,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 748,
											"end": 758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 812,
											"end": 816,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 759,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 748,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 859,
											"end": 875,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 839,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2032,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2101,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 98,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7,
											"end": 98,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 91,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 72,
											"end": 92,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 61,
											"end": 92,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 61,
											"end": 92,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 104,
											"end": 219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 206,
											"end": 211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 189,
											"end": 212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 189,
											"end": 212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 177,
											"end": 213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 225,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 331,
											"end": 357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 418,
											"end": 435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 409,
											"end": 415,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 367,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 367,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 530,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 530,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 639,
											"end": 640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 629,
											"end": 641,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 776,
											"end": 853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 831,
											"end": 847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 831,
											"end": 847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 859,
											"end": 981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 932,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 925,
											"end": 930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 922,
											"end": 957,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 912,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 912,
											"end": 975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 961,
											"end": 973,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 912,
											"end": 975,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 912,
											"end": 975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1077,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1087,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1197,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1242,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1237,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1215,
											"end": 1238,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1243,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1246,
											"end": 1325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1436,
											"end": 1443,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1391,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1444,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1391,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1444,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1585,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1467,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1572,
											"end": 1577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1554,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1552,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1724,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1711,
											"end": 1720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1803,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1801,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1735,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1735,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1945,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1819,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1938,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1889,
											"end": 1894,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1939,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2011,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1951,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2159,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2017,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2118,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2145,
											"end": 2150,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2127,
											"end": 2151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2118,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2152,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2118,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2100,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2159,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2159,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2159,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2291,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2165,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2248,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2285,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2248,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2291,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2442,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2297,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2375,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2430,
											"end": 2435,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2399,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2399,
											"end": 2436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2399,
											"end": 2436,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2399,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2442,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2442,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2604,
											"end": 2609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2554,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2552,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2611,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2750,
											"end": 2776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2750,
											"end": 2776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2985,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2889,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2973,
											"end": 2978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2955,
											"end": 2979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 2979,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2955,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2944,
											"end": 2979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2944,
											"end": 2979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2985,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3099,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2991,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3086,
											"end": 3091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3068,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3092,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3068,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3093,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3210,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3105,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3197,
											"end": 3202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3180,
											"end": 3203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3203,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3180,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3324,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3216,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3293,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3293,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3293,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3293,
											"end": 3317,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3293,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3281,
											"end": 3318,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3438,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3330,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3425,
											"end": 3430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3407,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3431,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3407,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3432,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 5161,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3538,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3719,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3708,
											"end": 3711,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3720,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3794,
											"end": 3810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3881,
											"end": 3885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 3886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3870,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3824,
											"end": 3887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3887,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3824,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 3987,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 3981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3966,
											"end": 3989,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4059,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4057,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4050,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4036,
											"end": 4048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4002,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4065,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4002,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 4075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4156,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4230,
											"end": 4234,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4225,
											"end": 4228,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4221,
											"end": 4235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4175,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4236,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4175,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4085,
											"end": 4246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4337,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4326,
											"end": 4331,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4339,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4409,
											"end": 4413,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4404,
											"end": 4407,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4398,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4352,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4415,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4352,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4515,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4504,
											"end": 4509,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4500,
											"end": 4516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4517,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4530,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4587,
											"end": 4591,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4582,
											"end": 4585,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4564,
											"end": 4576,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4530,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4530,
											"end": 4593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4530,
											"end": 4593,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4530,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4435,
											"end": 4603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4693,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4682,
											"end": 4687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4672,
											"end": 4695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4760,
											"end": 4763,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4756,
											"end": 4770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4754,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4708,
											"end": 4771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4771,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4708,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4613,
											"end": 4781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4879,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4868,
											"end": 4873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4881,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4951,
											"end": 4955,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4946,
											"end": 4949,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4942,
											"end": 4956,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4928,
											"end": 4940,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4894,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 4957,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4894,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4791,
											"end": 4967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5066,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5055,
											"end": 5060,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5051,
											"end": 5067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5068,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5133,
											"end": 5136,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5115,
											"end": 5127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 5081,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5144,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5081,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 5161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 5161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 5161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 5161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5546,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5167,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5379,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5361,
											"end": 5380,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5353,
											"end": 5380,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5353,
											"end": 5380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5521,
											"end": 5538,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5518,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 5390,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5546,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5695,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5552,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5609,
											"end": 5614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5634,
											"end": 5647,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5683,
											"end": 5688,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5656,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5695,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 6052,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 5701,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5777,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5822,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5808,
											"end": 5817,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 5818,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5823,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5788,
											"end": 5907,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5788,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5788,
											"end": 5907,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5826,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 5826,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5905,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5826,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5788,
											"end": 5907,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5788,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5946,
											"end": 5947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6027,
											"end": 6034,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6018,
											"end": 6024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6007,
											"end": 6016,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6003,
											"end": 6025,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5971,
											"end": 6035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 6035,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5971,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 6035,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 6035,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5917,
											"end": 6045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 6052,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 6052,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 6052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 6052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 6052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6058,
											"end": 6176,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 6058,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6163,
											"end": 6168,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 6145,
											"end": 6169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6169,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6145,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6058,
											"end": 6176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6058,
											"end": 6176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6058,
											"end": 6176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6624,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 6182,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6371,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6358,
											"end": 6367,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6354,
											"end": 6372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6346,
											"end": 6372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6346,
											"end": 6372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 6450,
											"end": 6451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6435,
											"end": 6452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6432,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 6382,
											"end": 6453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6453,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 6382,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6531,
											"end": 6533,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6529,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6534,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 6463,
											"end": 6535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6463,
											"end": 6535,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6463,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6545,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6613,
											"end": 6615,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6602,
											"end": 6611,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6545,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 6545,
											"end": 6617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6545,
											"end": 6617,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6545,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6624,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6624,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6728,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 6630,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6709,
											"end": 6721,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6699,
											"end": 6721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6699,
											"end": 6721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6734,
											"end": 6881,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 6734,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6835,
											"end": 6846,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6857,
											"end": 6875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6857,
											"end": 6875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6734,
											"end": 6881,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6734,
											"end": 6881,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6734,
											"end": 6881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6734,
											"end": 6881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6734,
											"end": 6881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6887,
											"end": 7026,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6887,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6976,
											"end": 6982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6971,
											"end": 6974,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 7017,
											"end": 7018,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7003,
											"end": 7006,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6999,
											"end": 7015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6992,
											"end": 7019,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6887,
											"end": 7026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6887,
											"end": 7026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6887,
											"end": 7026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6887,
											"end": 7026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7418,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 7032,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7136,
											"end": 7139,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 7196,
											"end": 7201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 7164,
											"end": 7202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7202,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 7164,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7218,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7299,
											"end": 7305,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7294,
											"end": 7297,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7218,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 7218,
											"end": 7306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7218,
											"end": 7306,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7218,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7211,
											"end": 7306,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7211,
											"end": 7306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7315,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7373,
											"end": 7379,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7371,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7361,
											"end": 7365,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7354,
											"end": 7359,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7366,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7315,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 7315,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7315,
											"end": 7380,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7315,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7403,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7396,
											"end": 7412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7412,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7140,
											"end": 7418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7418,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7418,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7424,
											"end": 7695,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 7424,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7554,
											"end": 7557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7576,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7665,
											"end": 7668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7656,
											"end": 7662,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 7576,
											"end": 7669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7669,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7576,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7569,
											"end": 7669,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7569,
											"end": 7669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 7689,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7424,
											"end": 7695,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7424,
											"end": 7695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7424,
											"end": 7695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7424,
											"end": 7695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7424,
											"end": 7695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7701,
											"end": 7791,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 7701,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7778,
											"end": 7783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7771,
											"end": 7784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7764,
											"end": 7785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7753,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7753,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7701,
											"end": 7791,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7701,
											"end": 7791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7701,
											"end": 7791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7701,
											"end": 7791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7797,
											"end": 7913,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 7797,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 7867,
											"end": 7888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7888,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 7867,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7860,
											"end": 7865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7857,
											"end": 7889,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7847,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 7847,
											"end": 7907,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7847,
											"end": 7907,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 7847,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7797,
											"end": 7913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7797,
											"end": 7913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7919,
											"end": 8056,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 7919,
											"end": 8056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7973,
											"end": 7978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8004,
											"end": 8010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7998,
											"end": 8011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7989,
											"end": 8011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7989,
											"end": 8011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8020,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 8044,
											"end": 8049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8020,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 8020,
											"end": 8050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8020,
											"end": 8050,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 8020,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7919,
											"end": 8056,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7919,
											"end": 8056,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7919,
											"end": 8056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7919,
											"end": 8056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7919,
											"end": 8056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8062,
											"end": 8407,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 8062,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8129,
											"end": 8135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8180,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8157,
											"end": 8164,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8153,
											"end": 8176,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8149,
											"end": 8181,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8146,
											"end": 8265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8146,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 8146,
											"end": 8265,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8184,
											"end": 8263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8184,
											"end": 8263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 8184,
											"end": 8263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8184,
											"end": 8263,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8184,
											"end": 8263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8146,
											"end": 8265,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 8146,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 8382,
											"end": 8389,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8371,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8358,
											"end": 8380,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8329,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 8329,
											"end": 8390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8329,
											"end": 8390,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 8329,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8319,
											"end": 8390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8319,
											"end": 8390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8275,
											"end": 8400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8062,
											"end": 8407,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8062,
											"end": 8407,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8062,
											"end": 8407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8062,
											"end": 8407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8062,
											"end": 8407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8413,
											"end": 8582,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 8413,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8497,
											"end": 8508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8526,
											"end": 8529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8519,
											"end": 8538,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8571,
											"end": 8575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8566,
											"end": 8569,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8562,
											"end": 8576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8547,
											"end": 8576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8547,
											"end": 8576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8413,
											"end": 8582,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8413,
											"end": 8582,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8413,
											"end": 8582,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8413,
											"end": 8582,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8413,
											"end": 8582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8588,
											"end": 8741,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 8588,
											"end": 8741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8728,
											"end": 8733,
											"name": "PUSH",
											"source": 5,
											"value": "5354460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8724,
											"end": 8725,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8722,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8712,
											"end": 8726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8588,
											"end": 8741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8588,
											"end": 8741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8747,
											"end": 9112,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 8747,
											"end": 9112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8889,
											"end": 8892,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 8974,
											"end": 8975,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 8969,
											"end": 8972,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 8910,
											"end": 8976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8976,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 8910,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 8976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 8976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8985,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 9074,
											"end": 9077,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8985,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 8985,
											"end": 9078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8985,
											"end": 9078,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8985,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9105,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9098,
											"end": 9101,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9094,
											"end": 9106,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9087,
											"end": 9106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9087,
											"end": 9106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8747,
											"end": 9112,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8747,
											"end": 9112,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8747,
											"end": 9112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8747,
											"end": 9112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9118,
											"end": 9537,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 9118,
											"end": 9537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9322,
											"end": 9324,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9311,
											"end": 9320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9299,
											"end": 9325,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9299,
											"end": 9325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9371,
											"end": 9380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9365,
											"end": 9369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9381,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9357,
											"end": 9358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9355,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9342,
											"end": 9359,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9335,
											"end": 9382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9399,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 9525,
											"end": 9529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9399,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 9399,
											"end": 9530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9399,
											"end": 9530,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 9399,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9391,
											"end": 9530,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9391,
											"end": 9530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9118,
											"end": 9537,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9118,
											"end": 9537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9118,
											"end": 9537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9118,
											"end": 9537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9543,
											"end": 9875,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 9543,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9664,
											"end": 9668,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9702,
											"end": 9704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9691,
											"end": 9700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9679,
											"end": 9705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9679,
											"end": 9705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9715,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 9783,
											"end": 9784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9781,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9768,
											"end": 9785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9765,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9715,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 9715,
											"end": 9786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9715,
											"end": 9786,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 9715,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9796,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 9864,
											"end": 9866,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9853,
											"end": 9862,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 9846,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9796,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 9796,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9796,
											"end": 9868,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 9796,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9543,
											"end": 9875,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9543,
											"end": 9875,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9543,
											"end": 9875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9543,
											"end": 9875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9543,
											"end": 9875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9543,
											"end": 9875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9881,
											"end": 10033,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 9881,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10021,
											"end": 10025,
											"name": "PUSH",
											"source": 5,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10017,
											"end": 10018,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10009,
											"end": 10015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10005,
											"end": 10019,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9881,
											"end": 10033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9881,
											"end": 10033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10404,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 10039,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10181,
											"end": 10184,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10202,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 10266,
											"end": 10267,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10261,
											"end": 10264,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10202,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 10202,
											"end": 10268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10202,
											"end": 10268,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 10202,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10195,
											"end": 10268,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10195,
											"end": 10268,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10277,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 10366,
											"end": 10369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10277,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 10277,
											"end": 10370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10277,
											"end": 10370,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 10277,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10395,
											"end": 10397,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10393,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10386,
											"end": 10398,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 10398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 10398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10410,
											"end": 10829,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 10410,
											"end": 10829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10614,
											"end": 10616,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10603,
											"end": 10612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10663,
											"end": 10672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10657,
											"end": 10661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10653,
											"end": 10673,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10649,
											"end": 10650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10638,
											"end": 10647,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10634,
											"end": 10651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10674,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10691,
											"end": 10822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 10817,
											"end": 10821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10691,
											"end": 10822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 10691,
											"end": 10822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10691,
											"end": 10822,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 10691,
											"end": 10822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10410,
											"end": 10829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10410,
											"end": 10829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10410,
											"end": 10829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10410,
											"end": 10829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/UniswapV3SingleHopSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"poolFee()": "089fe6aa",
							"swapExactInputSingle(uint256)": "73bd43ad",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInputSingle(uint256)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\",\"params\":{\"amountIn\":\"The exact amount of DAI that will be swapped for WETH9.\"},\"returns\":{\"amountOut\":\"The amount of WETH9 received.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputSingle(uint256)\":{\"notice\":\"swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV3SingleHopSwap.sol\":\"UniswapV3SingleHopSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/UniswapV3SingleHopSwap.sol\":{\"keccak256\":\"0xda4b3af3d0e0c62fe69d6009969b8f52a472d68537d6a5d3cc6339a8c6246a02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3951b72d834023c3530ce4e5acf0faef78a88eb3d17f3beaff6a0fe6c75bcd9d\",\"dweb:/ipfs/QmaX2DLfNkuq8Jd4HdJWfipQpTqcrrkTKdYkJJTRjXmxMb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"swapExactInputSingle(uint256)": {
								"notice": "swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 92,
							"src": "91:83:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "374:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 99,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "399:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 101,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "425:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 103,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "445:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "472:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "498:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "524:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "558:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 113,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "334:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "877:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "877:22:2"
													},
													"referencedDeclaration": 115,
													"src": "877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:2"
									},
									"scope": 191,
									"src": "851:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1002:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 125,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1022:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 127,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1049:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1075:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1101:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "968:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1436:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$135_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 135,
														"src": "1436:16:2"
													},
													"referencedDeclaration": 135,
													"src": "1436:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1496:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:2"
									},
									"scope": 191,
									"src": "1416:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1562:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1587:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1613:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1633:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1660:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1686:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1713:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1746:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 159,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "1521:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2066:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "2066:23:2"
													},
													"referencedDeclaration": 161,
													"src": "2066:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2133:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:2"
									},
									"scope": 191,
									"src": "2039:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2192:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2212:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2239:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2265:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2292:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "2157:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2638:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$181_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2638:17:2"
													},
													"referencedDeclaration": 181,
													"src": "2638:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:2"
									},
									"scope": 191,
									"src": "2617:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "280:2439:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							362
						]
					},
					"id": 363,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 78,
							"src": "71:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "690:229:3",
										"statements": [
											{
												"assignments": [
													207,
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "715:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 214,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 217,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "812:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 218,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "818:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "822:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 212,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 210,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 225,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "859:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 231,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "890:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 232,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 234,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 229,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "839:73:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:3",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "619:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:3"
									},
									"scope": 362,
									"src": "561:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1314:206:3",
										"statements": [
											{
												"assignments": [
													254,
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1325:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1339:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 255,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 261,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 264,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1420:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1424:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 257,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1449:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 271,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1461:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1492:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 278,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 280,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 275,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:3"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:3",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 362,
									"src": "1211:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1975:205:3",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "2000:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2080:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2084:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "2021:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2109:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 317,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2121:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 323,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2152:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 324,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 326,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:3"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:3",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1926:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 362,
									"src": "1873:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2431:104:3",
										"statements": [
											{
												"assignments": [
													344,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2442:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 349,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 345,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2460:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2475:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:3",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2407:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:3"
									},
									"scope": 362,
									"src": "2370:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "129:2408:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:3"
				},
				"id": 3
			},
			"contracts/UniswapV3SingleHopSwap.sol": {
				"ast": {
					"absolutePath": "contracts/UniswapV3SingleHopSwap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						],
						"TransferHelper": [
							362
						],
						"UniswapV3SingleHopSwap": [
							449
						]
					},
					"id": 450,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 450,
							"sourceUnit": 363,
							"src": "57:70:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 450,
							"sourceUnit": 192,
							"src": "128:68:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UniswapV3SingleHopSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 449,
							"linearizedBaseContracts": [
								449
							],
							"name": "UniswapV3SingleHopSwap",
							"nameLocation": "210:22:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 369,
									"mutability": "constant",
									"name": "WETH",
									"nameLocation": "265:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 449,
									"src": "248:66:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 367,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307866466639393736373832643436434330353633304431663665424162313862323332346436423134",
										"id": 368,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "272:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 372,
									"mutability": "constant",
									"name": "USDC",
									"nameLocation": "337:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 449,
									"src": "320:66:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 370,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "320:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831633744344231393643623043374230316437343346626336313136613930323337394337323338",
										"id": 371,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "344:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 375,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "423:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 449,
									"src": "394:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$191",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 374,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 373,
											"name": "ISwapRouter",
											"nameLocations": [
												"394:11:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 191,
											"src": "394:11:4"
										},
										"referencedDeclaration": 191,
										"src": "394:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$191",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "089fe6aa",
									"id": 378,
									"mutability": "constant",
									"name": "poolFee",
									"nameLocation": "521:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 449,
									"src": "498:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 376,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "498:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "531:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "659:41:4",
										"statements": [
											{
												"expression": {
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 384,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "669:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 385,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "682:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "669:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "669:24:4"
											}
										]
									},
									"id": 389,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "647:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "635:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$191",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 380,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 379,
														"name": "ISwapRouter",
														"nameLocations": [
															"635:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 191,
														"src": "635:11:4"
													},
													"referencedDeclaration": 191,
													"src": "635:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:25:4"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:0:4"
									},
									"scope": 449,
									"src": "622:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "1259:1091:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "1417:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1423:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1427:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1423:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 405,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1443:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV3SingleHopSwap_$449",
																		"typeString": "contract UniswapV3SingleHopSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV3SingleHopSwap_$449",
																		"typeString": "contract UniswapV3SingleHopSwap"
																	}
																],
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1435:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 403,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1435:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1435:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "1450:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 397,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1385:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1400:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "1385:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1385:74:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "1541:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 416,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "1555:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1547:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 414,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1547:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1547:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "1568:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 410,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1514:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1529:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "1514:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1514:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "1514:63:4"
											},
											{
												"assignments": [
													425
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1867:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 447,
														"src": "1825:48:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 424,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 423,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1825:11:4",
																	"1837:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 115,
																"src": "1825:34:4"
															},
															"referencedDeclaration": 115,
															"src": "1825:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"id": 428,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "1950:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "1982:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "2009:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 431,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2045:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2049:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2045:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 433,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2083:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2089:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2083:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 435,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2126:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2208:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 426,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1888:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1900:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "1888:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1941:7:4",
														"1972:8:4",
														"2004:3:4",
														"2034:9:4",
														"2073:8:4",
														"2116:8:4",
														"2152:16:4",
														"2189:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1888:336:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1825:399:4"
											},
											{
												"expression": {
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "2296:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 443,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2336:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 441,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "2308:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2319:16:4",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "2308:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2308:35:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2296:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "2296:47:4"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "710:459:4",
										"text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
									},
									"functionSelector": "73bd43ad",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "1183:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1212:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1204:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:18:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1248:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1240:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:19:4"
									},
									"scope": 449,
									"src": "1174:1176:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 450,
							"src": "201:2153:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2322:4"
				},
				"id": 4
			}
		}
	}
}